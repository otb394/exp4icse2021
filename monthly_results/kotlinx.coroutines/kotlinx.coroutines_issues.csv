id,created_at,closed_at,state,comments,title
2220,2020-08-31 05:10:00.000000000,2020-08-31 16:45:52.000000000,closed,8,[Feature Request] Java synchronize()-like synchornization
2219,2020-08-28 01:57:00.000000000,1970-01-01 00:00:00.000000001,open,1,Upgraded Kotlin version behind a patch bump
2218,2020-08-26 14:58:11.000000000,1970-01-01 00:00:00.000000001,open,2,suspendCoroutine's continuation.resume() work with Result.failure(Throwable) will throw exception
2217,2020-08-26 10:55:28.000000000,2020-08-28 10:13:53.000000000,closed,4,Using asFlux on a flow with reactor leads to NoSuchMethodError
2216,2020-08-25 14:36:09.000000000,2020-08-25 15:25:03.000000000,closed,0,Pr/2040
2215,2020-08-25 11:58:14.000000000,1970-01-01 00:00:00.000000001,open,5,InvalidMutabilityException when executing Ktor request ion iOS with Kotlin 1.4.0
2214,2020-08-24 16:26:06.000000000,1970-01-01 00:00:00.000000001,open,1,[Feature request] Add onEachLatest for Flow
2213,2020-08-24 16:20:40.000000000,1970-01-01 00:00:00.000000001,open,1,[Feature request] Add awaitCancellation()
2212,2020-08-24 15:10:07.000000000,1970-01-01 00:00:00.000000001,open,4,java.lang.ClassNotFoundException: kotlin.coroutines.Continuation
2211,2020-08-22 03:03:50.000000000,2020-08-24 12:25:04.000000000,closed,1,Fix typos in gradle.properties
2210,2020-08-22 00:23:49.000000000,2020-08-22 00:56:28.000000000,closed,1,1.3.9-native-mt missing from Maven Central
2209,2020-08-21 19:20:41.000000000,1970-01-01 00:00:00.000000001,open,7,Test fails when -Xno-call-assertions is omitted
2208,2020-08-21 18:00:39.000000000,2020-08-21 18:01:01.000000000,closed,0,Typo in the 1.0.0-RC changelog
2207,2020-08-20 16:40:34.000000000,1970-01-01 00:00:00.000000001,open,2,RFC: TC39 observable compatibility
2206,2020-08-19 11:04:02.000000000,2020-08-19 12:43:57.000000000,closed,4,kotlinx-coroutines-core-native:1.3.9 not found for Kotlin Multiplatform
2205,2020-08-19 03:33:46.000000000,2020-08-24 12:27:15.000000000,closed,1,Kotlin and Slack channel shields
2204,2020-08-18 20:09:27.000000000,2020-08-24 12:25:27.000000000,closed,0,Cherry-picks from native-mt branch to reduce maintenance burden
2203,2020-08-17 14:13:20.000000000,2020-08-17 15:26:57.000000000,closed,0,Version 1.3.9
2202,2020-08-17 12:13:46.000000000,1970-01-01 00:00:00.000000001,open,0,Unexpected uncompleted Job on tests with Channel's
2201,2020-08-16 22:39:04.000000000,2020-08-18 23:30:23.000000000,closed,3,Fix some sample outputs not being displayed in flow.md
2200,2020-08-16 15:41:42.000000000,2020-08-17 11:54:55.000000000,closed,1,Add missing 'the'
2199,2020-08-15 08:41:16.000000000,2020-08-15 16:21:50.000000000,closed,1,Update typo in flow.md
2198,2020-08-15 04:42:35.000000000,2020-08-15 17:31:57.000000000,closed,3,1.3.9 core-native and core-common missing from Maven Central/Bintray
2197,2020-08-14 18:06:11.000000000,1970-01-01 00:00:00.000000001,open,0,CoroutinesTimeout replacement for JUnit 5
2196,2020-08-14 12:56:45.000000000,2020-08-14 13:17:56.000000000,closed,1,Update flow.md
2195,2020-08-13 00:51:18.000000000,1970-01-01 00:00:00.000000001,open,1,ThreadContextElements are not nested properly
2194,2020-08-11 22:51:39.000000000,2020-08-25 13:39:28.000000000,closed,2,[HELP] A way of knowing whether a flow is being collected (analogue of LiveData's onActive()/onInactive())
2193,2020-08-11 17:14:28.000000000,1970-01-01 00:00:00.000000001,open,6,No way to check if there is a queued/buffered item awaiting in Flow
2192,2020-08-11 14:10:06.000000000,2020-08-17 15:28:13.000000000,closed,3,Crash because of missing proguard rule?
2191,2020-08-11 13:51:34.000000000,2020-08-12 17:51:36.000000000,closed,0,feat: updated debugging coroutines
2190,2020-08-11 09:24:30.000000000,1970-01-01 00:00:00.000000001,open,2,BlockHound detects `kotlinx.coroutines.reactive.ReactiveFlowKt#<clinit>` during `Mono.awaitFirst()`
2189,2020-08-10 22:36:28.000000000,2020-08-19 12:50:14.000000000,closed,2,Kotlin Flow never collects info on unit testing
2188,2020-08-10 19:55:38.000000000,1970-01-01 00:00:00.000000001,open,0,generate a flow of interval (similar to Flowable.interval in Rx)
2187,2020-08-08 16:22:32.000000000,2020-08-20 16:12:04.000000000,closed,0,Fix sporadic ConcurrentWeakMapTest failures
2186,2020-08-08 13:09:12.000000000,2020-08-08 15:36:02.000000000,closed,1,Flow timer
2185,2020-08-08 12:56:51.000000000,2020-08-08 12:59:06.000000000,closed,0,Flow timer
2184,2020-08-06 18:53:40.000000000,1970-01-01 00:00:00.000000001,open,2,Job Cancellation Exception
2183,2020-08-06 06:47:20.000000000,1970-01-01 00:00:00.000000001,open,2,short circuiting reductions in flows
2182,2020-08-05 00:28:40.000000000,1970-01-01 00:00:00.000000001,open,1,Ambiguous method error when using RxConvert from Java
2181,2020-08-05 00:23:37.000000000,2020-08-05 18:25:38.000000000,closed,1,Not catching Exception in suspend function with Result<T> as return type
2180,2020-08-04 19:55:20.000000000,2020-08-05 17:24:10.000000000,closed,1,Add missing article
2179,2020-08-03 21:26:32.000000000,2020-08-04 12:33:11.000000000,closed,1,An uncatched exception from Java produces no backtrace
2178,2020-08-01 22:13:58.000000000,1970-01-01 00:00:00.000000001,open,0,Handle undeliverable errors in rxObservable
2177,2020-08-01 17:53:08.000000000,2020-08-05 20:23:28.000000000,closed,1,Should close CoroutineScope in object of class before make reference null on object?
2176,2020-08-01 05:28:30.000000000,2020-08-03 17:57:37.000000000,closed,3,Behavioral discrepency between callbackFlow lambda invocation on JVM vs native/JS
2175,2020-07-31 11:15:08.000000000,1970-01-01 00:00:00.000000001,open,0,JDK class shows up as <ERROR CLASS> in the docs
2174,2020-07-31 02:38:47.000000000,2020-08-08 15:30:25.000000000,closed,5,Flow.catch() doesn't actually catch exceptions
2173,2020-07-30 09:20:30.000000000,1970-01-01 00:00:00.000000001,open,1,Inconsistent handling of undeliverable errors in RX builders
2172,2020-07-30 07:09:25.000000000,2020-07-30 08:58:24.000000000,closed,1,Channel based DirectByteBufferPool results in deadlock
2171,2020-07-29 16:55:34.000000000,2020-08-03 04:30:07.000000000,closed,0,Building on a Coroutine Timer
2170,2020-07-28 15:12:46.000000000,2020-08-24 13:54:41.000000000,closed,9,Crash with kotlinx.coroutines.JobCancellationException
2169,2020-07-28 11:50:25.000000000,2020-07-28 15:13:11.000000000,closed,2,Modify StateFlow operators to return StateFlow instead of Flow
2168,2020-07-27 22:48:41.000000000,2020-08-03 13:30:40.000000000,closed,3,java.lang.VerifyError: Bad type on operand stack
2167,2020-07-27 13:30:04.000000000,2020-07-31 18:30:53.000000000,closed,2,Unresolved reference: test
2166,2020-07-27 10:48:35.000000000,1970-01-01 00:00:00.000000001,open,1," access denied (""java.lang.RuntimePermission"" ""modifyThread"")"
2165,2020-07-27 08:40:12.000000000,1970-01-01 00:00:00.000000001,open,3,Added a `mapIterable` operator
2164,2020-07-26 01:39:45.000000000,2020-08-04 13:01:41.000000000,closed,4,feature: Add setup
2163,2020-07-24 14:10:45.000000000,1970-01-01 00:00:00.000000001,open,0,StateFlow unreferenced compileKotlinIos - error multiplatform
2162,2020-07-23 05:17:39.000000000,1970-01-01 00:00:00.000000001,open,0,"Documentation around CoroutineScope in ""Extract function refactoring"" section is misleading"
2161,2020-07-23 03:36:55.000000000,2020-08-03 13:30:22.000000000,closed,3,Android 7 - Fatal Exception: kotlinx.coroutines.CoroutinesInternalError
2160,2020-07-22 21:30:10.000000000,2020-07-22 21:44:31.000000000,closed,1,Very obscure error when not all subclasses of a sealed class are serializable
2159,2020-07-22 14:36:18.000000000,1970-01-01 00:00:00.000000001,open,1,Coroutine equivalent of Thread.currentThread() requires a !! cast
2158,2020-07-22 03:25:58.000000000,1970-01-01 00:00:00.000000001,open,4,- add 32bit
2157,2020-07-22 02:38:37.000000000,1970-01-01 00:00:00.000000001,open,0,Support for Mingw86
2156,2020-07-21 19:42:46.000000000,2020-08-10 19:12:23.000000000,closed,0,Support context in Flow.asPublisher and similar methods
2155,2020-07-21 18:48:38.000000000,2020-08-17 15:27:01.000000000,closed,0,Support context in Flow.asPublisher and similar methods
2154,2020-07-21 01:54:50.000000000,2020-07-21 20:05:01.000000000,closed,2,Add a keep rule for AndroidDispatcherFactory for R8 version > 1.6.0
2153,2020-07-20 21:52:33.000000000,2020-07-23 04:40:38.000000000,closed,2,Unexpected exception cause when there was no one
2152,2020-07-20 17:56:13.000000000,1970-01-01 00:00:00.000000001,open,3,suspendCancellableCoroutine not blocking in runBlocking(Test)
2151,2020-07-20 15:52:28.000000000,1970-01-01 00:00:00.000000001,open,0,Uncaught Kotlin exception: kotlin.native.concurrent.InvalidMutabilityException: mutation attempt of frozen kotlin.native.internal.Ref
2150,2020-07-20 14:12:08.000000000,2020-07-20 16:07:37.000000000,closed,1,"当minifyEnabled为true的时候，Retrofit+okhttp+kotlin 协程（Coroutine）进行网络请求获取不到数据，得到的结果为 BaseResponse(data=null, errorCode=0, errorMsg=null)"
2149,2020-07-20 13:06:28.000000000,1970-01-01 00:00:00.000000001,open,0,sample operator with emitLast argument
2148,2020-07-19 11:01:54.000000000,1970-01-01 00:00:00.000000001,open,2,Add debounce selector
2147,2020-07-17 22:37:36.000000000,2020-07-20 20:38:04.000000000,closed,3,deferred.await() with try-catch inside a launch{} is cancelling all coroutines in a scope when exception occur.
2146,2020-07-17 19:43:06.000000000,2020-07-21 20:21:24.000000000,closed,1,Stabilize API surface for coroutines debugger
2145,2020-07-17 12:47:54.000000000,2020-07-17 13:30:00.000000000,closed,1,Fix hanging RunInterruptibleStressTest on Windows with JDK 1.6
2144,2020-07-17 11:34:43.000000000,2020-08-17 15:27:01.000000000,closed,1,runInterruptibleStressTest hangs on JDK 1.6 on Windows
2143,2020-07-17 06:21:31.000000000,1970-01-01 00:00:00.000000001,open,6,why this scene need wait?
2142,2020-07-16 21:34:18.000000000,2020-07-17 01:03:03.000000000,closed,0,Version 1.3.8
2141,2020-07-16 20:28:15.000000000,2020-07-16 20:56:13.000000000,closed,0,Increase timeout in the example to make sure it fails with threads
2140,2020-07-16 16:13:01.000000000,2020-07-16 18:31:02.000000000,closed,1,StateFlow - Custom equality predicate
2139,2020-07-15 20:07:34.000000000,2020-07-16 19:19:54.000000000,closed,0,Replace scanReduce with runningReduce to be consistent with Kotlin st…
2138,2020-07-15 18:24:17.000000000,1970-01-01 00:00:00.000000001,open,0,native-mt: MutableStateFlow cannot be frozen
2137,2020-07-15 13:47:04.000000000,2020-07-20 13:01:42.000000000,closed,4,Key for CustomCoroutineExceptionHandler
2136,2020-07-14 23:29:08.000000000,2020-08-18 12:53:48.000000000,closed,2,kotlinx-coroutines-core-common:1.3.7-1.4-M3 seems missing on kotlinx
2135,2020-07-13 17:15:17.000000000,2020-07-17 01:03:05.000000000,closed,1,"Coroutine example does not run out of memory when run with threads, despite the docs saying that it should"
2134,2020-07-12 22:00:49.000000000,2020-07-14 19:42:36.000000000,closed,1,Fatal exception in coroutines machinery for DispatchedContinuation
2133,2020-07-12 11:42:18.000000000,2020-07-13 12:33:19.000000000,closed,1,crash : Dispatchers.Main is missing
2132,2020-07-11 13:00:25.000000000,1970-01-01 00:00:00.000000001,open,3,How do i fix “Job was Cancelled” exception?
2131,2020-07-10 18:12:55.000000000,2020-07-16 20:31:14.000000000,closed,0,Consistent toString for MainCoroutineDispatcher implementations
2130,2020-07-10 11:56:01.000000000,1970-01-01 00:00:00.000000001,open,3,Deferred.awaitResult()
2129,2020-07-09 02:10:05.000000000,2020-07-17 00:34:41.000000000,closed,0,Coroutines debugger should keep weak references to running coroutines
2128,2020-07-08 20:37:12.000000000,1970-01-01 00:00:00.000000001,open,3,Flow ThrottleFirst and ThrottleLatest operators
2127,2020-07-08 17:59:00.000000000,2020-07-09 11:03:24.000000000,closed,0,Fix examples in docs for combine and zip operators
2126,2020-07-08 12:43:05.000000000,2020-07-08 13:06:40.000000000,closed,2,NoSuchMethodError
2125,2020-07-07 14:14:30.000000000,2020-07-08 17:09:18.000000000,closed,8,IllegalStateException: Already resumed
2124,2020-07-07 13:25:04.000000000,2020-07-16 19:33:32.000000000,closed,0,Fix race in Flow.asPublisher
2123,2020-07-06 13:56:01.000000000,1970-01-01 00:00:00.000000001,open,5,Exception while trying to handle coroutine exception
2122,2020-07-05 21:31:00.000000000,1970-01-01 00:00:00.000000001,open,1,Guide: don't use GlobalScope in first example
2121,2020-07-03 17:40:20.000000000,2020-07-03 17:42:17.000000000,closed,0,Fix typos in docs
2120,2020-07-03 12:42:16.000000000,2020-07-03 13:10:54.000000000,closed,2,StateFlow in Multiplatform common code
2119,2020-07-02 19:59:55.000000000,2020-07-02 22:13:01.000000000,closed,0,Fix ensureActive to work in the empty context case
2118,2020-07-02 12:21:54.000000000,2020-07-02 12:44:01.000000000,closed,0,Do not print error message to the console when we've failed to instal…
2117,2020-07-01 18:19:59.000000000,2020-07-17 01:03:05.000000000,closed,1,Debugger retains strong reference to all coroutines
2116,2020-07-01 05:58:13.000000000,2020-07-02 14:18:49.000000000,closed,2,Android crashes when opening profile
2115,2020-06-30 01:00:58.000000000,2020-07-03 14:01:27.000000000,closed,1,sending or offering inside block of code on another thread kotlin/native
2114,2020-06-29 23:58:21.000000000,2020-07-03 14:46:33.000000000,closed,1,Detach from 'suspendCancellableCoroutine' block after cancellation
2113,2020-06-29 20:12:36.000000000,2020-06-30 13:07:33.000000000,closed,1,VerifierError: Call to wrong <init> method
2112,2020-06-29 15:22:54.000000000,2020-07-20 12:16:23.000000000,closed,2,Fix docs for CancellableContinuation
2111,2020-06-29 11:29:15.000000000,1970-01-01 00:00:00.000000001,open,8,Release coroutine block after lazy start
2110,2020-06-28 07:02:56.000000000,1970-01-01 00:00:00.000000001,open,1,Blocking calls wait indefinitely when preceded by non blocking call
2109,2020-06-27 16:10:26.000000000,2020-07-21 18:49:40.000000000,closed,16,Kotlin 1.3.72 - Race Condition when using FlowAsPublisher with a multi-threaded consumer
2108,2020-06-26 20:54:04.000000000,1970-01-01 00:00:00.000000001,open,1,Flow not emitting after a transaction that deletes then inserts room entity
2107,2020-06-26 17:22:14.000000000,2020-06-26 17:53:55.000000000,closed,0,Docs: Self-links on classes are broken
2106,2020-06-25 19:00:17.000000000,2020-06-25 19:03:20.000000000,closed,3,Allow any suspending function to be a clause in the select expression
2105,2020-06-25 12:19:30.000000000,1970-01-01 00:00:00.000000001,open,2,should close a channel for infinite sequence of elements?
2104,2020-06-24 07:52:52.000000000,1970-01-01 00:00:00.000000001,open,2,ChildCancelledException when using Rx Observable.asFlow() extension within combine()
2103,2020-06-24 06:26:17.000000000,2020-06-26 00:53:49.000000000,closed,1,Recover stack trace with CompletableDeferred?
2102,2020-06-22 19:39:01.000000000,1970-01-01 00:00:00.000000001,open,2,kotlinx-coroutines-test. withContext {...} in liveData {...} doesn't switch back to the previous context after its finish
2101,2020-06-22 13:37:51.000000000,2020-07-10 18:59:29.000000000,closed,1,A broken link at CoroutineScope 
2100,2020-06-22 06:55:13.000000000,1970-01-01 00:00:00.000000001,open,3,java.lang.NoClassDefFoundError: kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
2099,2020-06-21 19:51:31.000000000,2020-07-10 19:01:45.000000000,closed,1,`.scan` first element is emitted before `.onStart`
2098,2020-06-21 17:07:35.000000000,2020-07-03 17:47:18.000000000,closed,2,Fix typos
2097,2020-06-19 16:46:33.000000000,2020-06-19 20:54:53.000000000,closed,4,runCatching inside flow.map throw an error : org.jetbrains.kotlin.codegen.CompilationException: Couldn't transform method node
2096,2020-06-19 15:00:27.000000000,1970-01-01 00:00:00.000000001,open,1,JobSupport: non-atomic adding to a Job's list of listeners
2095,2020-06-18 15:21:13.000000000,2020-06-18 17:40:48.000000000,closed,2,Exception transparency violation in Flows
2094,2020-06-18 12:14:56.000000000,2020-06-18 15:59:12.000000000,closed,1,UnitSerializer naming inconsistency
2093,2020-06-16 22:33:59.000000000,2020-06-17 15:43:28.000000000,closed,1,Minor improvements of debugging experience
2092,2020-06-16 15:54:33.000000000,1970-01-01 00:00:00.000000001,open,0,Flow.materialize/dematerialize operators
2091,2020-06-16 15:37:56.000000000,2020-06-16 22:31:46.000000000,closed,1,Fix missing unbox state in native runBlocking
2090,2020-06-15 00:53:54.000000000,2020-06-15 00:55:14.000000000,closed,1,Coroutine
2089,2020-06-14 15:33:25.000000000,1970-01-01 00:00:00.000000001,open,3,CancellableContinuation.invokeOnCancellation cause is inconsistent and breaks its own contract
2088,2020-06-12 07:01:07.000000000,1970-01-01 00:00:00.000000001,open,1,Request `awaitSingleOrNull` for reactive
2087,2020-06-11 17:56:24.000000000,1970-01-01 00:00:00.000000001,open,2,The API for determining `Job` states is a bit messy
2086,2020-06-11 17:00:57.000000000,2020-06-16 12:35:31.000000000,closed,2,"Usually, `await` throws a wrong exception for representing a failure of a `Deferred` (e.g., of an `async` coroutine)"
2085,2020-06-09 16:43:27.000000000,2020-06-09 18:54:29.000000000,closed,3,Kotlinx Coroutines upgrade to 1.3.7 causes VerifyError
2084,2020-06-05 14:50:10.000000000,2020-06-05 15:02:20.000000000,closed,1,Linux ARM artifacts not present on Maven
2083,2020-06-05 09:13:46.000000000,2020-06-16 12:37:15.000000000,closed,1,Is there any plan for androidArm64?
2082,2020-06-05 07:42:58.000000000,1970-01-01 00:00:00.000000001,open,5,Inconsistency between Flow combine and RxJava combineLatest
2081,2020-06-04 20:44:21.000000000,2020-06-04 21:26:37.000000000,closed,10,Should (at least some) basic operators be implemented specifically for StateFlow (e.g. map)
2080,2020-06-04 01:12:16.000000000,1970-01-01 00:00:00.000000001,open,3,Create a builder for StateFlow from a flow and a function to return the current value
2079,2020-06-03 22:11:25.000000000,1970-01-01 00:00:00.000000001,open,1,Publisher.awaitOne doesn't properly follow the reactive-streams specification
2078,2020-06-03 13:24:55.000000000,2020-07-16 19:30:33.000000000,closed,3,Rename 'foo' function to 'simple' in flow docs
2077,2020-06-03 11:16:09.000000000,2020-06-05 00:07:34.000000000,closed,5,CompletableJob doesn't finish when complete() is called
2076,2020-06-02 14:28:07.000000000,2020-06-03 12:16:24.000000000,closed,5,Improve grammar in docs/Basics
2075,2020-06-01 20:43:35.000000000,2020-06-02 11:20:57.000000000,closed,0,Fix jvm dependency on Android annotations
2074,2020-06-01 17:27:44.000000000,1970-01-01 00:00:00.000000001,open,2,"Refactor mpp/native build, introduce ""concurrent"" source set, test launcher"
2073,2020-06-01 07:21:34.000000000,2020-06-01 12:26:04.000000000,closed,1,引入第三方库构建运行报错
2072,2020-05-31 03:46:38.000000000,2020-06-02 11:13:54.000000000,closed,3,StateFlow: Make conflation optional
2071,2020-05-30 19:44:57.000000000,2020-06-01 11:22:52.000000000,closed,1,Fix word omission
2070,2020-05-30 09:25:40.000000000,1970-01-01 00:00:00.000000001,open,2,Get name of coroutine executing from within kotlinx.coroutines library
2069,2020-05-29 23:45:37.000000000,1970-01-01 00:00:00.000000001,open,12,Introduce SharedFlow and sharing operators
2068,2020-05-28 23:54:04.000000000,1970-01-01 00:00:00.000000001,open,1,"""Bad type on operand stack"" occurs when a caught exception is passed to another context"
2067,2020-05-28 18:28:18.000000000,2020-06-01 11:28:27.000000000,closed,1,Compiler crash on suspended recursive inner fuction
2066,2020-05-27 21:42:19.000000000,2020-07-16 18:46:07.000000000,closed,0,Flow.transformWhile operator
2065,2020-05-27 20:36:56.000000000,2020-07-17 01:03:04.000000000,closed,0,Flow.transformWhile operator
2064,2020-05-27 14:01:41.000000000,1970-01-01 00:00:00.000000001,open,1,FreezingException not caught when switching context on native
2063,2020-05-27 11:09:51.000000000,2020-05-27 12:58:12.000000000,closed,0,Fixed val counter AtomicInteger in shared state example
2062,2020-05-26 16:16:58.000000000,2020-05-27 12:58:12.000000000,closed,1,var and Atomic
2061,2020-05-26 16:07:45.000000000,2020-05-29 12:54:21.000000000,closed,8,Remove keep rules mentioning kotlinx.coroutines.android
2060,2020-05-26 16:03:50.000000000,2020-05-28 18:58:48.000000000,closed,0,Adopt Kotlin/JS for 1.4-M2
2059,2020-05-26 13:39:04.000000000,2020-05-26 17:03:29.000000000,closed,2,Deprecated feature:  .asListenableFuture()
2058,2020-05-26 11:34:09.000000000,2020-05-26 23:49:25.000000000,closed,1,Kotlin/Native wasm32 target support
2057,2020-05-25 18:03:32.000000000,2020-05-27 12:57:22.000000000,closed,0,Properly check identity of caught AbortFlowException in Flow.first op…
2056,2020-05-25 14:04:31.000000000,2020-05-25 15:48:55.000000000,closed,3,Couldn't inline method call 'map'
2055,2020-05-25 06:03:30.000000000,2020-05-25 12:29:16.000000000,closed,1,Hide parkNanos from android studio cpu profile
2054,2020-05-25 04:25:49.000000000,2020-06-01 15:47:03.000000000,closed,1,Why in 1.4 not need reifiled in this suspend inline example?
2053,2020-05-25 03:46:20.000000000,2020-06-01 15:48:35.000000000,closed,1,Corrutines as RenderScript/OpenMP
2052,2020-05-24 18:25:51.000000000,2020-05-25 00:00:02.000000000,closed,2,[Flow] How to know active collectors
2051,2020-05-24 16:17:13.000000000,2020-07-17 01:03:03.000000000,closed,2,Flow<T>.first operator throws NoSuchElementException where CancellationException must be thrown
2050,2020-05-24 03:42:40.000000000,2020-08-18 12:54:08.000000000,closed,8,Wrong bytecode generated on 1.3.7 in Android Studio
2049,2020-05-23 10:56:27.000000000,2020-06-03 15:21:02.000000000,closed,5,VerifyError on Android since 1.3.7 (register has type Reference but expected Precise Reference)
2048,2020-05-23 02:11:17.000000000,2020-06-01 15:47:26.000000000,closed,2,Where 1.3.7-1.4-M1 ?
2047,2020-05-22 13:13:25.000000000,1970-01-01 00:00:00.000000001,open,29,Flow.shareIn and stateIn operators
2046,2020-05-21 22:30:08.000000000,1970-01-01 00:00:00.000000001,open,5,Proguard issues with 1.3.6/1.3.7
2045,2020-05-21 19:10:28.000000000,1970-01-01 00:00:00.000000001,open,1,SegmentQueueSynchronizer
2044,2020-05-21 14:18:08.000000000,2020-07-17 01:03:03.000000000,closed,1,Flow builder does not work from suspend fun main (IllegalStateException)
2043,2020-05-21 13:54:48.000000000,2020-06-03 13:02:18.000000000,closed,0,Improve the docs and guide on flow cancellation
2042,2020-05-20 17:30:52.000000000,2020-05-27 20:37:21.000000000,closed,1,Flow.takeUntil(predicate) operator
2041,2020-05-20 13:33:59.000000000,2020-08-18 12:54:17.000000000,closed,17,VerifyError on Android since 1.3.7
2040,2020-05-19 19:02:50.000000000,2020-08-25 15:25:57.000000000,closed,4,Kts transition
2039,2020-05-19 18:59:34.000000000,1970-01-01 00:00:00.000000001,open,0,Incorrect dispatcher could be used on some desktop configs
2038,2020-05-19 13:29:37.000000000,1970-01-01 00:00:00.000000001,open,0,Lint settings for 1.4
2037,2020-05-19 13:24:26.000000000,2020-05-19 16:34:26.000000000,closed,0,Version 1.3.7
2036,2020-05-19 12:41:29.000000000,1970-01-01 00:00:00.000000001,open,0,Remove parent.start() from CancellableContinuationImpl.kt
2035,2020-05-19 12:03:12.000000000,2020-05-19 12:40:25.000000000,closed,0,Improved Job docs
2034,2020-05-18 13:09:19.000000000,1970-01-01 00:00:00.000000001,open,64,Introduce SharedFlow
2033,2020-05-17 16:57:45.000000000,1970-01-01 00:00:00.000000001,open,2,Compilation errors in macOS using kotlin/native
2032,2020-05-16 02:24:17.000000000,2020-05-20 12:49:30.000000000,closed,0,Non-deprecated 'jmhJar' configuration
2031,2020-05-15 17:04:27.000000000,2020-05-22 13:28:25.000000000,closed,1,Fixes for 1.4-M2 & HMPP
2030,2020-05-15 15:38:47.000000000,2020-05-15 17:36:05.000000000,closed,0,"Introduce EXACTLY_ONCE contracts to coroutineScope, supervisorScope, …"
2029,2020-05-14 23:19:13.000000000,1970-01-01 00:00:00.000000001,open,5,Suspend coroutine doesn't return while using firestore listener in offline mode
2028,2020-05-14 20:08:58.000000000,2020-05-18 13:31:26.000000000,closed,0,Flow cancellation
2027,2020-05-14 20:06:50.000000000,2020-05-15 13:00:39.000000000,closed,0,Restore java configuration for 'benchmarks'
2026,2020-05-14 16:51:20.000000000,2020-05-19 16:34:31.000000000,closed,6,Improve API for cooperative cancellation in Flow
2025,2020-05-14 15:57:17.000000000,1970-01-01 00:00:00.000000001,open,1,Failed to use await all in `native-mt`
2024,2020-05-13 20:15:31.000000000,1970-01-01 00:00:00.000000001,open,0,Resettable ticker for idle timeout with activity ticks
2023,2020-05-13 17:47:27.000000000,1970-01-01 00:00:00.000000001,open,15,Compilation error on the androidTest configuration after updating to 1.3.6
2022,2020-05-13 13:49:30.000000000,2020-05-15 18:38:41.000000000,closed,0,Include 'javafx' subproject for JDK 11+
2021,2020-05-13 12:41:27.000000000,2020-05-13 16:08:54.000000000,closed,0,IDEA Project code-style settings
2020,2020-05-13 04:32:35.000000000,2020-05-19 19:00:55.000000000,closed,0,Add Dokka configuration method
2019,2020-05-13 03:43:23.000000000,2020-05-19 19:01:10.000000000,closed,0,Remove unused repositories
2018,2020-05-13 00:54:55.000000000,2020-08-27 16:47:51.000000000,closed,0,New Kotlin/JVM & Kotlin/Multiplatform plugins
2017,2020-05-12 21:51:11.000000000,2020-05-19 19:01:29.000000000,closed,0,Kotlin DSL - 'javafx'
2016,2020-05-12 18:06:15.000000000,2020-05-12 18:40:55.000000000,closed,1,CannotGetJdbcConnectionException in Spring Boot if I use a suspend function in @RestController
2015,2020-05-12 16:33:53.000000000,2020-05-14 17:24:19.000000000,closed,0,Add compileOnly android annotations and suppress lint for agent premain
2014,2020-05-12 16:05:29.000000000,2020-05-12 16:40:05.000000000,closed,0,fix typo in docu (their->they)
2013,2020-05-12 13:25:27.000000000,2020-05-12 19:20:58.000000000,closed,0,Remove a reference to a missing close method from MutableStateFlow doc
2012,2020-05-12 13:20:07.000000000,1970-01-01 00:00:00.000000001,open,1,Cancel current Job on RejectedExecutionException
2011,2020-05-11 17:05:27.000000000,2020-05-11 19:12:31.000000000,closed,3,StateFlow does not work properly with static values
2010,2020-05-11 14:31:03.000000000,2020-05-15 13:32:08.000000000,closed,4,Mutex.withLock() added EXACTLY_ONCE contract
2009,2020-05-11 12:34:03.000000000,2020-05-12 13:19:30.000000000,closed,4,Flow.onCompletion: Documentation does not match behaviour
2008,2020-05-10 21:28:45.000000000,2020-05-22 14:14:14.000000000,closed,4,Missing StateFlow operators
2007,2020-05-10 19:30:41.000000000,2020-05-19 16:34:30.000000000,closed,0,MutableStateFlow's close method
2006,2020-05-09 05:03:40.000000000,2020-05-12 13:27:14.000000000,closed,1,Update README to Kotlin 1.3.72
2005,2020-05-09 03:03:23.000000000,2020-05-18 13:19:07.000000000,closed,4,Implementating an EventFlow now
2004,2020-05-09 02:02:29.000000000,2020-05-19 16:34:31.000000000,closed,7,Android Lint Error 1.3.6 - Invalid package reference
2003,2020-05-08 23:12:05.000000000,1970-01-01 00:00:00.000000001,open,19,Coroutines launch on default dispatcher when they should not
2002,2020-05-08 18:29:57.000000000,2020-05-19 19:01:47.000000000,closed,0,Avoid task name duplication
2001,2020-05-08 13:18:52.000000000,2020-05-08 21:49:46.000000000,closed,0,Version 1.3.6
2000,2020-05-07 20:56:05.000000000,2020-05-08 11:42:48.000000000,closed,2,Flow builder does not cooperate for cancellation
1999,2020-05-07 17:01:37.000000000,1970-01-01 00:00:00.000000001,open,0,ArrayBroadcastChannel not docummented
1998,2020-05-07 13:38:56.000000000,1970-01-01 00:00:00.000000001,open,0,Provide a way to enable stacktrace recovery in Android release build
1997,2020-05-07 09:55:01.000000000,2020-05-13 12:46:26.000000000,closed,10,Sample code snippet cannot run to expected result
1996,2020-05-06 21:27:18.000000000,1970-01-01 00:00:00.000000001,open,1,Any plans for kotlinx-coroutines-test for multiplatform code?
1995,2020-05-06 16:26:08.000000000,2020-05-07 17:57:17.000000000,closed,0,Fix logic that determines future removal for scheduled executors
1994,2020-05-06 15:32:05.000000000,2020-05-07 17:58:06.000000000,closed,0,Improve docs & code style in runInterruptibe
1993,2020-05-06 13:56:02.000000000,1970-01-01 00:00:00.000000001,open,1,Publisher.singleOrNull extension
1992,2020-05-06 12:09:54.000000000,2020-05-08 21:49:52.000000000,closed,0,Unnecessary caught ClassCastException due to incorrect instance check
1991,2020-05-05 21:01:03.000000000,2020-05-07 17:54:15.000000000,closed,2,How can I forward a send channel of one type to another?
1990,2020-05-05 00:37:02.000000000,2020-05-13 16:04:01.000000000,closed,2,Emissions from onCompleted ignored on cancellation
1989,2020-05-04 22:13:48.000000000,1970-01-01 00:00:00.000000001,open,14,RendezvousChannel cannot be cast to Function2
1988,2020-05-03 23:37:40.000000000,2020-05-06 16:27:01.000000000,closed,0,Use standard random API
1987,2020-05-03 21:20:54.000000000,2020-05-07 18:09:30.000000000,closed,1,Fix typos in comments to ticker channels
1986,2020-05-02 22:42:34.000000000,2020-05-19 19:02:02.000000000,closed,0,Separate 'UnpackAar' action
1985,2020-05-02 20:53:49.000000000,2020-05-19 19:02:18.000000000,closed,0,Separate 'RunR8' task
1984,2020-05-02 17:55:04.000000000,2020-05-12 19:33:04.000000000,closed,2,Add project JDK convention 
1983,2020-05-02 07:35:28.000000000,2020-05-19 19:03:27.000000000,closed,4,Use new Kotlin/JS plugin
1982,2020-05-02 05:50:03.000000000,2020-08-19 03:45:38.000000000,closed,0,`stub-convention` plugin
1981,2020-05-01 22:20:15.000000000,2020-05-02 06:45:05.000000000,closed,0,Use new Kotlin/JS plugin
1980,2020-04-30 16:48:43.000000000,2020-05-08 13:34:30.000000000,closed,2,"Sometimes, ConflatedBroadcastChannel fires recent value without any action"
1979,2020-04-30 13:20:18.000000000,1970-01-01 00:00:00.000000001,open,4,APK with coroutines can't be installed on some Android 5 devices
1978,2020-04-30 04:16:56.000000000,2020-05-01 20:36:00.000000000,closed,0,Remove redundant 'public' modifier. Test sources
1977,2020-04-30 03:38:46.000000000,2020-05-02 15:22:09.000000000,closed,0,Plugin versions in 'plugins' block
1976,2020-04-30 02:56:18.000000000,2020-05-02 15:22:20.000000000,closed,0,'reactor_vesion' -> 'reactor_veRsion'
1975,2020-04-29 22:06:41.000000000,2020-05-20 12:49:44.000000000,closed,1,igushkin/gradle-6-3
1974,2020-04-29 21:38:25.000000000,2020-05-07 20:52:09.000000000,closed,14,StateFlow implementation
1973,2020-04-29 21:29:50.000000000,2020-05-08 21:49:52.000000000,closed,56,Introduce StateFlow
1972,2020-04-29 13:09:43.000000000,2020-04-29 20:24:34.000000000,closed,0,PR 1934
1971,2020-04-29 02:35:51.000000000,2020-04-30 02:45:15.000000000,closed,0,Gradle 6.3. Fix compilation
1970,2020-04-28 23:48:07.000000000,1970-01-01 00:00:00.000000001,open,12,Unhandled Exceptions Getting Eaten
1969,2020-04-28 22:16:15.000000000,2020-05-02 15:22:30.000000000,closed,0,Platform util in 'buildSrc'
1968,2020-04-28 18:38:00.000000000,2020-04-28 22:40:56.000000000,closed,1,Fix JS example warnings
1967,2020-04-28 15:29:04.000000000,2020-04-29 12:42:46.000000000,closed,0,Fix class cast exception during undispatched resume of cancellable co…
1966,2020-04-28 09:45:54.000000000,2020-05-08 21:49:51.000000000,closed,10,suspendCancellableCoroutine returns an internal CompletedWithCancellation object instead of the actual resulting type
1965,2020-04-28 05:10:08.000000000,2020-04-28 15:30:03.000000000,closed,0,Common java version method
1964,2020-04-27 20:43:32.000000000,2020-04-28 12:30:05.000000000,closed,0,Add a lincheck test for `remove` in the segment list algorithm
1963,2020-04-27 19:01:10.000000000,2020-04-28 13:13:54.000000000,closed,0,Remove experimental status from Flow API
1962,2020-04-27 17:37:21.000000000,2020-04-28 12:29:41.000000000,closed,1,can not compile suspended inline extension function in object class when java functional interface is invoked
1961,2020-04-27 17:14:09.000000000,2020-06-16 23:24:51.000000000,closed,4,Coroutines Dispatchers should have parameter to limit threads count for several usage scenarios
1960,2020-04-27 15:29:42.000000000,2020-04-28 06:42:40.000000000,closed,5,Latest release version in Maven links to EPA version
1959,2020-04-26 22:28:22.000000000,2020-04-27 15:44:50.000000000,closed,0,Kotlin DSL - 'js-stub'
1958,2020-04-26 19:50:08.000000000,2020-04-27 15:53:25.000000000,closed,0,Remove unused Gradle wrapper
1957,2020-04-26 15:57:15.000000000,2020-04-28 12:36:44.000000000,closed,3,"Converting channel to LiveData results in IllegalStateException: ""ReceiveChannel.consumeAsFlow can be collected just once"""
1956,2020-04-26 07:20:06.000000000,2020-04-27 15:45:25.000000000,closed,0,Kotlin DSL - 'android'
1955,2020-04-26 04:25:27.000000000,2020-04-27 15:46:02.000000000,closed,0,Kotlin DSL - 'stdlib-stubs'
1954,2020-04-26 03:46:05.000000000,2020-04-27 15:48:25.000000000,closed,0,Kotlin DSL - 'site'
1953,2020-04-26 02:58:05.000000000,2020-04-27 15:51:43.000000000,closed,0,Kotlin DSL - 'maven-central'
1952,2020-04-25 22:59:12.000000000,2020-04-27 15:52:42.000000000,closed,0,Kotlin DSL - 'benchmarks'
1951,2020-04-24 21:00:33.000000000,2020-04-30 00:35:42.000000000,closed,0,Kts transition
1950,2020-04-24 16:48:45.000000000,2020-04-24 20:32:55.000000000,closed,0,Pr/1929
1949,2020-04-24 06:11:53.000000000,2020-04-24 10:51:17.000000000,closed,1,"In android,the art runtime Underlying implementation is thread,what is different between use coroutines and thread?"
1948,2020-04-24 06:06:07.000000000,1970-01-01 00:00:00.000000001,open,1,Dispatchers.Main.immediate have different behavior on Android and unit test
1947,2020-04-23 12:55:09.000000000,1970-01-01 00:00:00.000000001,open,9,Support thread interrupting blocking functions
1946,2020-04-23 04:55:45.000000000,2020-04-24 20:58:33.000000000,closed,0,Kotlin DSL - 'reactive:reactive'
1945,2020-04-23 03:20:35.000000000,2020-04-24 20:58:05.000000000,closed,0,Kotlin DSL - 'test'
1944,2020-04-23 03:11:20.000000000,2020-04-24 20:57:41.000000000,closed,0,Kotlin DSL - 'integration:jdk8'
1943,2020-04-23 01:44:08.000000000,2020-04-24 20:57:05.000000000,closed,0,Kotlin DSL - 'swing'
1942,2020-04-23 01:39:25.000000000,2020-04-24 21:03:18.000000000,closed,1,Kotlin DSL - 'android-unit-tests'
1941,2020-04-23 01:23:15.000000000,2020-04-24 20:56:29.000000000,closed,0,Kotlin DSL - 'android:animation-app'
1940,2020-04-23 00:10:22.000000000,2020-04-24 20:56:01.000000000,closed,0,Kotlin DSL - 'android:example-app'
1939,2020-04-22 22:45:06.000000000,2020-04-24 16:41:07.000000000,closed,0,Kotlin DSL. Add version extension
1938,2020-04-22 22:15:18.000000000,1970-01-01 00:00:00.000000001,open,0,Kotlin DSL
1937,2020-04-22 20:17:37.000000000,1970-01-01 00:00:00.000000001,open,0,[DRAFT] Get rid of atomic cancellation and provide a replacement
1936,2020-04-22 20:02:21.000000000,1970-01-01 00:00:00.000000001,open,6,Support leak-free closeable resources transfer via channel
1935,2020-04-22 19:42:48.000000000,1970-01-01 00:00:00.000000001,open,0,kotlin.time.Duration support for the test library
1934,2020-04-22 18:37:30.000000000,2020-04-30 00:37:10.000000000,closed,8,Support thread interrupting blocking functions (#1947)
1933,2020-04-22 17:11:39.000000000,2020-04-23 13:13:06.000000000,closed,1,Subscribing to multiple flow in one lifecycleScope.launch {} does not work
1932,2020-04-22 13:07:02.000000000,2020-04-22 15:55:57.000000000,closed,1,Migrate to androidx.annotation from legacy android.support.annotion
1931,2020-04-22 12:37:24.000000000,1970-01-01 00:00:00.000000001,open,6,Mention that the copied exception's message must be like the original
1930,2020-04-21 22:31:48.000000000,1970-01-01 00:00:00.000000001,open,2,"CompletableFuture is API level 24 and above, considered including a backport?"
1929,2020-04-21 04:04:59.000000000,2020-04-24 20:33:10.000000000,closed,1,Add RxJava 3 module
1928,2020-04-20 22:42:36.000000000,2020-04-21 11:26:12.000000000,closed,7,Catched Exception in Flow cancels processing of following elements
1927,2020-04-20 22:33:18.000000000,1970-01-01 00:00:00.000000001,open,2,Add throttleFirst Flow operator
1926,2020-04-20 17:51:38.000000000,2020-04-20 17:59:17.000000000,closed,0,JetBrains Toolbox icon
1925,2020-04-20 12:17:44.000000000,2020-04-20 18:34:09.000000000,closed,2,kotlinx-coroutines transitive deps are bringing in 1.3.70 stdlib unless manual exceptions written
1924,2020-04-20 10:35:04.000000000,2020-04-20 11:48:34.000000000,closed,3,Coroutine behaviour inconsistent in Android. UI getting updated from non UI Thread
1923,2020-04-19 21:26:54.000000000,1970-01-01 00:00:00.000000001,open,9,Add way to convert CoroutineDispatcher to Scheduler 
1922,2020-04-19 19:13:36.000000000,2020-04-23 13:01:47.000000000,closed,3,Implement optional thread interrupt on coroutine cancellation (#57)
1921,2020-04-18 02:29:40.000000000,1970-01-01 00:00:00.000000001,open,2,Inconsistent behavior when returning from withContext and outer CoroutineContext has been cancelled
1920,2020-04-18 01:11:01.000000000,2020-04-20 17:33:36.000000000,closed,0,GitHub issue/pr links in IDEA Git log
1919,2020-04-18 00:48:04.000000000,1970-01-01 00:00:00.000000001,open,1,How to detect if a `CoroutineDispatcher` is suspended due to a delay?
1918,2020-04-18 00:04:47.000000000,2020-04-21 11:44:45.000000000,closed,3,Unable to use runCatching with Flow
1917,2020-04-17 23:14:33.000000000,1970-01-01 00:00:00.000000001,open,2,broadcastIn() does not emit a value to all consumers
1916,2020-04-16 19:23:41.000000000,2020-04-20 20:06:21.000000000,closed,4,Launching multiple flows when a parent flow emits. 
1915,2020-04-16 15:39:34.000000000,1970-01-01 00:00:00.000000001,open,3,Tweak CancellableContinuation.invokeOnCancellation contract for consistency
1914,2020-04-15 21:03:52.000000000,1970-01-01 00:00:00.000000001,open,4,"Coroutines, exception handling and withTimeout. Can't wrap my head around this combination"
1913,2020-04-13 18:05:17.000000000,2020-04-13 23:52:34.000000000,closed,2,AbstractCoroutineContextKey Error 
1912,2020-04-13 14:09:18.000000000,2020-04-13 14:49:05.000000000,closed,0,Fix in gradle for JS IR in case it doesn't exist
1911,2020-04-11 13:01:44.000000000,1970-01-01 00:00:00.000000001,open,6,"Support ""Exchanger"" synchronization point"
1910,2020-04-08 22:07:05.000000000,1970-01-01 00:00:00.000000001,open,1,runBlockingTest doesn't cancel child coroutines when an assertion or exception fails the test
1909,2020-04-08 19:39:43.000000000,2020-04-27 14:19:16.000000000,closed,8,CompletedContinuation cannot be cast to DispatchedContinuation
1908,2020-04-06 23:37:31.000000000,1970-01-01 00:00:00.000000001,open,0,`tickerFlow` implementation 
1907,2020-04-06 23:06:39.000000000,2020-04-09 18:44:05.000000000,closed,2,Cancel child job when parent is cancelled
1906,2020-04-06 19:52:21.000000000,2020-04-07 18:32:18.000000000,closed,0,Update Kotlin version to 1.3.71
1905,2020-04-06 19:35:35.000000000,2020-04-24 15:59:28.000000000,closed,2,Extract debugger
1904,2020-04-06 16:55:39.000000000,2020-04-07 18:32:01.000000000,closed,0,Flow onEmpty
1903,2020-04-04 23:01:05.000000000,2020-04-05 14:35:38.000000000,closed,1,Correct JDK version typo
1902,2020-04-04 19:38:06.000000000,1970-01-01 00:00:00.000000001,open,2,Emitting Flow values without builder scope and Channel
1901,2020-04-04 19:09:31.000000000,2020-05-22 13:19:33.000000000,closed,7,Suspending broadcast flow emission
1900,2020-04-03 07:49:34.000000000,1970-01-01 00:00:00.000000001,open,1,coroutine crash:  java.lang.NoSuchFieldException:_decision
1899,2020-04-02 01:43:41.000000000,2020-04-08 10:52:24.000000000,closed,6,Operator on ChannelFlow will execute in the coroutine from which the operator was added to the Flow in certain situations.
1898,2020-04-02 00:47:45.000000000,2020-04-23 21:01:05.000000000,closed,1,Add linearizability tests for Mutex and Semaphore and fix them
1897,2020-04-01 20:10:00.000000000,2020-04-02 11:54:51.000000000,closed,1,Creating callbackFlow / flow as an instance and reusing it in multiple places
1896,2020-04-01 19:25:32.000000000,2020-04-02 19:44:39.000000000,closed,5,Implement `mapForEach` Flow operator
1895,2020-04-01 07:39:17.000000000,2020-04-02 19:26:11.000000000,closed,6,`MutabilityException` when using mt-native `Flow`
1894,2020-04-01 07:31:07.000000000,1970-01-01 00:00:00.000000001,open,6,Fatal Exception: java.lang.VerifyError: kotlinx/coroutines/bv$c
1893,2020-03-31 17:31:16.000000000,2020-03-31 22:27:08.000000000,closed,2,Module kotlinx-coroutines-play-services updated but I actually need to still use the annotations
1892,2020-03-31 14:03:14.000000000,2020-03-31 14:34:29.000000000,closed,2,Removed extra non working SharedImmutable annotations
1891,2020-03-31 11:43:37.000000000,1970-01-01 00:00:00.000000001,open,1,Ktor js test failed due to `'Fatal exception in coroutines machinery`
1890,2020-03-31 11:38:43.000000000,2020-05-08 21:49:49.000000000,closed,1,Flow.onEmpty/ifEmpty operators
1889,2020-03-31 07:21:57.000000000,2020-03-31 14:00:56.000000000,closed,3,Correct way to implement MainDispatcher and BackgroundDispatcher in iOS
1888,2020-03-31 06:52:45.000000000,1970-01-01 00:00:00.000000001,open,8,CompletedContinuation cannot be cast to DispatchedContinuation
1887,2020-03-30 20:46:17.000000000,2020-03-31 14:01:06.000000000,closed,5,zip(Iterable<Flow>) operator ?
1886,2020-03-30 20:42:08.000000000,2020-04-22 14:58:17.000000000,closed,3,Improve docs for CoroutineExceptionHandler
1885,2020-03-30 17:57:53.000000000,2020-03-31 17:10:13.000000000,closed,0,Fix leak of subscription reference in closed ArrayBroadcastChannel
1884,2020-03-30 00:57:53.000000000,2020-03-30 12:47:21.000000000,closed,3,kotlin/native: InvalidMutabilityException in AbstractSendChannel.takeFirstReceiveOrPeekClosed()
1883,2020-03-26 10:36:52.000000000,2020-05-08 21:49:50.000000000,closed,2,Support RxJava 3
1882,2020-03-25 11:52:04.000000000,2020-04-06 13:29:08.000000000,closed,0,Update CoroutineScope docs
1881,2020-03-24 19:26:13.000000000,1970-01-01 00:00:00.000000001,open,0,Uncompleted testBody in runBlockingTest not throwing UncompletedCoroutinesError
1880,2020-03-24 17:37:00.000000000,2020-03-27 18:41:21.000000000,closed,0,Fix publication validator not looking in the local maven repository
1879,2020-03-24 01:09:52.000000000,2020-03-24 12:00:59.000000000,closed,2,java.lang.NoClassDefFoundError: kotlin/coroutines/AbstractCoroutineContextKey when running Spring tests with kotlin coroutines version 1.3.5
1878,2020-03-24 00:42:55.000000000,2020-03-24 21:12:56.000000000,closed,7,Cancel CoroutineScope children and not the CoroutineScope itself
1877,2020-03-23 17:27:28.000000000,2020-03-27 18:43:46.000000000,closed,0,Enable strict explicit mode
1876,2020-03-23 13:24:24.000000000,2020-03-30 19:54:10.000000000,closed,2,Fix DefaultExecutor not being able to exit
1875,2020-03-23 10:55:07.000000000,1970-01-01 00:00:00.000000001,open,7,Builders and iteration support for Apple's Combine Framework
1874,2020-03-23 05:15:32.000000000,1970-01-01 00:00:00.000000001,open,7,IllegalStateException : Already resumed
1873,2020-03-20 17:30:51.000000000,2020-04-06 17:33:23.000000000,closed,2,(WIP) BlockHound integration
1872,2020-03-17 16:17:07.000000000,2020-03-17 19:17:24.000000000,closed,0,Version 1.3.5
1871,2020-03-17 07:59:04.000000000,2020-03-17 11:03:46.000000000,closed,1,Is the order of execution between different coroutine threads guaranteed by the order these thread are created through GlobalScope.launch(coroutineContext)?
1870,2020-03-16 20:29:19.000000000,2020-03-17 12:19:21.000000000,closed,0,Disable metadata publciation for kotlinx-coroutines-bom artifact
1869,2020-03-16 15:39:24.000000000,2020-03-17 12:41:11.000000000,closed,0,Flow firstOrNull support [fixes]
1868,2020-03-16 13:58:26.000000000,2020-03-16 15:08:02.000000000,closed,0,Fill in stacktrace of cancellation exception with an empty array to p…
1867,2020-03-15 13:27:57.000000000,1970-01-01 00:00:00.000000001,open,4,Using ticker() causes NoSuchMethodError
1866,2020-03-14 22:25:18.000000000,2020-03-17 19:17:31.000000000,closed,1,Accessing 'stackTrace' on JobCancellationException instance leads to crash on Android 6.0 and below
1865,2020-03-14 00:57:04.000000000,2020-03-16 11:30:42.000000000,closed,1,Readme improvement
1864,2020-03-13 15:42:44.000000000,2020-03-13 15:56:44.000000000,closed,0,#1811 fixup
1863,2020-03-13 15:37:22.000000000,2020-03-13 15:38:11.000000000,closed,0,#1834 fixup
1862,2020-03-13 13:03:07.000000000,2020-03-13 15:13:10.000000000,closed,0,Debugger improvements
1861,2020-03-13 00:41:48.000000000,2020-03-13 15:27:25.000000000,closed,1,Nested runBlocking and init block
1860,2020-03-11 21:22:36.000000000,2020-03-12 20:58:42.000000000,closed,2,.asPublisher().asFlow() slowness introduced in 1.3.4
1859,2020-03-11 19:04:54.000000000,2020-03-11 19:27:04.000000000,closed,1,flow {} does not allow passing of reified Type parameters
1858,2020-03-11 18:18:04.000000000,2020-03-11 19:15:00.000000000,closed,0,Reusable continuation leak
1857,2020-03-11 01:22:48.000000000,2020-03-11 02:09:21.000000000,closed,1,Runtime error for suspend function when implementing launchIn
1856,2020-03-10 23:15:08.000000000,2020-03-10 23:34:37.000000000,closed,1,Modify Kotlin Coroutine Flow value after initialization
1855,2020-03-10 21:36:26.000000000,2020-03-17 19:17:30.000000000,closed,1,Memory Leak of ChildContinuation introduced recently
1854,2020-03-10 20:56:54.000000000,2020-03-13 15:10:13.000000000,closed,0,Document the fact that dispatch should eventually invoke the given ru…
1853,2020-03-10 15:48:10.000000000,2020-05-07 17:49:28.000000000,closed,6,channelFlow cannot catch exception from callback
1852,2020-03-09 16:40:47.000000000,2020-03-11 20:18:45.000000000,closed,2,Parent job does not cancel child jobs
1851,2020-03-08 14:12:55.000000000,2020-03-08 17:10:44.000000000,closed,1,Multiplatform Actors
1850,2020-03-08 07:27:07.000000000,1970-01-01 00:00:00.000000001,open,25,Flow.takeUntil(otherFlow)
1849,2020-03-07 22:33:03.000000000,2020-03-11 14:53:10.000000000,closed,5,runBlocking does not wait for a coroutine with different CoroutineScope
1848,2020-03-07 02:46:58.000000000,2020-03-10 17:06:14.000000000,closed,15,Introduce repeatWhen operator
1847,2020-03-06 17:34:45.000000000,2020-03-06 20:25:38.000000000,closed,0,Make call to service loader in reactor integrations optimizable by R8
1846,2020-03-06 14:34:33.000000000,2020-03-06 17:01:53.000000000,closed,0,Version 1.3.4
1845,2020-03-05 20:40:12.000000000,2020-03-06 14:23:21.000000000,closed,0,Fixed memory leak on a race between adding/removing from lock-free list
1844,2020-03-05 12:26:57.000000000,2020-03-05 14:23:44.000000000,closed,2,AnalyserException: cannot pop operand off an empty stack.
1843,2020-03-05 12:19:26.000000000,2020-03-05 14:30:29.000000000,closed,1,Suspend function call in crossinline suspend lambda throw a fatal exception
1842,2020-03-04 20:05:20.000000000,2020-03-06 01:02:43.000000000,closed,0,Migrate experimental annotations to new API and provide custom warnin…
1841,2020-03-04 20:00:02.000000000,2020-03-05 01:33:19.000000000,closed,0,Reuse RxJava built-in disposed Disposable
1840,2020-03-04 19:51:03.000000000,2020-03-06 01:02:31.000000000,closed,0,Leverage polymorphic keys un CoroutineDispatcher and ExecutorCoroutin…
1839,2020-03-04 16:32:18.000000000,2020-03-04 16:33:29.000000000,closed,1,Update version for kotlin up to 1.3.70
1838,2020-03-04 14:38:39.000000000,2020-03-04 15:02:27.000000000,closed,0,Knit version 0.1.3
1837,2020-03-04 13:43:21.000000000,2020-03-04 14:33:47.000000000,closed,0,Kotlin 1.3.70
1836,2020-03-02 17:13:35.000000000,1970-01-01 00:00:00.000000001,open,1,Support mixed conflated SendChannel with FIFO buffer
1835,2020-02-29 04:50:05.000000000,2020-04-22 06:10:24.000000000,closed,3,Queue of tasks without a receiver
1834,2020-02-28 21:10:06.000000000,2020-03-13 15:38:56.000000000,closed,1,java.time adapter for Flow.debounce and Flow.sample
1833,2020-02-27 19:20:38.000000000,2020-03-01 15:13:20.000000000,closed,6,Coroutines high CPU consuming v1.3.3
1832,2020-02-27 17:25:29.000000000,2020-03-11 19:56:27.000000000,closed,0,Enable JS IR backend
1831,2020-02-27 13:24:22.000000000,1970-01-01 00:00:00.000000001,open,10,Merge operator not working as expected (ensure that merge is collecting)
1830,2020-02-25 19:40:03.000000000,2020-02-25 20:33:29.000000000,closed,4,Error when call local suspend function with default param without arguments
1829,2020-02-25 17:30:08.000000000,2020-03-03 17:33:40.000000000,closed,1,Atomically start coroutines in intermediate Flow operators in order t…
1828,2020-02-24 11:15:51.000000000,2020-04-18 09:48:07.000000000,closed,0,Update documentation on native-mt branch
1827,2020-02-23 18:14:21.000000000,2020-03-14 19:32:25.000000000,closed,4,RxJava doOnError analog (to support intercepting errors)
1826,2020-02-23 14:17:15.000000000,2020-03-04 19:45:17.000000000,closed,0,ObservableSource.asFlow
1825,2020-02-22 05:09:23.000000000,2020-03-06 17:01:58.000000000,closed,6,Stream.consumeAsFlow() finally block not getting called
1824,2020-02-21 05:07:29.000000000,2020-03-15 03:33:04.000000000,closed,3,Add more documentation about a case where .offer() can throw
1823,2020-02-20 19:36:51.000000000,2020-03-09 12:08:21.000000000,closed,3,withContext isn't cancelled
1822,2020-02-20 18:57:58.000000000,2020-02-25 18:26:03.000000000,closed,5,runBlocking and coroutineScope in documentation
1821,2020-02-20 15:53:12.000000000,2020-03-16 18:27:07.000000000,closed,3,BlockHound integration
1820,2020-02-20 15:37:23.000000000,2020-02-21 19:31:05.000000000,closed,0,Make publication validator part of the main gradle project
1819,2020-02-20 08:14:02.000000000,2020-03-06 17:10:57.000000000,closed,2,Not seeing 1.3.3 on npm
1818,2020-02-20 00:36:56.000000000,2020-03-01 09:34:57.000000000,closed,1,Flow and java.lang.ClassCastException
1817,2020-02-20 00:30:07.000000000,2020-03-17 19:17:30.000000000,closed,1,Strict Mode DiskReadViolation on Android when converting Rx Publisher to Flow
1816,2020-02-19 22:24:14.000000000,2020-05-08 21:49:53.000000000,closed,9,ConflatedBroadcastChannel should deliver last value
1815,2020-02-19 20:56:07.000000000,1970-01-01 00:00:00.000000001,open,2,Marble diagrams
1814,2020-02-19 02:36:30.000000000,1970-01-01 00:00:00.000000001,open,9,Provide a `runCatching` that does not handle a `CancellationException` but re-throws it instead.
1813,2020-02-17 16:59:49.000000000,1970-01-01 00:00:00.000000001,open,13,Breaking: Rethink atomicity of certain low-level primitives
1812,2020-02-17 15:06:22.000000000,2020-02-17 15:18:51.000000000,closed,2,How to test kotlin suspend function from spock
1811,2020-02-16 22:25:43.000000000,2020-03-13 15:57:01.000000000,closed,7,Experimenta kotlin.time.Duration support
1810,2020-02-16 20:35:14.000000000,2020-03-13 12:02:33.000000000,closed,2,flowOn causes EXC_BAD_ACCESS on iOS
1809,2020-02-16 20:33:38.000000000,2020-02-17 13:05:58.000000000,closed,1,flowOn causes EXC_BAD_
1808,2020-02-16 18:12:04.000000000,2020-02-17 13:27:40.000000000,closed,1,How to ? kotlinx.coroutines on android native. (Godot yield implementation)
1807,2020-02-16 13:05:22.000000000,2020-02-16 16:49:12.000000000,closed,3,Flow onBackpressureDrop analog
1806,2020-02-14 15:21:44.000000000,2020-03-04 19:45:54.000000000,closed,0,[Don't merge] Leverage polymorphic keys in CoroutineDispatcher and ExecutorCoroutin…
1805,2020-02-14 14:39:50.000000000,2020-03-06 17:12:59.000000000,closed,1,Provide ability to query coroutine context for CoroutineDispatcher in a friendly manner
1804,2020-02-13 18:35:02.000000000,2020-02-13 20:37:20.000000000,closed,2,Strange StackOverflowError in crash report
1803,2020-02-13 17:40:27.000000000,2020-02-13 18:46:17.000000000,closed,0,Introduce ExecutorRule for stress-tests for simpler development process
1802,2020-02-13 15:10:20.000000000,2020-02-20 14:34:05.000000000,closed,2,Integration with Firebase for Android PR was lost?
1801,2020-02-13 13:36:08.000000000,2020-02-13 18:44:50.000000000,closed,0,Fix a race in some tests for JavaRX integration
1800,2020-02-12 18:38:57.000000000,2020-02-12 20:35:38.000000000,closed,0,Update module name for kotlinx-coroutines-core-common artifact
1799,2020-02-12 13:34:31.000000000,2020-02-13 17:51:15.000000000,closed,0,"Improve FieldWalker, don't access JDK classes"
1798,2020-02-12 06:38:27.000000000,2020-05-20 04:01:17.000000000,closed,11,Introduce missing backpressure drop Flow operator
1797,2020-02-12 03:05:30.000000000,2020-03-06 17:01:57.000000000,closed,5,Duplicate of 'META-INF/kotlinx-coroutines-core.kotlin_module'
1796,2020-02-11 09:14:28.000000000,2020-03-16 15:45:15.000000000,closed,14,Flow firstOrNull support
1795,2020-02-11 03:56:46.000000000,2020-02-13 18:56:24.000000000,closed,1,Indicate that root README should be updated with new contributions
1794,2020-02-11 03:54:21.000000000,1970-01-01 00:00:00.000000001,open,1,Add an integration with Log4J 2's ThreadContext
1793,2020-02-10 23:59:07.000000000,2020-02-13 18:02:43.000000000,closed,0,Make SafeCollector platform-specific declaration and enforce exceptio…
1792,2020-02-10 19:03:09.000000000,2020-02-11 20:01:54.000000000,closed,1,Remove all traces of Hamcrest
1791,2020-02-10 14:27:38.000000000,1970-01-01 00:00:00.000000001,open,0,Extract core part of kotlinx-coroutines-debug into core module
1790,2020-02-07 19:08:40.000000000,2020-02-10 23:12:58.000000000,closed,0,Binary compatibility
1789,2020-02-07 13:35:33.000000000,2020-03-04 18:58:18.000000000,closed,1,Implement ObservableValue<T>.asFlow()
1788,2020-02-07 00:53:47.000000000,2020-04-21 16:02:12.000000000,closed,2,Is this difference in behavior between take(n).toList() and collect() expected?
1787,2020-02-06 17:15:59.000000000,2020-02-18 18:05:05.000000000,closed,1,`WithTimeoutOrNullTest.testOuterTimeout` failed
1786,2020-02-06 00:32:41.000000000,2020-03-13 20:04:32.000000000,closed,3,Threadlocal context is lost on async
1785,2020-02-05 01:24:47.000000000,2020-02-05 13:00:19.000000000,closed,1,Remove extraneous word in comment
1784,2020-02-04 20:30:49.000000000,2020-02-06 13:59:48.000000000,closed,0,Fix some tests hanging when `verifyDump` fails
1783,2020-02-04 17:53:08.000000000,2020-03-13 16:04:49.000000000,closed,3,JDK9 Flow integration
1782,2020-02-04 08:17:06.000000000,2020-02-04 21:04:05.000000000,closed,2,Add operator fun <T> ClosedRange<T>.component1|2()
1781,2020-02-03 20:08:25.000000000,2020-02-12 18:58:09.000000000,closed,3,Crash in iOS App Extensions
1780,2020-02-03 06:37:26.000000000,2020-05-13 15:28:29.000000000,closed,3,Flow<T>.FlattenMerge has unexpected 'catch()' behavior
1779,2020-01-30 21:40:11.000000000,2020-03-13 15:16:53.000000000,closed,3, LiveDataScop emit not calling
1778,2020-01-27 19:48:47.000000000,2020-01-28 19:20:38.000000000,closed,0,Request elements in batches in ReactiveFlow to avoid requesting eleme…
1777,2020-01-24 12:56:05.000000000,2020-01-29 19:56:08.000000000,closed,3,Race condition callbackFlow issue
1776,2020-01-23 15:40:31.000000000,1970-01-01 00:00:00.000000001,open,5,rxSingle() for coroutines do not return error on exception
1775,2020-01-22 02:48:33.000000000,2020-01-22 15:18:41.000000000,closed,1,Inconsistent documentation for newSingleThreadContext
1774,2020-01-21 16:59:48.000000000,2020-01-24 21:10:57.000000000,closed,0,Fix context support in Publisher.asFlow.flowOn
1773,2020-01-21 16:11:39.000000000,2020-03-07 14:05:44.000000000,closed,1,"callbackFlow and flatMapMerge, how to close channels that are not used anymore ?"
1772,2020-01-21 16:02:26.000000000,1970-01-01 00:00:00.000000001,open,0,runBlockingTest should call registered CompletionHandler
1771,2020-01-20 20:38:51.000000000,2020-02-13 17:42:59.000000000,closed,1,Detect missing awaitClose calls in callbackFlow and close channel wit…
1770,2020-01-20 16:23:53.000000000,2020-03-06 17:01:58.000000000,closed,5,ClosedSendChannelException for callbackFlow
1769,2020-01-20 12:34:35.000000000,2020-01-20 13:53:49.000000000,closed,1,Exception java.lang.VerifyError Called
1768,2020-01-20 02:59:18.000000000,2020-03-04 16:30:08.000000000,closed,15,[DRAFT] Rx Observable as Flow
1767,2020-01-19 18:48:38.000000000,2020-03-17 18:59:02.000000000,closed,3,zipWithNext for Flow
1766,2020-01-18 20:56:32.000000000,2020-05-13 15:29:11.000000000,closed,5,Convert RxJava Flowable to Flow and elements seem to be delayed or skipped to collect when onErrorReturnItem called.
1765,2020-01-18 19:02:46.000000000,2020-03-06 17:01:57.000000000,closed,6,PublisherAsFlow ignores the CoroutineContext passed in from flowOn?
1764,2020-01-17 14:23:34.000000000,1970-01-01 00:00:00.000000001,open,2,native-mt: Flow.combine does not work in another thread
1763,2020-01-16 03:07:23.000000000,2020-08-10 19:12:56.000000000,closed,0,Official Gradle Wrapper Validation GitHub Action
1762,2020-01-15 14:26:43.000000000,2020-03-06 17:01:57.000000000,closed,6,kotlin.coroutines.channels.awaitClose: JobCancellationException
1761,2020-01-13 21:51:26.000000000,2020-05-22 13:20:45.000000000,closed,6,ArrayBroadcastChannel that delivers new subscribers a value
1760,2020-01-13 18:45:05.000000000,2020-01-15 20:58:17.000000000,closed,6,An explanation of intermediate flow operators does not match the result of sample code
1759,2020-01-13 12:17:24.000000000,1970-01-01 00:00:00.000000001,open,1,Call BroadcastChannel.asFlow.onStart() after openSubscription()
1758,2020-01-13 11:38:22.000000000,2020-05-22 13:21:44.000000000,closed,27,BroadcastChannel.asFlow().onStart(...) is invoked before the subscription is opened
1757,2020-01-12 06:41:12.000000000,2020-01-15 16:16:08.000000000,closed,0,Slightly simplify the sample code of channels
1756,2020-01-11 19:14:38.000000000,2020-01-17 19:40:02.000000000,closed,4,Stateless conflated Broadcast channel
1755,2020-01-08 22:19:02.000000000,2020-03-13 15:17:30.000000000,closed,1,Flow intermediate operators don't work with method references
1754,2020-01-07 19:56:51.000000000,2020-01-30 17:21:05.000000000,closed,3,Introduce SWT dispatchers for SWT UI applications
1753,2020-01-07 15:00:25.000000000,2020-03-25 18:56:16.000000000,closed,2,Flow.collect still receive value after invoke CoroutineContext.cancel
1752,2020-01-07 13:44:48.000000000,2020-02-24 13:17:57.000000000,closed,2,Cancel the job which suspend in delay can cause it run to next suspend function
1751,2020-01-05 09:01:30.000000000,1970-01-01 00:00:00.000000001,open,3,Improve Concurrency Documentation
1750,2020-01-04 09:43:04.000000000,1970-01-01 00:00:00.000000001,open,5,How to window the fixed-size buffered items in Channel?
1749,2020-01-04 03:46:59.000000000,1970-01-01 00:00:00.000000001,open,1,cleanupTestCoroutines does not detect awaiting CompletableDeferred
1748,2020-01-03 23:05:33.000000000,2020-01-17 13:17:40.000000000,closed,1,Add test to ensure parent scope is not frozen by child coroutine
1747,2020-01-03 20:50:58.000000000,2020-01-04 03:52:59.000000000,closed,2,Remove the second yield()
1746,2020-01-03 17:40:49.000000000,2020-05-08 21:49:49.000000000,closed,3,"CoroutineExceptionHandler: Issues with Documentation, Possible Bug in runBlocking"
1745,2020-01-03 13:11:52.000000000,2020-03-14 08:20:58.000000000,closed,11,Parent coroutine is frozen when child coroutine on background thread is launched
1744,2020-01-03 08:44:52.000000000,2020-01-15 16:42:20.000000000,closed,2,How do I use a specific thread as the thread that runs the coroutine?
1743,2020-01-02 13:59:00.000000000,1970-01-01 00:00:00.000000001,open,13,CoroutinesInternalError - Job is already complete or completing
1742,2019-12-31 16:09:50.000000000,1970-01-01 00:00:00.000000001,open,0,Using combine() operator with TestCoroutineDispatcher causes test to fail
1741,2019-12-30 16:07:52.000000000,2020-03-25 19:21:24.000000000,closed,1,example-cancel-02.kt: The sample code is incorrect.
1740,2019-12-30 15:19:20.000000000,2020-01-15 22:39:38.000000000,closed,3,IO operation withTimeout
1739,2019-12-28 13:02:38.000000000,2020-03-31 14:05:50.000000000,closed,1,Converting android.os.Handler calls to use coroutines
1738,2019-12-26 13:34:29.000000000,1970-01-01 00:00:00.000000001,open,0,Test linearizability of Channel.isClosedForSend/Receive and isEmpty
1737,2019-12-26 13:33:23.000000000,2020-05-08 21:49:50.000000000,closed,0,Test linearizability of Semaphore and Mutex
1736,2019-12-25 14:09:40.000000000,2019-12-25 21:35:36.000000000,closed,0,Fix non-linearizability in `ArrayChannel` while moving an element from the waiting queue to the buffer
1735,2019-12-25 13:50:50.000000000,2019-12-25 20:33:54.000000000,closed,1,Generate site using Jekyll via Docker
1734,2019-12-24 19:10:38.000000000,2019-12-24 20:23:47.000000000,closed,2,Application crash while opening plaid button screen
1733,2019-12-24 17:06:06.000000000,2020-02-14 17:39:10.000000000,closed,1,Build project using JDK 11
1732,2019-12-24 14:48:37.000000000,2020-04-27 16:04:01.000000000,closed,0,Breaking change: Experimental Flow.onCompletion contract for cause
1731,2019-12-24 13:21:56.000000000,2019-12-26 14:59:41.000000000,closed,0,ReceiveChannel.receiveAsFlow extension
1730,2019-12-23 19:51:43.000000000,2020-04-22 20:22:11.000000000,closed,2,Ensure that flowOn does not resume downstream after cancellation
1729,2019-12-23 16:19:11.000000000,1970-01-01 00:00:00.000000001,open,0,Android: CoroutineExceptionHandlerImpl ClassCastException with R8 1.6.53 and AGP 3.6RC01
1728,2019-12-20 19:30:42.000000000,2019-12-25 16:16:40.000000000,closed,1,Do not request additional worker from 'yield' calls and during post-e…
1727,2019-12-20 18:32:41.000000000,2020-03-23 13:19:21.000000000,closed,1,Java9 reactive streams integration
1726,2019-12-19 22:33:18.000000000,1970-01-01 00:00:00.000000001,open,10,Coroutines Android Slow Launch Times
1725,2019-12-19 15:46:38.000000000,2019-12-19 20:34:47.000000000,closed,4,Wrong flow behavior - take with toList 
1724,2019-12-19 14:57:29.000000000,1970-01-01 00:00:00.000000001,open,0,Promote suspendAtomicCancellableCoroutineReusable
1723,2019-12-19 14:43:56.000000000,2019-12-19 14:52:52.000000000,closed,2,Returned instance type is wrong when using Generics multiple times 
1722,2019-12-19 13:09:45.000000000,2019-12-19 13:37:13.000000000,closed,0,Use common ThreadLocal declaration from stdlib
1721,2019-12-19 02:05:52.000000000,1970-01-01 00:00:00.000000001,open,2,Flow for RSocket
1720,2019-12-18 11:07:05.000000000,1970-01-01 00:00:00.000000001,open,0,Dispatchers.setMain on common code
1719,2019-12-17 21:15:34.000000000,2019-12-18 13:27:45.000000000,closed,0,Use common SharedImmutable declaration from stdlib
1718,2019-12-17 14:12:45.000000000,2019-12-17 17:20:52.000000000,closed,2,Channel typealias 
1717,2019-12-17 13:44:40.000000000,2020-03-16 18:17:18.000000000,closed,1,ReceiveChannel.broadcast shall start lazy coroutine when closed
1716,2019-12-17 04:50:29.000000000,1970-01-01 00:00:00.000000001,open,0,shareIn and cache operators
1715,2019-12-16 21:55:01.000000000,2019-12-16 22:18:02.000000000,closed,1,kotlinx.coroutines.guava.asDeferred() throws on nullable types
1714,2019-12-16 20:15:45.000000000,2019-12-17 13:25:33.000000000,closed,4,[Non issue] Job.invokeOnCompletion not immediately called on cancellation
1713,2019-12-16 15:24:35.000000000,2020-03-17 19:17:32.000000000,closed,5,Broadcast close with CoroutineStart.DEFAULT produces an unexpected exception
1712,2019-12-16 14:15:57.000000000,2019-12-16 14:26:08.000000000,closed,2,Flow catch not work
1711,2019-12-16 12:28:24.000000000,2020-01-19 23:03:55.000000000,closed,2,"Unresolved reference ""runBlockingTest"""
1710,2019-12-16 08:48:26.000000000,2019-12-16 13:52:51.000000000,closed,0,update `broadcastIn` and `produceIn` KDocs with correct names
1709,2019-12-16 08:14:39.000000000,2020-03-09 06:24:52.000000000,closed,1,kotlin-gradle-plugin version with build.gradle version
1708,2019-12-14 20:44:46.000000000,2019-12-16 17:37:49.000000000,closed,0,Fix TestBase example in kdoc
1707,2019-12-13 19:26:34.000000000,2020-04-21 16:04:47.000000000,closed,5,"""Inappropriate thread-blocking method call"" reported on java.nio.channels"
1706,2019-12-12 21:20:08.000000000,2020-03-06 17:01:56.000000000,closed,0,Scheduler: do not request additional thread for yield calls
1705,2019-12-12 21:19:42.000000000,1970-01-01 00:00:00.000000001,open,0,Scheduler: fast-path rendezvous between tryUnpark and re-scanning thread for CPU work 
1704,2019-12-12 21:16:30.000000000,2020-03-06 17:01:56.000000000,closed,0,Scheduler: Avoid unnecessary work signalling in LimitingDispatcher
1703,2019-12-12 17:54:15.000000000,2019-12-13 17:47:02.000000000,closed,0,Version 1.3.3
1702,2019-12-12 16:39:37.000000000,2020-06-16 22:39:32.000000000,closed,2,spring datajpatest with kotlin coroutine
1701,2019-12-12 13:46:42.000000000,2019-12-12 16:48:09.000000000,closed,0,Proguard rule to keep volatile name of SafeContinuation
1700,2019-12-12 13:05:21.000000000,2019-12-12 13:34:45.000000000,closed,0,Make sure that exception recovery does not break exception message
1699,2019-12-11 21:06:45.000000000,2019-12-12 13:11:11.000000000,closed,0,Introduce DebugProbes.isInstalled method
1698,2019-12-11 15:19:20.000000000,2019-12-11 17:14:33.000000000,closed,0,Introduce merge operator
1697,2019-12-11 08:20:33.000000000,2020-03-13 15:22:30.000000000,closed,4,DefaultDispatcher-worker-xx thread state ：TIMED_WAITING (parking)
1696,2019-12-10 17:14:15.000000000,2019-12-18 14:29:18.000000000,closed,4,Add ability to inject context elements into GlobalScope
1695,2019-12-10 14:38:41.000000000,2020-03-06 17:01:59.000000000,closed,1,Add .asFlow() extensions for ObservableValue to kotlinx-coroutines-javafx library
1694,2019-12-09 19:02:30.000000000,2019-12-13 17:47:15.000000000,closed,0,Missing Proguard rules? Crash at 'java.lang.NoSuchFieldException: No field result in class Lkotlin/f/i;'
1693,2019-12-09 11:38:57.000000000,2020-05-08 21:49:51.000000000,closed,3,Flow: Operator for action on successful completion
1692,2019-12-07 08:16:36.000000000,2020-03-16 13:46:02.000000000,closed,1,Function returning Deferred with a name that does not end with async
1691,2019-12-06 16:17:21.000000000,2019-12-13 17:47:13.000000000,closed,3,Dispatchers.IO doesn't clean interruption when reusing a thread
1690,2019-12-06 08:20:29.000000000,2019-12-07 21:01:17.000000000,closed,4,Native build out of date?
1689,2019-12-05 20:55:18.000000000,2019-12-10 19:15:33.000000000,closed,0,To string
1688,2019-12-05 20:38:16.000000000,2019-12-05 21:50:23.000000000,closed,5,Kotlin: Unresolved reference: runBlockingTest
1687,2019-12-05 10:41:01.000000000,2019-12-12 18:45:24.000000000,closed,1,user coroutines for mingw or macos
1686,2019-12-02 14:30:50.000000000,2019-12-02 20:55:30.000000000,closed,2,Reentrant lock
1685,2019-12-02 13:53:47.000000000,2019-12-09 15:59:21.000000000,closed,0,Fix MDCContext to keep changed MDCContextMap
1684,2019-11-30 03:18:22.000000000,2019-12-04 23:15:48.000000000,closed,5,JDK_16 error
1683,2019-11-29 18:01:18.000000000,2020-03-16 13:45:52.000000000,closed,15,SIGSEGV on Android 7
1682,2019-11-29 14:53:22.000000000,1970-01-01 00:00:00.000000001,open,2,Using runBlocking inside a lazy's initializer leads to multiple initializations.
1681,2019-11-28 23:03:08.000000000,2019-11-29 00:34:18.000000000,closed,1,Performance question about actor messages
1680,2019-11-28 18:00:37.000000000,2020-04-27 22:12:34.000000000,closed,1,Setup cancellation eagerly in suspendCancellableCoroutine to properly…
1679,2019-11-28 14:52:18.000000000,1970-01-01 00:00:00.000000001,open,10,Deadlock in case of multiple nested runBlocking
1678,2019-11-28 14:13:51.000000000,2019-12-04 12:48:52.000000000,closed,3,Wrong return type for generic suspending functions overridden as Unit
1677,2019-11-28 13:59:14.000000000,2019-12-13 17:48:33.000000000,closed,4,FlowCollector<T>.withContext() is depreciated with Error level
1676,2019-11-27 22:13:14.000000000,1970-01-01 00:00:00.000000001,open,0,onReceiveOrNul extension convenience
1675,2019-11-27 18:46:07.000000000,2019-11-27 18:48:28.000000000,closed,0,"Add ""JDK must include JavaFX"" requirement"
1674,2019-11-26 19:06:21.000000000,2020-02-12 20:36:16.000000000,closed,1,ConflatedChannel with synchronized access to the one-element buffer
1673,2019-11-26 08:53:05.000000000,2019-11-26 13:03:14.000000000,closed,2,Coroutine native: kotlin.TypeCastException
1672,2019-11-25 20:59:17.000000000,2019-11-28 18:37:35.000000000,closed,0,Improve documentation
1671,2019-11-25 09:19:03.000000000,2020-05-08 21:49:51.000000000,closed,6,Job.cancel() doesn't dispose SingleSource called via rx2 await()
1670,2019-11-25 01:27:58.000000000,2019-11-25 06:24:13.000000000,closed,2,How to properly convert a List<Flow<T>> to Flow<List<T>>? 
1669,2019-11-21 16:01:11.000000000,2019-11-25 13:24:45.000000000,closed,1,callbackFlow unexpected CancellationException
1668,2019-11-20 19:57:45.000000000,2019-11-21 14:24:10.000000000,closed,0,Properly support exception cause on JS and Native
1667,2019-11-20 13:06:05.000000000,2019-11-26 15:47:21.000000000,closed,5,Support yield in immediate dispatchers
1666,2019-11-19 23:44:24.000000000,2019-11-22 14:48:33.000000000,closed,3,Kotlin 1.3.60 support for native part
1665,2019-11-19 23:07:40.000000000,2019-11-24 12:02:26.000000000,closed,3,Is this act expected or not for [SupervisorJob/CoroutineScope]?
1664,2019-11-19 15:11:37.000000000,2019-11-19 15:18:46.000000000,closed,1,"""Inappropriate thread-blocking method call"" does not handle custom dispatcher"
1663,2019-11-19 13:04:50.000000000,2019-11-20 16:50:19.000000000,closed,0,Gradle: Don't resolve classpath during configuration phase
1662,2019-11-19 11:32:37.000000000,2019-11-19 14:41:07.000000000,closed,1,Thread use in suspendCoroutine
1661,2019-11-18 22:19:43.000000000,2020-02-18 18:08:16.000000000,closed,3,Hard to debug stacktrace with exception thrown in `.onStart { .. }`
1660,2019-11-15 11:47:43.000000000,2019-11-15 15:16:03.000000000,closed,7,"If  change the dispatcher of the coroutine, the stack trace will be cropped"
1659,2019-11-12 21:59:21.000000000,2019-11-30 18:31:49.000000000,closed,0,Throw NoSuchElementException instead of UnsupportedOperationException…
1658,2019-11-12 21:24:43.000000000,2019-11-30 18:31:58.000000000,closed,1,"Rethrow downstream exception during ""onCompletion"" emissions"
1657,2019-11-12 21:24:09.000000000,2020-03-06 17:01:58.000000000,closed,0,Enforce exception transparency in SafeFlow
1656,2019-11-12 18:40:05.000000000,2020-05-07 17:45:05.000000000,closed,4,[Flow] add flatMapFirst (exhaustMap) operator
1655,2019-11-12 15:37:33.000000000,2020-04-21 16:05:42.000000000,closed,3,How to lounch on at least x amounts of threads
1654,2019-11-11 19:39:09.000000000,2019-12-13 17:47:12.000000000,closed,0,"flowOf(""a"", ""b"").onCompletion { emit(""Done"") }.first() returns ""Done"""
1653,2019-11-09 04:12:14.000000000,2020-03-31 20:42:03.000000000,closed,5,[Question] Actor and concurrency issues 
1652,2019-11-08 16:48:27.000000000,2019-12-12 16:47:47.000000000,closed,4,CoroutineScheduler rework
1651,2019-11-08 08:19:46.000000000,2019-12-13 17:47:11.000000000,closed,4,[Question] Which dispatchers does CoroutineExceptionHandler use?
1650,2019-11-08 02:23:23.000000000,2019-12-13 17:47:11.000000000,closed,6,Android: Main.immediate causes a dispatch using Unconfined inside
1649,2019-11-07 21:06:40.000000000,2020-03-10 18:49:06.000000000,closed,7,[ ScopedActivity ] Job was cancelled
1648,2019-11-07 12:47:33.000000000,1970-01-01 00:00:00.000000001,open,16,[DRAFT] Support sharing of coroutines across threads in Kotlin/Native
1647,2019-11-06 22:08:53.000000000,2019-11-25 17:51:50.000000000,closed,3,Default value of a multiplatform function parameter is ignored in `runBlocking`
1646,2019-11-05 23:41:48.000000000,2019-11-06 01:39:20.000000000,closed,0,delete
1645,2019-11-05 19:06:36.000000000,1970-01-01 00:00:00.000000001,open,1,`delay` leads to crash from worker because of DefaultDelay 
1644,2019-11-04 14:27:34.000000000,2019-12-12 22:12:52.000000000,closed,4,Not canceling jobs | completion on Delay
1643,2019-11-02 13:45:34.000000000,2019-11-05 13:57:05.000000000,closed,0,Clarify documentation around Dispatcher.IO parallelism
1642,2019-11-02 06:19:59.000000000,2019-11-02 16:52:30.000000000,closed,1,Testing with Flow and Debounce
1641,2019-11-01 13:46:03.000000000,2019-11-05 14:08:05.000000000,closed,2,GlobalScope.launch中repeat
1640,2019-10-31 14:42:40.000000000,2019-10-31 18:27:26.000000000,closed,2,Cannot access coroutine (launch) from inside
1639,2019-10-29 16:42:19.000000000,2019-10-29 20:49:18.000000000,closed,0,Reactor ctx fix
1638,2019-10-29 15:42:44.000000000,2019-12-05 21:50:35.000000000,closed,1,Consistently handle undeliverable exceptions in RxJava and Reactor in…
1637,2019-10-27 10:41:31.000000000,2019-10-27 17:01:03.000000000,closed,3,Couldn't inline method call 'collect' [Android]
1636,2019-10-27 01:30:34.000000000,2019-12-12 11:51:10.000000000,closed,8,cannot import kotlinx
1635,2019-10-26 07:12:53.000000000,2019-10-29 16:18:52.000000000,closed,2,INSTALL_FAILED_DEXOPT
1634,2019-10-24 21:41:23.000000000,2019-12-13 17:47:11.000000000,closed,1,"Docs: Coroutine basics compiler error ""Unresolved reference: thread"""
1633,2019-10-24 17:03:15.000000000,1970-01-01 00:00:00.000000001,open,5,Provide EventSource.asFlow extension
1632,2019-10-24 03:26:30.000000000,1970-01-01 00:00:00.000000001,open,10,Provide Scheduler For Running A Task Periodically
1631,2019-10-23 03:48:36.000000000,2019-12-13 17:47:13.000000000,closed,7,recoverStackTrace breaks exception message
1630,2019-10-23 02:16:28.000000000,1970-01-01 00:00:00.000000001,open,0,TestCoroutineDispatcher Always Picks The Same Task Interleaving
1629,2019-10-23 02:14:57.000000000,1970-01-01 00:00:00.000000001,open,0,TestCoroutineDispatcher Intentional Time Skew
1628,2019-10-22 20:27:14.000000000,2019-10-28 12:43:09.000000000,closed,0,Get rid of deprecated FlowCollector<*>.withContext
1627,2019-10-22 20:18:36.000000000,2019-10-28 12:43:40.000000000,closed,0,TimeoutCancellationException recovery
1626,2019-10-22 19:53:17.000000000,1970-01-01 00:00:00.000000001,open,9,Test passes for 'runBlocking' but fails for 'runBlockingTest'
1625,2019-10-22 14:10:50.000000000,2019-12-13 17:47:10.000000000,closed,2,Provide meaningful stacktrace on cancellation
1624,2019-10-22 00:04:29.000000000,2019-10-28 12:45:19.000000000,closed,0,Fix mapLatest documentation example
1623,2019-10-21 21:26:12.000000000,2019-10-28 12:43:50.000000000,closed,0,Properly distinguish AbortFlowExceptions from different non-terminal …
1622,2019-10-18 17:59:39.000000000,2019-10-21 12:51:51.000000000,closed,3,Fix JobSupport comment about new state.
1621,2019-10-18 14:13:28.000000000,2019-10-20 14:26:15.000000000,closed,0,Remove outdated comment about cancelling without a cause.
1620,2019-10-18 13:40:24.000000000,2019-10-18 14:23:11.000000000,closed,0,Fix StackTraceRecoveryTest.testCancellableContinuation for 1.3.60
1619,2019-10-18 13:25:33.000000000,2019-11-25 17:56:45.000000000,closed,7,can i use coroutines in Java
1618,2019-10-17 06:12:24.000000000,1970-01-01 00:00:00.000000001,open,5,Unable to access Repository's suspending function scope launched from ViewModel
1617,2019-10-17 00:25:51.000000000,2019-11-25 17:56:58.000000000,closed,6,Add priority hint for CoroutineDispatchers
1616,2019-10-16 14:09:56.000000000,2019-12-13 17:47:10.000000000,closed,0,FlowCollector<T>.withContext check has false positives
1615,2019-10-16 11:41:54.000000000,2019-10-16 15:03:27.000000000,closed,0,Remove duplicate js/npm folder
1614,2019-10-15 13:32:31.000000000,2019-12-13 17:47:12.000000000,closed,1,Leaked exception in rx integration 
1613,2019-10-14 20:16:19.000000000,1970-01-01 00:00:00.000000001,open,3,[FLOW] collect the latest emitted value after some time from the latest emission
1612,2019-10-14 16:46:47.000000000,1970-01-01 00:00:00.000000001,open,5,"android with kotlin corutines , the unit test failure does not show in IDE if CoroutineExceptionHandler is attached"
1611,2019-10-12 14:42:20.000000000,2019-10-24 06:34:04.000000000,closed,3,Fixes typo
1610,2019-10-12 00:46:23.000000000,2019-12-13 17:47:10.000000000,closed,0,Flow.take() of outer flow not respected with presence of take() on inner flow
1609,2019-10-11 22:53:06.000000000,1970-01-01 00:00:00.000000001,open,0,Provide access to TestCoroutineScope's dispatcher
1608,2019-10-10 19:21:57.000000000,1970-01-01 00:00:00.000000001,open,3,Stacktrace recovery mode which replaces exception stacktrace
1607,2019-10-10 01:11:28.000000000,2019-10-21 20:01:07.000000000,closed,0,Slightly optimize combine operator
1606,2019-10-09 21:01:48.000000000,2019-12-13 17:47:13.000000000,closed,30,"Android ""Module with the Main dispatcher is missing"" (v1.3.2)"
1605,2019-10-09 20:11:51.000000000,2019-10-17 13:10:44.000000000,closed,1,Introduce Stream.consumeAsFlow
1604,2019-10-09 16:43:26.000000000,2019-10-17 13:10:25.000000000,closed,0,Docs fixes
1603,2019-10-09 13:57:15.000000000,2019-10-28 13:45:20.000000000,closed,11,Empty combine <Iterable<Flow<T>>> not emitting anything
1602,2019-10-08 20:09:44.000000000,2019-10-09 17:22:06.000000000,closed,0,Receive or closed fix
1601,2019-10-07 22:25:11.000000000,2019-12-13 17:47:09.000000000,closed,1,java.util.Stream.consumeAsFlow() operator
1600,2019-10-07 05:28:10.000000000,2019-10-07 13:41:30.000000000,closed,0,Remove unnecessary newlines in example code
1599,2019-10-06 16:14:57.000000000,2019-10-07 13:32:53.000000000,closed,0,Update coroutines builders kdocs to link to correct @param
1598,2019-10-06 13:44:00.000000000,2019-10-06 15:26:37.000000000,closed,1,Typo in CoroutineScope's javadoc
1597,2019-10-03 20:17:28.000000000,2019-10-04 23:35:36.000000000,closed,1,StackTrace recovery rework
1596,2019-10-03 17:20:39.000000000,2019-12-13 17:49:16.000000000,closed,4,Add support for tvOS and watchOS-based targets
1595,2019-10-03 14:21:29.000000000,2019-10-03 15:07:05.000000000,closed,1,Improve sentence grammar by adding 'an'
1594,2019-10-02 18:12:57.000000000,2019-10-03 10:58:55.000000000,closed,1,How to distribute work among limited coroutines in a most efficient way?
1593,2019-10-02 15:54:49.000000000,2019-10-02 16:54:37.000000000,closed,0,All ArrayChannel.size accesses should be under the channel lock
1592,2019-10-02 15:44:41.000000000,2019-10-03 15:15:43.000000000,closed,0,Fix race in channel select/cancel
1591,2019-10-02 13:27:03.000000000,2019-10-02 16:54:02.000000000,closed,5,Wrong thread with `suspend main` (works with `runBlocking`)
1590,2019-10-02 03:15:20.000000000,2019-10-02 12:41:08.000000000,closed,1,Make MapTest - testErrorCancelsUpstream - actually test map operator
1589,2019-10-01 22:01:13.000000000,1970-01-01 00:00:00.000000001,open,11,Consider dropping support for Java 6 in kotlinx.coroutines 1.4
1588,2019-10-01 15:22:59.000000000,2019-10-08 16:50:46.000000000,closed,13,ChannelAtomicCancelStressTest fails with CoroutinesInternalError caused by ClassCastException
1587,2019-10-01 15:10:37.000000000,1970-01-01 00:00:00.000000001,open,2,Add await() extension on Rector Mono type
1586,2019-10-01 15:08:25.000000000,2019-10-01 15:31:52.000000000,closed,0,Fix ArrayChannel.isBufferEmpty atomicity
1585,2019-10-01 11:32:59.000000000,2019-10-02 12:42:57.000000000,closed,0,Fix example-flow-14 docs to show expected exception in text
1584,2019-10-01 05:16:02.000000000,2019-12-13 17:47:09.000000000,closed,0,ReceiveChannel.onReceiveOrClosed throws when selecting on already-closed channel
1583,2019-09-30 17:00:29.000000000,2019-12-13 18:29:44.000000000,closed,1,Paradoxically slow performance when launching coroutines in IO dispatcher
1582,2019-09-28 21:33:22.000000000,2019-10-02 12:42:57.000000000,closed,1,Omission in Flow docs
1581,2019-09-28 12:07:14.000000000,2020-05-08 21:49:49.000000000,closed,7,Update CoroutineScope docs to recommend explicit scope
1580,2019-09-28 11:38:27.000000000,1970-01-01 00:00:00.000000001,open,0,Broken index.html link in generated docs
1579,2019-09-27 19:26:55.000000000,2019-09-30 19:11:02.000000000,closed,0,Make `isStressTest` and the related properties top-level
1578,2019-09-27 17:29:54.000000000,1970-01-01 00:00:00.000000001,open,2,'async' get stuck inside 'runBlocking'
1577,2019-09-27 13:16:23.000000000,1970-01-01 00:00:00.000000001,open,1,[DRAFT] Restore thread context elements when directly resuming to parent
1576,2019-09-27 12:49:37.000000000,2019-12-13 17:47:09.000000000,closed,2,What does '~is' mean?
1575,2019-09-26 15:39:35.000000000,2019-10-04 21:10:34.000000000,closed,1,Shorten resume call stack & get rid of unneeded MODE_xxx constants
1574,2019-09-26 01:06:11.000000000,2019-12-13 17:47:08.000000000,closed,0,Deep JVM stack on return from scope after suspension
1573,2019-09-26 00:53:47.000000000,2019-09-26 15:34:38.000000000,closed,0,Separate all JVM stress tests into a stressTest gradle task
1572,2019-09-25 20:06:39.000000000,2019-12-12 14:10:21.000000000,closed,1,User Class.forName instead of ServiceLoader to instantiate Dispatchers.Main on Android
1571,2019-09-25 18:08:59.000000000,2019-09-25 19:54:11.000000000,closed,0,Version 1.3.2
1570,2019-09-25 01:00:11.000000000,2019-09-25 16:01:57.000000000,closed,1,Hid the SettableFuture of future {}.
1569,2019-09-24 23:17:26.000000000,2019-09-25 13:49:52.000000000,closed,1,Channel.receive with the filter predicate
1568,2019-09-24 12:57:50.000000000,2019-09-25 12:43:30.000000000,closed,0,Replace all volatiles with atomics in common code
1567,2019-09-23 23:06:44.000000000,2019-12-13 18:30:24.000000000,closed,2,viewModelScope Unit Test: java.lang.IllegalStateException: Module with the Main dispatcher had failed to initialize
1566,2019-09-23 22:10:39.000000000,2019-09-26 12:23:51.000000000,closed,3,Error Flow builder
1565,2019-09-23 14:18:34.000000000,2020-03-04 18:17:32.000000000,closed,4,Simpler and faster lock-free linked list
1564,2019-09-23 12:53:20.000000000,1970-01-01 00:00:00.000000001,open,4,Insufficient Proguard configuration rules
1563,2019-09-23 01:01:10.000000000,2020-04-10 21:11:28.000000000,closed,1,Make the list of segments more abstract
1562,2019-09-22 22:26:46.000000000,2019-09-26 15:59:15.000000000,closed,0,Fix race condition in pair select
1561,2019-09-22 18:56:10.000000000,2019-12-13 17:47:08.000000000,closed,0,SelectDeadlockLFStressTest.testLockFreedom fails with KNPE
1560,2019-09-22 16:52:29.000000000,2019-10-02 12:54:37.000000000,closed,1,Migrate BOM module to java-platform plugin
1559,2019-09-21 04:20:19.000000000,2019-09-21 17:24:26.000000000,closed,0,Make Semaphore and Mutex stress tests concurrent
1558,2019-09-20 12:32:13.000000000,2020-07-16 18:44:07.000000000,closed,8,Add chunked and windowed operators
1557,2019-09-20 02:23:59.000000000,2019-12-13 17:47:13.000000000,closed,23,Crash after upgrade from 1.3.0 to 1.3.1
1556,2019-09-19 19:49:19.000000000,2019-09-25 18:52:15.000000000,closed,3,Deprecate obsolete reactive API
1555,2019-09-19 15:16:41.000000000,2019-09-20 10:58:38.000000000,closed,7,About CoroutineScope Context
1554,2019-09-19 01:25:49.000000000,2020-03-16 13:46:54.000000000,closed,1,Flaky RunningThreadStackMergeTest
1553,2019-09-19 00:45:35.000000000,1970-01-01 00:00:00.000000001,open,11,Ability to specify the number of permits to acquire and release
1552,2019-09-18 22:49:02.000000000,2019-09-18 23:02:35.000000000,closed,3,Have kotlinx-coroutines-guava depend on listenablefuture instead of guava artifact
1551,2019-09-18 10:35:45.000000000,2019-09-18 12:52:05.000000000,closed,1,Terrible performance
1550,2019-09-18 07:33:27.000000000,2019-09-19 00:43:02.000000000,closed,2,TestCoroutineContext is marked as deprecated
1549,2019-09-17 20:04:36.000000000,2019-09-19 18:29:05.000000000,closed,1,Promote reactive bridges for Flow to stable API
1548,2019-09-17 19:34:58.000000000,2019-09-18 13:03:17.000000000,closed,0,Eagerly create coroutine for lazily-started coroutine builders in ord…
1547,2019-09-17 18:27:49.000000000,2019-09-18 13:03:30.000000000,closed,0,Install debug probes in CoroutinesTimeout constructor to capture coro…
1546,2019-09-17 18:08:47.000000000,2019-09-18 15:27:23.000000000,closed,1,Non-linearizable cancel
1545,2019-09-17 17:00:03.000000000,1970-01-01 00:00:00.000000001,open,2,Unstarted lazy job prevents parent from completion
1544,2019-09-17 16:52:32.000000000,2019-12-13 17:47:06.000000000,closed,0,CoroutinesDump doesn't dump unstarted lazy jobs
1543,2019-09-17 16:44:28.000000000,1970-01-01 00:00:00.000000001,open,4,CoroutinesTimeout non-coroutines jobs dump
1542,2019-09-17 16:35:26.000000000,2019-12-13 17:47:06.000000000,closed,0,CoroutinesTimeout dumps too few jobs
1541,2019-09-17 13:48:36.000000000,1970-01-01 00:00:00.000000001,open,11,Provide `associate` terminal operators
1540,2019-09-17 11:12:28.000000000,2019-09-20 22:55:26.000000000,closed,12,Exponential retry backoff on failure callback listener
1539,2019-09-16 21:16:59.000000000,2019-09-17 19:50:44.000000000,closed,0,Do not aggregate all coroutine info into a single string before dumpi…
1538,2019-09-16 19:32:52.000000000,2019-09-17 20:00:48.000000000,closed,1,Optimize Flow.take
1537,2019-09-13 19:39:51.000000000,2019-09-14 18:12:14.000000000,closed,0,Properly handle null values in ListenableFuture
1536,2019-09-13 16:47:04.000000000,2019-09-13 19:17:49.000000000,closed,0,"Improve documentation of CompletableJob.completeExceptionally, add te…"
1535,2019-09-13 16:42:37.000000000,2019-12-13 17:47:06.000000000,closed,0,Fail to use `DebugProbes.dumpCoroutines` with large amount of coroutines
1534,2019-09-13 15:35:46.000000000,2019-09-25 19:02:24.000000000,closed,3,Introduce reusable cancellable continuations for hot loops with channels
1533,2019-09-13 13:31:03.000000000,2020-02-18 18:11:22.000000000,closed,14,java.lang.VerifyError: Illegal type at constant pool entry 156 in class 'etc'
1532,2019-09-13 10:59:34.000000000,2019-12-13 18:35:17.000000000,closed,12,Module with the Main dispatcher is missing with version 1.3.0-RC2 and other versions as well
1531,2019-09-12 08:22:03.000000000,1970-01-01 00:00:00.000000001,open,6,How can you use runBlockingTest with a coroutine you do not cancel?
1530,2019-09-12 03:06:21.000000000,2019-10-01 19:06:58.000000000,closed,1,Non-linearizable `isClosedForReceive` in `ArrayChannel`
1529,2019-09-11 22:07:46.000000000,2019-09-18 22:46:32.000000000,closed,4,Broken generated code on Turkish PC
1528,2019-09-11 14:55:13.000000000,2019-09-19 18:45:07.000000000,closed,1,BroadcastChannel's consumeEach is still marked as obsolete…
1527,2019-09-11 13:00:34.000000000,2019-09-13 19:17:51.000000000,closed,6,Unexpected behaviour of the join() method of CompletableJob
1526,2019-09-11 12:13:04.000000000,2019-12-13 17:47:08.000000000,closed,1,Non-linearizable ArrayChannel execution with concurrent close+send and suspended receiver
1525,2019-09-10 16:03:01.000000000,2019-09-10 16:06:52.000000000,closed,1,Fix typo.
1524,2019-09-10 15:56:53.000000000,2019-09-21 18:11:35.000000000,closed,0,Fix StackOverflowError with select expressions
1523,2019-09-09 18:05:30.000000000,2019-09-10 17:28:05.000000000,closed,0,Minor documentation improvements
1522,2019-09-08 12:29:16.000000000,2019-09-10 11:03:14.000000000,closed,2,Dispatchers.Main vs Dispatchers.Main.immediate
1521,2019-09-07 20:07:45.000000000,2019-09-10 14:14:09.000000000,closed,1,Fixes linearizability of Channel.close in advanced receive+send case
1520,2019-09-06 17:15:02.000000000,2019-12-26 13:31:50.000000000,closed,3,Update lincheck to 2.5
1519,2019-09-06 12:11:17.000000000,2019-09-10 13:36:00.000000000,closed,0,"watson proofread, small suggested edits for review"
1518,2019-09-06 00:52:37.000000000,2019-09-20 22:39:27.000000000,closed,1,Add CompletableDeferred.completeWith(result: Result<T>)
1517,2019-09-06 00:12:57.000000000,2019-09-06 11:23:11.000000000,closed,1,"assertNotNull(deferred) gets ""Deferred result is never used"" inspection"
1516,2019-09-05 20:12:23.000000000,1970-01-01 00:00:00.000000001,open,4,Add function to convert Deferred to suspending function
1515,2019-09-05 14:24:45.000000000,2019-09-05 18:38:48.000000000,closed,0,Fixed completion sequence of ChannelLFStressTest
1514,2019-09-05 14:00:01.000000000,2019-09-05 14:26:01.000000000,closed,0,Robust waiting in CoroutinesDumpTest
1513,2019-09-05 13:49:12.000000000,2019-09-13 16:48:01.000000000,closed,0,CoroutinesDumpTest.testRunningCoroutineWithSuspensionPoint times out
1512,2019-09-05 12:57:00.000000000,2019-09-05 14:09:42.000000000,closed,0,Channel lf test completion
1511,2019-09-05 11:14:36.000000000,2019-09-05 14:00:38.000000000,closed,7,"Update example Android apps toolchain (AGP 3.5.0, AndroidX)"
1510,2019-09-05 09:01:53.000000000,2019-09-16 21:20:26.000000000,closed,2,ListenableFutureTest.testFutureCompletedWithNullAsDeferred hangs
1509,2019-09-05 03:22:38.000000000,2019-09-10 17:17:42.000000000,closed,9, Module with the Main dispatcher is missing with version 1.3.1
1508,2019-09-05 00:37:33.000000000,2019-09-05 09:04:12.000000000,closed,0,Fixed linearizability of Channel.close operation
1507,2019-09-04 20:23:18.000000000,2019-09-05 14:09:43.000000000,closed,0,ChannelLFStressTest.testRendezvousLockFreedom: A thread is still alive
1506,2019-09-04 17:54:05.000000000,2019-09-04 18:52:24.000000000,closed,0,Version 1.3.1
1505,2019-09-04 17:18:42.000000000,2019-09-04 17:36:14.000000000,closed,0,"Check for -PstressTest=true to run ""long"" stress test"
1504,2019-09-04 16:18:37.000000000,2019-09-04 17:27:01.000000000,closed,1,Testing lifecycle of a CoroutineScope
1503,2019-09-04 15:41:02.000000000,2019-09-19 18:45:51.000000000,closed,3,"""Inappropriate thread-blocking method call"" inspection does not handle flowOn() declaration"
1502,2019-09-04 14:22:35.000000000,2019-09-04 16:36:12.000000000,closed,0,Fix propagation for stressTest property for nightly stress tests
1501,2019-09-04 03:32:28.000000000,2019-09-04 14:21:43.000000000,closed,3,Quick test covering future(LAZY) {}'s behaviour
1500,2019-09-04 00:39:25.000000000,2019-09-06 22:08:04.000000000,closed,5,Allow callbackFlow to specify capacity
1499,2019-09-03 18:00:15.000000000,1970-01-01 00:00:00.000000001,open,2,Time-related methods shall support experimental Kotlin Clock/Duration
1498,2019-09-03 14:22:52.000000000,1970-01-01 00:00:00.000000001,open,13,Flow: withLatestFrom operator
1497,2019-09-03 10:45:57.000000000,2019-09-04 17:37:53.000000000,closed,0,Gradle version 5.6.1
1496,2019-09-02 18:31:35.000000000,2019-09-02 19:44:19.000000000,closed,0,Flow docs: Fix calls to currentTimeMillis
1495,2019-09-02 12:52:57.000000000,2019-09-18 11:45:43.000000000,closed,14,Flow improvement (sort and onCancel)
1494,2019-09-02 01:05:32.000000000,2019-09-02 19:45:02.000000000,closed,1,Update flow.md
1493,2019-09-01 01:57:40.000000000,2019-09-07 07:36:33.000000000,closed,17,Redundant 'async' call may be reduced to 'kotlinx.coroutines.withContext'
1492,2019-08-31 13:25:28.000000000,2019-09-02 18:31:44.000000000,closed,1,Fix incorrect currentTimeMillis() call
1491,2019-08-30 22:12:57.000000000,2019-12-13 17:47:12.000000000,closed,7,Merge Flow operator is missing
1490,2019-08-30 03:00:47.000000000,2020-03-06 17:01:56.000000000,closed,8,Convert `ReceiveChannel<T>` to `Flow<T>` without consuming
1489,2019-08-29 18:36:11.000000000,2019-09-18 23:20:49.000000000,closed,6,blocking corountine scope
1488,2019-08-29 01:28:40.000000000,1970-01-01 00:00:00.000000001,open,2,API to work with event loop in native while we wait for #462
1487,2019-08-29 01:15:26.000000000,2019-08-30 19:47:25.000000000,closed,4,kotlinx.coroutines.CoroutinesInternalError: Fatal exception in coroutines machinery for DispatchedContinuation
1486,2019-08-28 21:48:19.000000000,2020-02-14 15:18:38.000000000,closed,2,Use a separate Knit tool
1485,2019-08-28 21:36:36.000000000,1970-01-01 00:00:00.000000001,open,10,"When creating a new job, it should be easier (default) to create child instead of a new root job"
1484,2019-08-28 15:17:24.000000000,1970-01-01 00:00:00.000000001,open,2,[Flow] combineTransformLatest()
1483,2019-08-28 13:05:32.000000000,2019-08-28 14:19:31.000000000,closed,0,Consistent naming for stress tests
1482,2019-08-28 13:05:29.000000000,2019-08-28 13:06:09.000000000,closed,0,Test names
1481,2019-08-28 12:19:33.000000000,2019-08-28 14:19:58.000000000,closed,0,Consistently unwrap exception in slow path of CompletionStage.asDeferred
1480,2019-08-28 09:53:33.000000000,1970-01-01 00:00:00.000000001,open,1,coroutines-guide-ui.md actor job cancellation
1479,2019-08-28 00:46:34.000000000,2019-09-04 18:52:24.000000000,closed,3,CompletionStage<T>.asDeferred() does not unwrap CompletionException
1478,2019-08-27 19:25:48.000000000,2019-12-13 17:47:07.000000000,closed,0,Create real stress-tests for Mutex and Semaphore
1477,2019-08-27 17:48:18.000000000,2019-09-03 17:43:24.000000000,closed,3,Fix of a bug in the semaphore
1476,2019-08-27 15:21:15.000000000,2019-08-27 18:55:39.000000000,closed,0,Update top-level README with links:
1475,2019-08-27 12:08:34.000000000,2019-08-27 12:57:07.000000000,closed,1,Channel linearizability tests fail
1474,2019-08-27 02:00:52.000000000,2019-12-13 17:47:11.000000000,closed,8,Android: await frame
1473,2019-08-26 20:51:00.000000000,2019-08-27 11:07:53.000000000,closed,0,Ensure that all guide 'main' functions return Unit
1472,2019-08-26 18:06:28.000000000,2019-09-18 23:29:07.000000000,closed,2,Flow's emit not conducting smart casting
1471,2019-08-25 17:25:27.000000000,1970-01-01 00:00:00.000000001,open,0,Verify that every public symbol is used from test source set
1470,2019-08-25 14:35:34.000000000,2019-08-26 20:16:44.000000000,closed,2,Update shared-mutable-state-and-concurrency.md
1469,2019-08-25 02:24:21.000000000,2019-09-09 14:16:34.000000000,closed,2,Flow equivalent of this RxJava SwitchMap stream
1468,2019-08-23 23:17:09.000000000,2019-08-27 18:55:39.000000000,closed,1,bad link in README
1467,2019-08-23 18:49:50.000000000,2019-08-24 02:33:31.000000000,closed,1,Build failed with inline function : 1.5.0
1466,2019-08-23 18:22:05.000000000,2019-08-25 17:20:07.000000000,closed,0,"flow: fix recursion in combineTransform<T1, T2, R>()"
1465,2019-08-23 16:59:46.000000000,2019-08-26 20:25:10.000000000,closed,0,Add RendezvousChannelStressLFTest
1464,2019-08-23 14:45:31.000000000,2019-12-26 13:53:52.000000000,closed,0,Flow.flattenMerge benchmark
1463,2019-08-23 00:05:42.000000000,2019-08-23 01:34:43.000000000,closed,1,Use Array.fill extension from stdlib
1462,2019-08-22 22:02:53.000000000,2019-08-23 16:45:57.000000000,closed,0,Version 1.3.0
1461,2019-08-22 21:14:38.000000000,1970-01-01 00:00:00.000000001,open,0,Bfs channel benchmark
1460,2019-08-22 16:04:59.000000000,2019-08-25 18:51:16.000000000,closed,5,"Cancellation of flow ""primitives"" and terminal operators"
1459,2019-08-22 12:14:07.000000000,2019-08-22 12:29:59.000000000,closed,1,Support for ReadWriteLock coroutines alterantive
1458,2019-08-21 22:52:22.000000000,2019-08-22 16:20:09.000000000,closed,0,Increase to default buffer size to 64
1457,2019-08-21 18:54:50.000000000,2019-08-22 16:20:38.000000000,closed,0,Introduce CoroutineDispatcher.asExecutor() extension
1456,2019-08-21 17:32:04.000000000,2019-09-09 20:48:29.000000000,closed,2,Improve documentation and grammar
1455,2019-08-20 21:57:15.000000000,2019-08-21 13:31:47.000000000,closed,1,Submit failing `RendezvousChannelStressTest`
1454,2019-08-20 21:56:49.000000000,2019-08-25 18:50:08.000000000,closed,2,Unexpected crash with `AbortFlowException` 
1453,2019-08-20 21:06:08.000000000,2019-08-21 18:28:08.000000000,closed,0,Replace kotlinx.coroutines.reactive.FlowKt and kotlinx.coroutines.rea…
1452,2019-08-20 17:24:54.000000000,2019-08-22 16:21:00.000000000,closed,0,Restore context preservation invariant in flatMapMerge
1451,2019-08-20 16:55:22.000000000,2019-08-21 14:11:57.000000000,closed,0,Implemented parallel bfs benchmark
1450,2019-08-20 05:29:13.000000000,2019-08-23 16:46:00.000000000,closed,7,Convert `CoroutineContext` into `Executor`
1449,2019-08-19 18:32:23.000000000,2019-08-20 16:55:56.000000000,closed,6,Provide a way to cancel a running coroutine immediately
1448,2019-08-19 15:04:37.000000000,2019-08-19 17:06:46.000000000,closed,3,How to emit data to kotlin flow
1447,2019-08-19 03:42:20.000000000,2019-08-24 04:50:29.000000000,closed,5,Should CompletionStage.asDeferred be discouraged?
1446,2019-08-19 02:08:22.000000000,1970-01-01 00:00:00.000000001,open,10,throttleFirst Flow operator
1445,2019-08-17 16:09:26.000000000,2019-08-22 21:07:36.000000000,closed,1,Optimize select expression registration phase
1444,2019-08-15 19:45:25.000000000,2019-08-15 19:51:10.000000000,closed,1,Fix coroutines guide table
1443,2019-08-15 19:02:56.000000000,2019-08-16 17:39:51.000000000,closed,1,SuperVisorJob prevents runBlocking to wait for completion of its children
1442,2019-08-14 23:46:39.000000000,1970-01-01 00:00:00.000000001,open,2,ListenableFuture future() cancellation
1441,2019-08-14 23:43:20.000000000,2019-08-29 18:52:41.000000000,closed,2,Repaired some of ListenableFuture.kt's cancellation corner cases.
1440,2019-08-14 19:39:12.000000000,2019-08-23 16:46:00.000000000,closed,1,Invalid flow variant error when using flatMapMerge
1439,2019-08-14 14:19:35.000000000,2019-12-13 17:47:09.000000000,closed,0,Doc: Better example for scope builder section of documentation
1438,2019-08-13 22:22:20.000000000,2019-08-16 00:52:42.000000000,closed,5,Newly created Jobs considered as cancelled after only 1 occurence of an exception
1437,2019-08-12 19:52:16.000000000,1970-01-01 00:00:00.000000001,open,0,Take into account synthetic declarations when sanitizing a stacktrace
1436,2019-08-12 16:01:42.000000000,2019-08-14 12:28:17.000000000,closed,1,Do not report already handled exception in select builder
1435,2019-08-12 13:42:52.000000000,2019-08-23 17:28:27.000000000,closed,0,Rename test to SegmentQueueLinearizabilityTest for consistency
1434,2019-08-11 11:31:39.000000000,2019-08-23 16:45:59.000000000,closed,2,Debounce operator not working as expected ??
1433,2019-08-10 01:18:56.000000000,2019-08-23 16:45:59.000000000,closed,5,kotlinx.coroutines.flow.internal.ChildCancelledException: Child of the scoped flow was cancelled
1432,2019-08-09 19:39:32.000000000,2019-08-22 21:08:49.000000000,closed,1,Flow docs
1431,2019-08-09 19:27:32.000000000,2019-08-09 22:17:55.000000000,closed,4,Version 1.3.0-RC2
1430,2019-08-09 15:54:42.000000000,2019-08-09 18:30:46.000000000,closed,0,Deprecate delayFlow and delayEach
1429,2019-08-09 15:41:58.000000000,2019-08-09 22:18:00.000000000,closed,4,Deprecate delayFlow and delayEach
1428,2019-08-09 13:12:27.000000000,2019-08-09 18:31:45.000000000,closed,0,Use 'Class.forName($name).canonicalName' instead of '$name' in stackt…
1427,2019-08-08 19:44:26.000000000,1970-01-01 00:00:00.000000001,open,0,Using Monte-Carlo Approach for the Producer-Consumer Channel Benchmark 
1426,2019-08-08 14:13:46.000000000,2019-08-09 18:32:11.000000000,closed,0,"Properly enforce flow invariant when flow is used from ""suspend fun m…"
1425,2019-08-08 13:53:19.000000000,2019-08-08 16:58:21.000000000,closed,0,"[MD] Fix typos and article use, reword phrases in ""Composing Suspending fu…"
1424,2019-08-08 12:28:59.000000000,2019-08-08 15:45:46.000000000,closed,0,Change keep rules targeting to match AGP changes
1423,2019-08-08 07:04:53.000000000,2019-08-08 15:44:36.000000000,closed,0,"Fix issue 1422, where aquiredPermits param is totally ignored"
1422,2019-08-08 07:02:10.000000000,2019-08-09 22:27:35.000000000,closed,1,"Semaphore totally ignores its ""acquiredPermits"" parameter"
1421,2019-08-08 02:03:58.000000000,2019-08-09 22:18:00.000000000,closed,4,Flow invariant is violated when no obvious context switching
1420,2019-08-08 00:52:32.000000000,2019-08-09 18:32:34.000000000,closed,0,"Get rid of NonRecoverableThrowable, mention way to opt-out stacktrace…"
1419,2019-08-08 00:49:24.000000000,2019-09-05 14:09:43.000000000,closed,7,Non-linearizable execution of channels
1418,2019-08-07 19:31:39.000000000,2019-08-08 16:18:27.000000000,closed,2,"coroutine-context-and-dispatchers.md: Improve article usage, fix typo…"
1417,2019-08-07 16:29:54.000000000,2019-08-08 09:39:45.000000000,closed,1,Fix SOE with select onSend/onReceive clauses on the same channel
1416,2019-08-07 15:45:13.000000000,2019-08-09 22:18:00.000000000,closed,0,Stacktrace recovery works incorrectly when Android minifier is enabled
1415,2019-08-07 13:57:32.000000000,2019-08-09 18:32:51.000000000,closed,0,Optimize debounce operator allocation pressure by using conflated pro…
1414,2019-08-06 17:02:42.000000000,2019-08-07 12:09:37.000000000,closed,0,Improve Semaphore API
1413,2019-08-06 14:05:11.000000000,2019-08-08 17:32:03.000000000,closed,9,Branch reactor-context breaks Spring 2.2.0M4
1412,2019-08-06 01:45:20.000000000,2019-08-06 13:12:44.000000000,closed,2,Fix a typo in the flow migration replacement
1411,2019-08-05 17:53:10.000000000,2019-12-13 17:47:07.000000000,closed,0,StackOverflowError when trying to select onSend and onReceive on the same channel
1410,2019-08-05 16:13:02.000000000,2019-08-05 16:13:33.000000000,closed,0,Update Guava to the latest version 28.0
1409,2019-08-05 14:15:47.000000000,2019-08-05 18:59:12.000000000,closed,0,Use setTimeout-based dispatcher when process is not available on the …
1408,2019-08-05 13:48:04.000000000,2019-08-05 15:12:27.000000000,closed,1,Flow.kt: fix typos and rephrase some expressions for better readability
1407,2019-08-04 15:21:22.000000000,2019-08-05 02:13:54.000000000,closed,1,Remove no longer needed tests excludes
1406,2019-08-04 12:30:21.000000000,1970-01-01 00:00:00.000000001,open,0,Generalize coroutineScope/supervisorScope with user-specified strategy
1405,2019-08-03 22:10:37.000000000,2019-08-09 22:17:58.000000000,closed,0,Remove no longer needed excludes
1404,2019-08-03 17:17:02.000000000,2019-08-12 15:54:14.000000000,closed,4,JS: TypeError: Cannot read property 'nextTick' of undefined
1403,2019-08-02 02:45:08.000000000,2019-08-08 17:13:09.000000000,closed,3,Cross platform support for scheduled coroutines
1402,2019-08-02 00:48:30.000000000,2020-03-17 19:17:31.000000000,closed,1,kotlin.time.Duration overloads for delay in common
1401,2019-08-01 12:43:33.000000000,2019-08-01 19:56:03.000000000,closed,1,Fix documentation of (suspend () -> T).asFlow()
1400,2019-07-31 19:28:04.000000000,1970-01-01 00:00:00.000000001,open,0,In memory chat benchmark
1399,2019-07-31 14:36:18.000000000,2019-07-31 14:50:04.000000000,closed,2,Flow from sequence
1398,2019-07-31 11:32:56.000000000,2019-08-01 21:15:40.000000000,closed,3,"Spring 5.2 and OAuth2 Security - Integration with the kotlin coroutines, but at runtime I always have NPE."
1397,2019-07-30 23:40:36.000000000,1970-01-01 00:00:00.000000001,open,15,runblocking causes unintuitive deadlock with specified dispatcher
1396,2019-07-30 08:32:08.000000000,2019-08-05 18:08:21.000000000,closed,0,Check for cancellation in concurrent flow merge on each element
1395,2019-07-30 01:29:45.000000000,1970-01-01 00:00:00.000000001,open,1,runBlockingTest raises job has not completed yet with Futures
1394,2019-07-30 01:20:46.000000000,2019-08-02 20:00:06.000000000,closed,7,Incorrect Doc
1393,2019-07-29 18:07:52.000000000,1970-01-01 00:00:00.000000001,open,4,Promote CoroutineStart.UNDISPATCHED to non experimental API
1392,2019-07-27 21:35:50.000000000,2019-08-09 22:17:59.000000000,closed,2,Canceling flatMapMerge not canceling the source?
1391,2019-07-27 07:58:03.000000000,1970-01-01 00:00:00.000000001,open,1,Provide JUnit Rule that provides a scope that functions like `runBlockingTest`
1390,2019-07-27 07:09:52.000000000,1970-01-01 00:00:00.000000001,open,2,Provided example test for withTimeout fails
1389,2019-07-26 19:10:54.000000000,2019-08-05 15:29:55.000000000,closed,0,Deprecate flowWith with ERROR
1388,2019-07-26 16:10:03.000000000,2019-08-09 18:33:56.000000000,closed,0,Allocate underlying buffer in ArrayChannel in on-demand manner
1387,2019-07-26 16:01:27.000000000,2019-07-31 00:34:45.000000000,closed,7,Get rid of top-level functions in Migration.kt to improve experience …
1386,2019-07-26 15:51:47.000000000,2019-07-27 11:44:17.000000000,closed,2,Start collecting multiple flows together without suspension deadlock?
1385,2019-07-26 13:53:49.000000000,2019-08-12 15:55:02.000000000,closed,2,Cancellation propagation between spatially disconnected FlowCollectors
1384,2019-07-26 02:30:50.000000000,2019-07-26 12:36:02.000000000,closed,1,Fix naming for Flow BehaviorSubject migration
1383,2019-07-26 02:21:19.000000000,2019-07-26 12:37:22.000000000,closed,1,Add more Flow migrations for Rx types
1382,2019-07-25 18:28:17.000000000,1970-01-01 00:00:00.000000001,open,5,Mutual exclusion for resource
1381,2019-07-25 17:35:48.000000000,2019-08-09 18:56:10.000000000,closed,1,Combine & switch rework
1380,2019-07-25 16:40:02.000000000,2019-07-27 15:38:04.000000000,closed,2,Custom Flow.collect method implementation and collector cancellation
1379,2019-07-25 12:22:41.000000000,2020-03-17 19:17:30.000000000,closed,0,"Make coroutines debugging, specifically coroutines dumping, ready for production"
1378,2019-07-25 08:08:04.000000000,1970-01-01 00:00:00.000000001,open,2,UncaughtExceptionCaptor does not provide a way to assert against and remove an exception from the list
1377,2019-07-24 19:38:10.000000000,2019-08-09 18:35:15.000000000,closed,2,Coroutine context propagation for Reactor to coroutines API migration
1376,2019-07-24 18:05:42.000000000,2019-07-24 19:14:05.000000000,closed,1,Use RxJava Spelling for BehaviorSubject.
1375,2019-07-24 16:40:15.000000000,2019-07-25 13:24:20.000000000,closed,0,Channel flow scope
1374,2019-07-24 16:00:52.000000000,1970-01-01 00:00:00.000000001,open,0,Replace TimeoutCancellationException with TimeoutException
1373,2019-07-24 14:38:28.000000000,2019-07-30 08:35:46.000000000,closed,1,[Question] How to move from RxJava to Kotlin coroutines - simple presenter example 
1372,2019-07-24 14:12:54.000000000,2020-03-17 19:17:31.000000000,closed,0,Provide a mode for DebugProbes that does not capture creation stacktrace
1371,2019-07-24 01:35:50.000000000,2019-08-05 19:54:40.000000000,closed,4,Cover all publications in bom
1370,2019-07-23 19:45:27.000000000,2019-07-23 20:38:41.000000000,closed,4,Confusing crash log (probably coroutines)
1369,2019-07-23 17:35:17.000000000,2019-07-24 16:44:06.000000000,closed,0,Better docs on coroutines debugging property
1368,2019-07-23 16:39:15.000000000,2019-08-09 18:36:25.000000000,closed,1,"Fully copy CoroutineInfo for DebugProbes.dumpCoroutinesInfo, it is re…"
1367,2019-07-23 15:50:46.000000000,2019-08-07 20:22:30.000000000,closed,2,Can not disable stack trace recovery for a specific exception
1366,2019-07-23 13:42:39.000000000,2019-07-23 15:40:04.000000000,closed,0,Fixed DebugProbes missed data
1365,2019-07-23 13:02:27.000000000,1970-01-01 00:00:00.000000001,open,8,Integrate test dispatchers with libraries using Dispatchers.Xxx
1364,2019-07-23 01:46:05.000000000,2019-07-23 16:36:32.000000000,closed,2,Fix situation where thread.uncaughtExceptionHandler can be null.
1363,2019-07-22 18:54:35.000000000,2019-07-22 21:00:41.000000000,closed,7,Question: Should variable in coroutine body be synchronized with AtomicReference or Channel if only one inner coroutine changes it?
1362,2019-07-22 14:58:26.000000000,2019-07-30 08:36:05.000000000,closed,1,kotlin.native.IncorrectDereferenceException: Trying to access top level value not marked as @ThreadLocal or @SharedImmutable from non-main thread
1361,2019-07-21 17:13:05.000000000,2019-07-22 13:05:06.000000000,closed,1,[Flow] combineLatest strange behaviour on Result<T>
1360,2019-07-21 04:10:15.000000000,1970-01-01 00:00:00.000000001,open,11,Coroutine scheduler monitoring
1359,2019-07-21 00:50:50.000000000,2019-08-04 11:53:31.000000000,closed,5,"noticed strange behavior, not sure if it using coroutineScope incorrectly"
1358,2019-07-20 14:34:05.000000000,2019-08-08 16:21:59.000000000,closed,8,Stacktrace recovery doesn't work with ktor
1357,2019-07-19 17:53:48.000000000,2019-07-19 19:43:37.000000000,closed,0,Version 1.3.0-RC
1356,2019-07-19 15:18:24.000000000,2019-07-19 16:47:47.000000000,closed,0,Coroutines bom
1355,2019-07-19 12:11:52.000000000,2019-07-19 23:45:00.000000000,closed,4,withTimeoutOrNull and channel send/receive
1354,2019-07-18 10:54:19.000000000,2020-04-29 21:41:00.000000000,closed,2,[DRAFT] DataFlow implementation
1353,2019-07-17 20:30:29.000000000,2019-07-18 13:01:10.000000000,closed,0,withIndex and collectIndexed operators
1352,2019-07-17 19:36:17.000000000,2019-07-19 16:56:49.000000000,closed,0,Stabilize core flow
1351,2019-07-17 19:26:25.000000000,2019-07-18 13:01:35.000000000,closed,1,Cancel extensions for CoroutineScope and Job
1350,2019-07-17 17:28:37.000000000,2019-07-18 13:01:45.000000000,closed,0,Treat Duration.ZERO as 0L in jdk8 extensions
1349,2019-07-17 17:20:08.000000000,2019-07-19 19:43:42.000000000,closed,1,Error in `withTimeout(Duration.ZERO)`
1348,2019-07-17 03:02:36.000000000,2019-07-17 17:07:15.000000000,closed,0,"Add Flow.onStart, support emit in onCompletion"
1347,2019-07-17 00:32:51.000000000,2019-08-14 23:43:57.000000000,closed,7,Repaired some of ListenableFuture.kt's cancellation corner cases
1346,2019-07-17 00:32:18.000000000,2019-09-10 14:14:59.000000000,closed,1,kotlinx.coroutines.guava ListenableFuture cancellation
1345,2019-07-16 17:50:27.000000000,2019-07-16 17:57:34.000000000,closed,4,Channels as a generic bytestream abstraction
1344,2019-07-16 17:00:58.000000000,2019-07-16 18:29:13.000000000,closed,0,"Recover stacktraces for no-dispatched continuations, so recovery work…"
1343,2019-07-16 13:08:32.000000000,2019-07-18 12:30:38.000000000,closed,1,Consume as flow
1342,2019-07-16 12:56:36.000000000,2019-07-16 13:43:41.000000000,closed,2,Exception stackrace recovery place to top invalid line number
1341,2019-07-15 22:22:32.000000000,2019-07-16 17:14:36.000000000,closed,0,Reactive scopeless
1340,2019-07-15 20:13:41.000000000,2019-07-19 19:43:41.000000000,closed,5,ReceiveChannel.asFlow operator
1339,2019-07-15 19:13:28.000000000,2019-07-16 15:10:05.000000000,closed,4,Flow Suggestion Operator:  catchAndContinue
1338,2019-07-15 17:23:01.000000000,2019-07-19 19:43:42.000000000,closed,0,"Consider CoroutineScope.cancel(String, Throwable?)"
1337,2019-07-15 15:40:18.000000000,2019-07-31 19:22:31.000000000,closed,1,Implementation of in memory chat benchmark
1336,2019-07-15 13:57:59.000000000,2019-07-17 12:33:24.000000000,closed,2,Exception cause is changed when using `Deferred.await()`
1335,2019-07-15 12:41:29.000000000,2019-08-09 22:18:01.000000000,closed,9,Decouple switching logic from switchMap operator and consistent naming
1334,2019-07-12 18:00:41.000000000,2019-08-09 22:17:58.000000000,closed,0,Launching coroutine in channelFlow and then canceling it produces JobCancellationException
1333,2019-07-12 13:19:55.000000000,2019-07-19 19:43:41.000000000,closed,4,BroadcastChannel.asFlow() may leak memory
1332,2019-07-10 11:55:26.000000000,2019-07-10 11:56:03.000000000,closed,2,java.lang.NoSuchMethodError: kotlinx.coroutines.SupervisorKt.SupervisorJob
1331,2019-07-10 11:52:08.000000000,2019-08-20 15:13:58.000000000,closed,17,java.lang.NoSuchMethodError: kotlinx.coroutines.SupervisorKt.SupervisorJob
1330,2019-07-10 08:12:45.000000000,2019-07-15 12:40:09.000000000,closed,3,org.springframework.data.mapping.MappingException: Couldn't read column communincation_prefs from Row.
1329,2019-07-09 19:30:57.000000000,2019-07-16 17:15:34.000000000,closed,4,Fail on channel.send() with two successive forEach() calls
1328,2019-07-09 13:56:03.000000000,2019-07-19 19:43:40.000000000,closed,6,Stacktrace recovery doesn't work for suspend main
1327,2019-07-08 21:20:19.000000000,2019-07-09 19:46:12.000000000,closed,5,TransactionSynchronizationManager.currentTransaction() error
1326,2019-07-07 17:54:59.000000000,1970-01-01 00:00:00.000000001,open,8,Add start parameter to launchIn extension for Flow
1325,2019-07-06 14:16:10.000000000,2019-07-19 16:30:42.000000000,closed,0,Protect event loop data structures from nonmonothonic nanoTime
1324,2019-07-06 11:59:10.000000000,2019-07-10 15:00:48.000000000,closed,2,Flow.asPublisher() gets stuck in case of infinite Flows
1323,2019-07-05 13:21:38.000000000,2019-07-15 15:16:34.000000000,closed,0,Semaphore cancellation bug
1322,2019-07-05 13:09:06.000000000,1970-01-01 00:00:00.000000001,open,0,Autogenerate source files with current version and check it during Main dispatcher initialization
1321,2019-07-05 07:41:23.000000000,2019-07-05 10:26:47.000000000,closed,6,CorourtineScope returns null
1320,2019-07-04 14:26:46.000000000,2019-07-04 14:47:25.000000000,closed,1,Use the correct builder method `flowChannel` in the checkContext error description
1319,2019-07-04 13:02:42.000000000,2019-07-04 13:14:27.000000000,closed,1,Fixed sample to use `awaitClose` instead of `await`
1318,2019-07-04 12:58:07.000000000,1970-01-01 00:00:00.000000001,open,2,New operator: RepeatWhen
1317,2019-07-03 17:59:24.000000000,2019-07-15 12:48:29.000000000,closed,3,SupervisorJob handles Exceptions in an unexpected way (?)
1316,2019-07-03 13:32:33.000000000,2019-07-03 14:51:03.000000000,closed,1,Replace unneeded type parameter with projection
1315,2019-07-03 07:52:49.000000000,1970-01-01 00:00:00.000000001,open,9,Add withLatestFrom operator.
1314,2019-07-03 01:21:00.000000000,2019-09-28 18:04:37.000000000,closed,4,CoroutineContext.plus() behaves counterintuitively
1313,2019-07-02 17:45:07.000000000,2019-07-02 20:52:51.000000000,closed,0,Rewrite assertions so that they are checked only in debug mode
1312,2019-07-02 13:33:42.000000000,2019-07-19 19:43:42.000000000,closed,1,delay(MAX_VALUE) breaks with non-monothonic clocks
1311,2019-07-02 10:01:53.000000000,2019-07-02 12:07:17.000000000,closed,1,Fix grammar error in text on suspend functions
1310,2019-06-30 11:34:08.000000000,2019-06-30 17:06:44.000000000,closed,1,example-sync-07.kt  crashes
1309,2019-06-29 00:25:39.000000000,2019-06-30 17:54:39.000000000,closed,0,Simplify array copies
1308,2019-06-29 00:00:08.000000000,2019-07-01 13:31:03.000000000,closed,1,Fix _size not incremented in CopyOnWriteList add
1307,2019-06-28 23:57:17.000000000,2019-07-19 19:43:40.000000000,closed,1,_size private property is not incremented in add w/ index in native CopyOnWriteList
1306,2019-06-28 21:58:00.000000000,2019-09-25 17:49:22.000000000,closed,4,Add experimental contracts for withContext and coroutineScope
1305,2019-06-28 17:47:59.000000000,2019-07-19 16:48:20.000000000,closed,1, Consistently handle fatal exceptions in reactive integrations
1304,2019-06-28 13:49:58.000000000,2019-07-23 20:39:31.000000000,closed,15,Adds R8 optimization rule for FastServiceLoader
1303,2019-06-28 13:07:50.000000000,2019-07-19 19:43:43.000000000,closed,4,Cannot find protocol declaration for SharedCodeKotlinCoroutineContextElement
1302,2019-06-27 18:18:19.000000000,1970-01-01 00:00:00.000000001,open,6,Flow.chunked with specified time period
1301,2019-06-27 15:36:52.000000000,2019-07-02 01:06:38.000000000,closed,3,Inconsistent behaviour GlobalScope.flux and flow/channelFlow with NonCancellable context.
1300,2019-06-26 21:14:21.000000000,2020-03-16 13:49:51.000000000,closed,5,java.lang.NoClassDefFoundError: Could not initialize class kotlinx.coroutines.CoroutineExceptionHandlerImplKt
1299,2019-06-26 20:38:56.000000000,2020-04-08 11:50:52.000000000,closed,2,Using kotlinx.coroutines from Kotlin/Native
1298,2019-06-26 17:11:17.000000000,2019-06-26 19:43:30.000000000,closed,0,Version 1.3.0-M2
1297,2019-06-26 01:30:31.000000000,2019-07-19 19:43:42.000000000,closed,0,"RxJava2 ""fatal"" exceptions thrown by subscribers are swallowed by rxFlowable"
1296,2019-06-26 01:21:16.000000000,2019-07-03 12:37:58.000000000,closed,4,"Added CoroutineScope.asExecutor() to ListenableFuture.kt, and used it in place of directExecutor()"
1295,2019-06-26 00:02:38.000000000,2019-06-26 00:24:00.000000000,closed,0,Added a test that ensures proper context in catch/flowOn combinations
1294,2019-06-25 20:18:31.000000000,2019-07-17 00:50:10.000000000,closed,1,Flow or BroadcastChannel
1293,2019-06-25 19:33:09.000000000,2019-12-13 18:28:29.000000000,closed,9,ERROR: tried to execute code in unprepared class 'Lkotlin/coroutines/jvm/internal/DebugMetadataKt
1292,2019-06-25 17:28:58.000000000,1970-01-01 00:00:00.000000001,open,4,TestCoroutineDispatcher
1291,2019-06-25 15:52:10.000000000,2019-06-26 15:24:27.000000000,closed,0,Declarative flow operators
1290,2019-06-25 01:00:44.000000000,1970-01-01 00:00:00.000000001,open,11,Flow.chunked operator with size limit
1289,2019-06-24 22:09:21.000000000,2019-06-25 00:44:57.000000000,closed,5,JVM Method Annotations on `suspend` lambdas don't apply
1288,2019-06-24 12:47:58.000000000,2019-06-25 15:52:57.000000000,closed,4,Proguard changes program flow of coroutines
1287,2019-06-21 19:51:11.000000000,2019-07-25 13:21:11.000000000,closed,6,"KotlinJS - CoroutinesInternalError: Fatal exception in coroutines machinery for DispatchedContinuation[NodeDispatcher@2, [object Object]]"
1286,2019-06-21 14:43:49.000000000,2019-12-13 17:47:14.000000000,closed,3,Android Thread handling issue
1285,2019-06-20 21:25:14.000000000,2019-07-15 21:14:12.000000000,closed,3,Add distinctUntilChanged operator that uses a comparator function instead of a key extractor.
1284,2019-06-20 19:55:30.000000000,2019-06-28 19:18:15.000000000,closed,6,NoClassDefFoundError: kotlinx/coroutines/debug/internal/DebugProbesImpl
1283,2019-06-20 18:07:42.000000000,2019-06-20 18:16:00.000000000,closed,4,bufferSize or capacity for channelFlow
1282,2019-06-20 02:33:33.000000000,2020-02-14 17:52:11.000000000,closed,5,Optimize the size of the coroutines library in Android projects
1281,2019-06-19 20:46:04.000000000,2019-06-20 16:48:34.000000000,closed,1,withTimeoutOrNull+channel hangs
1280,2019-06-19 17:37:40.000000000,2019-06-24 20:32:21.000000000,closed,0,Flow exceptions handling facilities
1279,2019-06-19 17:03:58.000000000,2019-06-26 13:09:33.000000000,closed,5,"Decouple asFlow from batchSize and move it to buffer instead, promote…"
1278,2019-06-18 20:42:32.000000000,2019-06-18 20:56:54.000000000,closed,4,Compile Kotlin with coroutines via command line
1277,2019-06-18 09:48:25.000000000,2019-06-20 09:59:27.000000000,closed,0,Change default request size in Publisher.openSubscription to one
1276,2019-06-17 21:14:15.000000000,1970-01-01 00:00:00.000000001,open,1,Confusing or incorrect error handling for Channel's produce method
1275,2019-06-16 08:07:08.000000000,2019-06-18 07:34:28.000000000,closed,1,Fix typos and reword some phrases
1274,2019-06-16 07:17:14.000000000,2019-06-18 07:55:04.000000000,closed,1,Reactive guide: comments after code blocks out of sync with code
1273,2019-06-15 14:26:04.000000000,2019-06-15 18:35:32.000000000,closed,3,Single Dispatchers.IO is not enough - threads bulkheads is required
1272,2019-06-15 02:18:04.000000000,2019-06-18 17:54:47.000000000,closed,5,Unhelpful error message when crashing due to not including kotlinx-coroutines-android for Dispatchers.Main
1271,2019-06-14 06:50:14.000000000,2019-06-20 06:23:26.000000000,closed,3,JVM options in Android Studio
1270,2019-06-13 11:32:50.000000000,1970-01-01 00:00:00.000000001,open,31,Proguard warnings on 1.3.0-M1 with flows
1269,2019-06-12 13:19:48.000000000,2019-08-09 22:18:02.000000000,closed,13,Proposal: Flow.collectLatest
1268,2019-06-12 06:37:25.000000000,2019-06-13 05:26:54.000000000,closed,3,coroutineScope block the current thread
1267,2019-06-10 22:28:56.000000000,2019-06-26 19:43:34.000000000,closed,1,Flux onBackpressureDrop and coroutines collect extension does not called passed lambda
1266,2019-06-10 12:39:53.000000000,1970-01-01 00:00:00.000000001,open,13,Add a a way to disable automatic delay skipping with runBlockingTest
1265,2019-06-10 12:20:51.000000000,1970-01-01 00:00:00.000000001,open,10,Flow.collects receives items after it was cancelled on a single thread
1264,2019-06-10 05:04:27.000000000,1970-01-01 00:00:00.000000001,open,4,Circular exception with async/await in coroutineScope
1263,2019-06-08 12:07:19.000000000,2019-06-26 19:43:34.000000000,closed,23,Flow error handling and launchIn
1262,2019-06-07 22:15:41.000000000,2019-08-09 22:18:01.000000000,closed,6,combineLatest(Iterable<Flow>) operator
1261,2019-06-07 21:48:07.000000000,2020-05-22 13:16:39.000000000,closed,62,Flow.share operator
1260,2019-06-07 20:33:36.000000000,2019-06-19 12:33:12.000000000,closed,3,Fix flowViaChannel closing immediately.
1259,2019-06-07 19:59:02.000000000,2019-06-07 20:20:25.000000000,closed,3,Regression: channelFlow/flowViaChannel broken.
1258,2019-06-07 00:29:55.000000000,2019-06-07 01:02:18.000000000,closed,0,Version 1.3.0-M1
1257,2019-06-06 17:14:26.000000000,1970-01-01 00:00:00.000000001,open,2,"Add a contract to coroutineScope, withContext and operator fun invoke for CoroutineDispatcher"
1256,2019-06-06 17:10:46.000000000,2019-06-19 17:31:20.000000000,closed,5,"In Rx2 interop, coroutine for single should be started Lazy"
1255,2019-06-06 16:21:34.000000000,2019-06-07 00:26:11.000000000,closed,0,Mark Flow.collect as internal to prevent its direct implementation an…
1254,2019-06-06 13:46:29.000000000,2019-06-09 23:23:30.000000000,closed,2,Unit Tests & withContext()
1253,2019-06-06 09:10:35.000000000,2019-06-06 11:15:42.000000000,closed,0,Migrate RX to Coroutines
1252,2019-06-05 18:14:44.000000000,2019-06-05 18:55:44.000000000,closed,2,Lots of calls to Thread.setNativeName from coroutine lib code seem to slow down execution
1251,2019-06-05 18:01:58.000000000,2019-06-06 14:58:53.000000000,closed,0,Conservatively mark Flow declarations as experimental
1250,2019-06-05 04:14:50.000000000,2019-06-06 12:48:07.000000000,closed,1,Remove experimental warning from Channels docs
1249,2019-06-04 23:43:30.000000000,2019-06-12 02:00:13.000000000,closed,1,Coroutine Scope may remains Running after Exception
1248,2019-06-04 22:28:23.000000000,2019-06-12 01:58:49.000000000,closed,1,Can I use kotlinx.coroutines with Firebase Realtime Database Normal or only with Firestore?
1247,2019-06-04 13:06:50.000000000,2019-07-19 19:43:41.000000000,closed,5,Provide a `collectIndexed` terminal operator
1246,2019-06-04 10:47:32.000000000,2019-06-10 13:15:37.000000000,closed,1,Comparison of performance between Thread and coroutines
1245,2019-06-03 20:08:43.000000000,2019-07-12 16:44:17.000000000,closed,1,Add integration test with R8 to ensure ServiceLoader optimization
1244,2019-06-03 00:03:15.000000000,2019-06-07 01:02:27.000000000,closed,0,Flow.forEach method
1243,2019-06-02 17:54:30.000000000,2019-06-03 18:55:38.000000000,closed,0,Deprecate flowWith operator
1242,2019-06-01 15:19:03.000000000,2019-06-04 21:30:03.000000000,closed,0,"Update ""Shared mutable state and concurrency"" guide with best practices"
1241,2019-06-01 14:37:29.000000000,2019-06-04 21:30:03.000000000,closed,0,Docs: Thread confinement coarse-grained example does not follow best-practises
1240,2019-05-31 20:40:49.000000000,2019-06-05 18:24:30.000000000,closed,3,`runBlockingTest` with `coroutineScope {}` expected behavior
1239,2019-05-31 16:35:18.000000000,2019-06-04 21:13:50.000000000,closed,2,Adjust behavior of conflated channel to deliver last value
1238,2019-05-31 15:39:52.000000000,2019-05-31 17:37:09.000000000,closed,0,Use identity hash code on K/N for debug strings
1237,2019-05-31 15:18:45.000000000,2019-06-07 01:02:25.000000000,closed,0,Missing `toString` object ID in native
1236,2019-05-31 14:08:58.000000000,2019-06-06 12:43:31.000000000,closed,1,More operators
1235,2019-05-31 13:54:53.000000000,2019-06-07 01:02:26.000000000,closed,0,Adjust behavior of conflated channel to match use-case of intermediate values
1234,2019-05-30 22:48:39.000000000,2019-06-05 18:54:35.000000000,closed,1,Flow: decouple buffer size from various operators and fuse
1233,2019-05-30 22:43:01.000000000,2019-06-07 01:02:26.000000000,closed,0,Flow: decouple buffer size from various operators and fuse
1232,2019-05-30 16:25:56.000000000,2019-06-02 16:11:27.000000000,closed,10,Enable R8 optimization of Dispatchers.Main loading
1231,2019-05-30 16:17:04.000000000,2019-06-07 01:02:26.000000000,closed,6,FastServiceLoader performs I/O on calling thread and prevents R8 optimization
1230,2019-05-29 11:27:51.000000000,2019-06-12 01:57:34.000000000,closed,3,Android cant update ui but have log
1229,2019-05-29 00:18:47.000000000,2019-05-31 14:16:20.000000000,closed,0,Documentation
1228,2019-05-29 00:18:27.000000000,2019-05-31 18:59:54.000000000,closed,0,Use nanosleep in runBlocking's delay on Native
1227,2019-05-28 21:11:21.000000000,2019-06-05 19:40:19.000000000,closed,0,Flow scope
1226,2019-05-28 15:14:59.000000000,2019-05-28 16:52:24.000000000,closed,2,flow cancellation behaviour like rxjava observables
1225,2019-05-27 19:59:52.000000000,2019-06-07 01:02:25.000000000,closed,2,Kotlin/Native runBlocking & delay cause high CPU usage
1224,2019-05-27 17:45:05.000000000,2019-08-09 22:18:01.000000000,closed,1,[Flow] combineLatest with custom transformer (e.g. not map transformer)
1223,2019-05-27 13:36:43.000000000,2019-06-03 16:27:22.000000000,closed,8,Using Job with CoroutineScope not starting the coroutine
1222,2019-05-25 21:09:52.000000000,1970-01-01 00:00:00.000000001,open,18,"[question] Is this ""IllegalStateException: This job has not completed yet"" while using runBlockingTest  normal?"
1221,2019-05-25 18:12:58.000000000,2019-06-08 13:17:40.000000000,closed,4,Proposal: asConflatedBroadcastChannel extension for Flow
1220,2019-05-24 02:44:34.000000000,2019-05-31 14:10:58.000000000,closed,1,Consolidate NullSurrogate with Symbol
1219,2019-05-23 19:59:10.000000000,2019-06-07 01:02:25.000000000,closed,1,MainDispatcher.immediate does not always dispatch coroutine on Main thread?
1218,2019-05-23 18:25:21.000000000,2019-06-07 01:02:27.000000000,closed,1,Wrong Flow.switchMap { }.take() behaviour 
1217,2019-05-22 17:04:34.000000000,2019-05-22 17:06:06.000000000,closed,1,Fix Typo
1216,2019-05-22 16:20:13.000000000,1970-01-01 00:00:00.000000001,open,1,Add debounce operator with selector to Flow
1215,2019-05-21 20:23:22.000000000,2019-05-24 13:41:41.000000000,closed,0,Retries cancellation
1214,2019-05-21 17:19:37.000000000,2019-05-28 01:37:47.000000000,closed,0,New flow builder: channelFlow (and its alias callbackFlow) and supple…
1213,2019-05-21 16:04:34.000000000,2019-05-28 22:54:34.000000000,closed,9,Main dispatcher missing on version 1.2.1 (android gradle plugin 3.5.0-beta02)
1212,2019-05-21 14:04:25.000000000,2019-05-22 00:18:52.000000000,closed,2,coroutines-reactor: subscriberContext not available in suspended functions
1211,2019-05-20 23:56:56.000000000,2019-06-28 19:54:34.000000000,closed,0,Fix Tasks await extension cancellation support
1210,2019-05-20 21:35:02.000000000,2019-06-07 01:02:24.000000000,closed,0,"Flow context preserving property, thread safety and context changing"
1209,2019-05-20 20:57:07.000000000,2019-05-24 12:41:59.000000000,closed,1,Promote ReceiveChannel.consumeEach and ReceiveChannel.consume to expe…
1208,2019-05-20 13:11:26.000000000,2019-05-20 13:57:08.000000000,closed,1,Update shared-mutable-state-and-concurrency.md
1207,2019-05-20 11:52:19.000000000,2019-05-20 15:33:39.000000000,closed,1,Fix overflow bug in Flow.drop
1206,2019-05-18 05:00:38.000000000,2019-10-08 13:49:14.000000000,closed,16,Support completing the test coroutine from outside the test thread.
1205,2019-05-17 19:46:16.000000000,1970-01-01 00:00:00.000000001,open,21,TestCoroutineDispatcher swallows exceptions
1204,2019-05-17 18:58:36.000000000,1970-01-01 00:00:00.000000001,open,33,"runBlockingTest fails with ""This job has not completed yet"""
1203,2019-05-17 04:23:03.000000000,1970-01-01 00:00:00.000000001,open,2,Add extension functions for modifying a List<DelayController>
1202,2019-05-17 04:07:39.000000000,1970-01-01 00:00:00.000000001,open,4,"Provide a way to determine if TestCoroutineDispatcher is ""idle"""
1201,2019-05-17 03:47:26.000000000,2019-05-23 05:31:41.000000000,closed,1,Update docs for kotlinx-coroutines-test
1200,2019-05-17 03:45:05.000000000,2019-05-20 20:53:09.000000000,closed,2,Updates to the testing docs based on feedback
1199,2019-05-16 20:17:46.000000000,2019-05-24 13:15:34.000000000,closed,0,Improve coroutine exception handling logic
1198,2019-05-16 17:19:39.000000000,2019-05-24 12:22:56.000000000,closed,2,Add combineLatest with multiple flows
1197,2019-05-16 15:46:25.000000000,2019-06-28 19:54:30.000000000,closed,8,Completion listener from Play Services integration can leak
1196,2019-05-16 15:27:58.000000000,2019-05-29 22:27:23.000000000,closed,0,SafeCollector rework
1195,2019-05-15 14:05:58.000000000,2019-05-15 17:39:16.000000000,closed,0,"Use downloaded package list for dokka (and knit, transitively) to avo…"
1194,2019-05-15 12:13:06.000000000,2019-05-15 15:56:46.000000000,closed,1,kotlinx-coroutines-test README: use runBlockingTest for withTimeout sample code
1193,2019-05-14 17:05:42.000000000,2019-06-07 01:02:23.000000000,closed,2,Provide combineLatest overload with vararg flow parameter
1192,2019-05-14 16:45:17.000000000,2019-05-15 17:41:18.000000000,closed,0,Make withContext cancellable on return (instead of atomically cancell…
1191,2019-05-14 16:12:09.000000000,2020-04-22 20:09:27.000000000,closed,8,Universal API for use of closeable resources with coroutines
1190,2019-05-14 14:54:43.000000000,2019-05-16 15:39:26.000000000,closed,0,Channel iterator
1189,2019-05-14 07:45:59.000000000,2019-05-14 07:57:51.000000000,closed,1,Uncaught exception inside async
1188,2019-05-14 04:43:21.000000000,2019-05-31 02:01:39.000000000,closed,4,Can I use 'kotlinx-coroutines-debug' in production?
1187,2019-05-13 22:52:56.000000000,1970-01-01 00:00:00.000000001,open,7,Forced parallel downstream processing
1186,2019-05-13 20:09:51.000000000,2020-03-18 11:23:40.000000000,closed,14,Replacing Java Timer with Kotlin Coroutine Timer
1185,2019-05-13 19:51:20.000000000,2019-05-16 12:33:18.000000000,closed,0,Add overload with long for CoroutinesTimeout.seconds
1184,2019-05-13 15:40:42.000000000,2019-06-07 01:02:23.000000000,closed,0,`CoroutinesTimeout.seconds` not composeable with `TimeUnit.***.toSeconds(time)`
1183,2019-05-09 01:36:15.000000000,2019-05-21 18:54:45.000000000,closed,2,Flow.onEmit select clause
1182,2019-05-08 20:56:05.000000000,2019-05-16 20:18:19.000000000,closed,1,RWMutex/Semaphore Redux
1181,2019-05-08 17:39:15.000000000,2019-05-24 12:26:10.000000000,closed,2,Nested publication validator project to test actual dependencies on k…
1180,2019-05-07 15:37:36.000000000,1970-01-01 00:00:00.000000001,open,0,docs: runBlocking not available in Kotlin/JS
1179,2019-05-07 08:02:09.000000000,2019-05-08 13:17:16.000000000,closed,1,still getting warning Warning: kotlinx.coroutines.flow.FlowKt__MergeKt: can't find referenced class kotlinx.atomicfu.AtomicBoolean
1178,2019-05-07 03:14:43.000000000,2019-05-07 19:11:35.000000000,closed,0,Ensure that there are no references to atomicfu in classes
1177,2019-05-06 19:09:08.000000000,2019-06-07 01:02:23.000000000,closed,4,Flow collect does not honor cancellation
1176,2019-05-06 11:29:45.000000000,2019-05-06 14:03:25.000000000,closed,0,fix: broken anchors
1175,2019-05-05 19:30:24.000000000,2019-05-14 17:25:53.000000000,closed,3,Exception java.lang.VerifyError: Call to wrong <init> method. Reason: Type '$lambda$2' (constant pool 2) is not assignable to '$lambda$1' (constant pool 98)
1174,2019-05-05 16:42:14.000000000,2019-07-03 19:45:56.000000000,closed,2,Flow.take does not accept 0
1173,2019-05-05 16:39:59.000000000,2019-05-21 18:54:35.000000000,closed,5,Fast path for Flow.drop if count is 0
1172,2019-05-05 16:36:58.000000000,2019-05-21 18:55:10.000000000,closed,1,Fast path for Flow.delayFlow and Flow.delayEach if timeMillis is 0
1171,2019-05-05 01:09:38.000000000,1970-01-01 00:00:00.000000001,open,6,Channel produce needs coroutine scope to be created. Is there a better way to do it?
1170,2019-05-04 00:25:17.000000000,2019-05-08 13:38:40.000000000,closed,1,Fix wording in Job documentation
1169,2019-05-02 12:46:34.000000000,1970-01-01 00:00:00.000000001,open,4,DelayController.advanceTimeTo
1168,2019-05-02 12:40:09.000000000,2019-07-19 19:43:40.000000000,closed,4,Flow.concatWith
1167,2019-05-01 22:06:29.000000000,2019-05-13 15:30:21.000000000,closed,2,Function reference support for Flow.collect
1166,2019-05-01 20:46:03.000000000,2019-05-08 17:43:22.000000000,closed,1,Fixed Dispatcher docs
1165,2019-05-01 18:21:08.000000000,2020-05-07 17:42:25.000000000,closed,6,java.time support for Flow
1164,2019-05-01 01:28:16.000000000,2019-05-06 19:44:58.000000000,closed,0,Fixes kotlin-coroutines-test TestCoroutineDispatcher docs
1163,2019-04-30 19:26:51.000000000,2019-06-07 01:02:22.000000000,closed,1,Invalid documentation for kotlin-coroutines-test TestCoroutineDispatcher
1162,2019-04-30 19:03:36.000000000,2019-06-07 01:02:23.000000000,closed,2,Make ChannelIterator.next non-suspending
1161,2019-04-30 16:18:54.000000000,2019-05-24 19:46:55.000000000,closed,0,Flow performance improvements and reactive benchmarks
1160,2019-04-30 15:47:09.000000000,2019-04-30 18:39:10.000000000,closed,1,Rename TimedRunnable to TimedRunnableObsolete in obsolete kotlinx.cor…
1159,2019-04-30 10:27:04.000000000,2019-06-07 01:02:22.000000000,closed,3,Duplicate class kotlinx.coroutines.test.TimedRunnable
1158,2019-04-30 05:46:51.000000000,2019-04-30 17:57:50.000000000,closed,0,Fix exception types for channels to ensure transparency & reporting
1157,2019-04-29 21:12:12.000000000,1970-01-01 00:00:00.000000001,open,12,CoroutineExceptionHandler installed in top(-most) scope not always used.
1156,2019-04-29 17:25:35.000000000,1970-01-01 00:00:00.000000001,open,7,Coroutines Context Cancellation issue
1155,2019-04-29 13:29:19.000000000,2019-06-07 01:02:22.000000000,closed,6,Proguard warning about kotlinx.atomicfu.AtomicBoolean
1154,2019-04-29 07:13:50.000000000,2019-05-06 06:24:27.000000000,closed,6,"Fix more typos; reword some phrases; add ""job:"" to textual output in …"
1153,2019-04-28 21:06:32.000000000,1970-01-01 00:00:00.000000001,open,7,"Add sample operator to Flow, which can sample a Flow with the emissions of another Flow "
1152,2019-04-27 23:35:11.000000000,2019-05-01 20:47:18.000000000,closed,1,Fixed Dispatcher docs
1151,2019-04-27 22:16:37.000000000,2019-04-29 02:18:35.000000000,closed,1,Fixed typo in README
1150,2019-04-27 21:54:00.000000000,2019-04-29 13:47:43.000000000,closed,1,Coroutines crash when call block.invoke(this) - Fatal exception in coroutines machinery for DispatchedContinuation
1149,2019-04-27 18:44:47.000000000,2019-04-27 23:03:19.000000000,closed,0,Rename transform parameters for consistency with stdlib
1148,2019-04-27 18:33:15.000000000,2019-04-27 23:02:39.000000000,closed,1,Fix typos and improve article usage in docs
1147,2019-04-26 19:05:17.000000000,1970-01-01 00:00:00.000000001,open,43,Parallel flow processing
1146,2019-04-26 13:59:41.000000000,2019-04-30 19:07:14.000000000,closed,0,Select join fixed
1145,2019-04-26 03:12:19.000000000,2019-06-28 19:57:55.000000000,closed,10,"""Uncaught TypeError: Cannot read property 'context' of undefined"" when compiling to JS"
1144,2019-04-25 17:59:55.000000000,2019-04-26 01:06:13.000000000,closed,0,kotlinx-coroutines-test cleanup
1143,2019-04-25 17:01:50.000000000,2019-04-25 21:49:31.000000000,closed,1,Coroutines for Android allows operating UI on worker threads
1142,2019-04-25 16:38:54.000000000,2019-04-26 12:31:13.000000000,closed,0,Version 1.2.1
1141,2019-04-25 14:14:12.000000000,2019-04-26 18:20:04.000000000,closed,1,README: R8 is default in 3.4.0+ and 3.3.0-beta
1140,2019-04-24 21:56:11.000000000,2019-04-25 10:24:31.000000000,closed,4,Basic usage of Flow on Android
1139,2019-04-24 13:17:14.000000000,2019-04-24 15:46:36.000000000,closed,0,"Deprecate consumeEach on Publisher, ObservableSource and MaybeSource,…"
1138,2019-04-24 12:47:54.000000000,2019-07-17 18:20:30.000000000,closed,0,Context passing between coroutines and Reactor Mono/Flux
1137,2019-04-24 09:42:45.000000000,2019-04-24 14:09:16.000000000,closed,3,function execute result isn't equals the website's page result
1136,2019-04-23 22:15:53.000000000,2019-04-24 11:59:09.000000000,closed,1,"Fix header documentation typo in ""TestCoroutineContext"""
1135,2019-04-23 19:43:34.000000000,2019-04-24 12:27:01.000000000,closed,0,Fix npm publication
1134,2019-04-23 15:40:46.000000000,2019-04-24 14:08:16.000000000,closed,0,"Provide CoroutineScope into flowViaChannel block, but make it non-sus…"
1133,2019-04-22 22:08:25.000000000,2019-04-23 13:13:03.000000000,closed,0,AtomicFu version 0.12.5
1132,2019-04-22 21:20:48.000000000,2019-04-24 18:14:04.000000000,closed,0,Flow operators:
1131,2019-04-22 19:46:48.000000000,2019-04-26 12:31:16.000000000,closed,1,kotlinx.coroutines.CoroutineScope service file seems misplaced
1130,2019-04-21 17:25:55.000000000,2019-06-07 01:02:22.000000000,closed,0,Select builder reports exception to the global handler instead of re-throwing it when select clause is suspended
1129,2019-04-21 16:46:23.000000000,2019-04-23 15:00:59.000000000,closed,0,More advanced check for self-suppression during the final exception b…
1128,2019-04-21 15:42:13.000000000,2019-06-07 01:02:21.000000000,closed,4,Scoped flow leaks the decomposition into behaviour
1127,2019-04-21 13:52:57.000000000,2019-04-24 15:47:05.000000000,closed,1,Fix a race in Job.join that sporadically results in normal completion
1126,2019-04-21 13:05:06.000000000,2019-04-21 14:32:58.000000000,closed,2,Coroutines Cancellation with java IO blocking 
1125,2019-04-21 08:42:34.000000000,2019-04-21 14:24:32.000000000,closed,1,Fix typos
1124,2019-04-21 07:35:42.000000000,2019-04-21 13:54:55.000000000,closed,1,Fix issue: #1123. Check the job state to make the ResumeOnCompletion …
1123,2019-04-21 07:27:21.000000000,2019-04-26 12:31:17.000000000,closed,5,No CancellationException thrown when join on a crashed Job
1122,2019-04-20 19:34:53.000000000,2019-06-07 01:02:24.000000000,closed,5,Flow.retry() and cancellation
1121,2019-04-20 18:09:47.000000000,2019-04-20 18:12:56.000000000,closed,1,Fix typo
1120,2019-04-19 20:08:15.000000000,2019-04-21 19:52:09.000000000,closed,1,Fix atomicfu post-processing and dependencies
1119,2019-04-19 00:50:07.000000000,2019-04-19 12:45:43.000000000,closed,2,data class become null in unit test
1118,2019-04-18 16:53:47.000000000,2019-04-26 12:31:16.000000000,closed,0,Version 1.2.0 was incorrectly published to NPM
1117,2019-04-18 14:48:59.000000000,2019-04-18 16:51:55.000000000,closed,0,Update top-level readmes with better example and js + native links
1116,2019-04-18 14:31:18.000000000,2019-04-26 12:31:15.000000000,closed,1,Proguard warning about AtomicFU#setInterceptor()
1115,2019-04-18 13:42:26.000000000,2019-04-18 13:47:00.000000000,closed,1,Fix link to proguard rules file
1114,2019-04-18 13:31:57.000000000,2019-04-24 12:37:25.000000000,closed,2,"android-example Add Empty Tack, Tack With Progress, Cancelable Tack"
1113,2019-04-18 12:49:11.000000000,2019-04-23 15:03:49.000000000,closed,0,CompletableJob.asCompletableFuture
1112,2019-04-18 07:37:49.000000000,2019-04-26 13:59:58.000000000,closed,2,flowWithChannel's require makes CONFLATED impossible to use
1111,2019-04-17 22:40:55.000000000,2019-04-18 11:27:14.000000000,closed,2,Missing documentation for io module
1110,2019-04-17 21:11:19.000000000,2019-07-19 19:50:21.000000000,closed,5,Create Maven BOM for kotlinx coroutines
1109,2019-04-17 14:46:47.000000000,2019-04-17 16:38:16.000000000,closed,4,Stacktrace seems to be missing any indication of user code
1108,2019-04-17 14:06:13.000000000,2019-12-13 18:22:16.000000000,closed,10,Can't install app after upgrade from 1.2.0-alpha-2 to 1.2.0
1107,2019-04-17 13:27:05.000000000,2019-04-26 12:31:17.000000000,closed,8,Provide Flow operators for UI programming
1106,2019-04-17 13:02:30.000000000,2019-04-17 13:03:28.000000000,closed,1,"fix typo: Coroutine""s""Context"
1105,2019-04-16 19:11:16.000000000,2020-03-16 13:50:50.000000000,closed,4,Can't use `1.2.0` without GRADLE_METADATA
1104,2019-04-16 17:53:01.000000000,2019-04-26 12:31:16.000000000,closed,0,Introduce CompletableJob.asCompletableFuture
1103,2019-04-16 16:45:24.000000000,1970-01-01 00:00:00.000000001,open,5,"Proposal: deprecate ""coroutineScope"" function and rename it to ""runScoped"" instead."
1102,2019-04-16 13:42:48.000000000,2019-04-16 22:22:35.000000000,closed,0,Infrastructure to build kotlinx.coroutines against Kotlin snapshots
1101,2019-04-16 01:44:25.000000000,2019-06-06 22:01:27.000000000,closed,2,Add Semaphore
1100,2019-04-15 17:48:47.000000000,2019-04-17 18:15:13.000000000,closed,3,The result of running example-context-11.kt (Thread-local data) on playground differs from what is stated in the tutorial
1099,2019-04-15 16:02:31.000000000,2019-04-17 18:35:49.000000000,closed,6,Running latest coroutines with latest kotlin 1.3.30 causes iOS build issues
1098,2019-04-15 15:56:58.000000000,2019-04-21 14:32:01.000000000,closed,7,SuspendCancellableCoroutine issue
1097,2019-04-15 10:51:47.000000000,1970-01-01 00:00:00.000000001,open,2,Add way to de-duplicate function calls
1096,2019-04-15 02:55:17.000000000,2019-11-27 16:19:52.000000000,closed,13,Update for Gradle Metadata 1.0
1095,2019-04-14 18:06:11.000000000,2019-06-28 20:15:05.000000000,closed,6,suspendCancellableCoroutine obtaining wrong continuation handle
1094,2019-04-14 17:14:33.000000000,2019-06-07 01:02:27.000000000,closed,1,FlowCollector.emitAll
1093,2019-04-13 19:05:11.000000000,1970-01-01 00:00:00.000000001,open,1,coroutines not work well with SurfaceView case
1092,2019-04-13 17:32:45.000000000,2019-08-07 11:22:47.000000000,closed,21,#1044 follow up for CompletableDeferred
1091,2019-04-12 19:26:09.000000000,2019-04-13 16:42:38.000000000,closed,6,Coroutines crash when upgrading to Kotlin 1.3.30 - kotlin.coroutines.intrinsics.CoroutineSingletons cannot be cast to java.lang.Boolean
1090,2019-04-12 19:19:54.000000000,2019-04-16 16:30:41.000000000,closed,1,Update README.md
1089,2019-04-12 18:16:53.000000000,2019-04-12 22:23:38.000000000,closed,0,Version 1.2.0
1088,2019-04-12 16:57:56.000000000,2019-06-07 01:02:28.000000000,closed,0,Semaphore
1087,2019-04-12 10:50:18.000000000,1970-01-01 00:00:00.000000001,open,4,Flow.collectWhile
1086,2019-04-12 00:54:44.000000000,2020-05-22 13:18:36.000000000,closed,40,Consider sharing a Flow through a ConnectableFlow
1085,2019-04-11 03:04:11.000000000,2019-04-11 15:44:05.000000000,closed,0,Improve flowViaChannel docs
1084,2019-04-11 02:41:55.000000000,2019-04-12 17:52:02.000000000,closed,0,Introduce CancellableContinuation.resume with onCancelling lambda
1083,2019-04-11 02:10:09.000000000,2019-04-11 19:48:23.000000000,closed,2,Update Tasks to support recent Play Services builds
1082,2019-04-10 23:26:00.000000000,2020-04-29 21:34:44.000000000,closed,51,Consider making BroadcastChannels to implement Flow
1081,2019-04-10 17:24:24.000000000,2019-04-26 12:31:16.000000000,closed,1,Provide CoroutineScope receiver to flowViaChannel lambda
1080,2019-04-10 13:23:52.000000000,2019-06-07 01:02:24.000000000,closed,2,ReceiveChannel.consumeEach { … } replacement?
1079,2019-04-09 21:08:10.000000000,2019-04-11 00:51:00.000000000,closed,0,Update release procedure to avoid issues like #1071
1078,2019-04-09 18:30:50.000000000,2019-06-07 01:02:27.000000000,closed,12,Add first { … } terminal operator to Flow
1077,2019-04-09 18:19:04.000000000,2019-04-09 19:00:07.000000000,closed,1,Flow operators hang forever when used with infinite Publisher source
1076,2019-04-09 17:30:13.000000000,2019-04-09 20:51:57.000000000,closed,1,Fix typo: are support -> are supported
1075,2019-04-09 14:44:07.000000000,2019-04-11 00:51:11.000000000,closed,0,Undeprecate ReceiveChannel.isEmpty
1074,2019-04-09 13:31:43.000000000,2019-04-12 18:01:23.000000000,closed,0,Flow leftovers
1073,2019-04-08 22:28:26.000000000,2019-04-09 13:13:32.000000000,closed,0,Package documentation for flow
1072,2019-04-08 12:12:21.000000000,2020-04-21 16:08:58.000000000,closed,11,"New ""fast"" service loader makes the app crash when used with Apply Changes from Android Studio"
1071,2019-04-08 01:18:25.000000000,2019-04-09 21:07:43.000000000,closed,2,Unresolved reference on sample from website
1070,2019-04-07 04:59:47.000000000,2019-04-08 18:27:27.000000000,closed,1,Coroutine 'mono' repeats output after exception thrown
1069,2019-04-04 20:21:49.000000000,2019-04-05 12:41:03.000000000,closed,1,Missing space
1068,2019-04-04 15:27:55.000000000,2019-04-04 16:46:58.000000000,closed,0,Version 1.2.0 alpha-2
1067,2019-04-04 00:16:24.000000000,2019-04-08 13:14:36.000000000,closed,3,Is this safe to store Continuation objects
1066,2019-04-02 17:01:19.000000000,2019-04-04 10:13:30.000000000,closed,4,Delay bug using Dispatchers.Main coroutine inside runBlocking
1065,2019-04-02 11:43:08.000000000,1970-01-01 00:00:00.000000001,open,5,Customizable coroutine behaviour on scope termination
1064,2019-03-31 08:04:18.000000000,2019-04-26 12:31:15.000000000,closed,38,duplicate entry: META-INF/atomicfu.kotlin_module
1063,2019-03-29 17:02:59.000000000,1970-01-01 00:00:00.000000001,open,8,Proposal: introduce repeatWhileActive top level suspend function
1062,2019-03-28 23:21:15.000000000,1970-01-01 00:00:00.000000001,open,1,Dead link to CoroutineScope factory in CoroutineScope documentation
1061,2019-03-27 15:31:15.000000000,1970-01-01 00:00:00.000000001,open,10,Suspended coroutines can be garbage-collected when listener list is weak
1060,2019-03-27 14:25:23.000000000,2020-03-17 19:17:32.000000000,closed,8,Do not use shaded version of byte buddy when real one is present in the classpath 
1059,2019-03-26 23:10:28.000000000,2019-03-26 23:33:20.000000000,closed,7,Build failed with latest version : 1.2.0-alpha
1058,2019-03-26 16:19:32.000000000,2019-06-12 03:32:10.000000000,closed,1,Coroutines Handle Exception
1057,2019-03-25 20:39:43.000000000,2019-03-26 21:50:30.000000000,closed,0,Version 1.2.0-alpha
1056,2019-03-25 05:01:39.000000000,2019-03-25 13:25:55.000000000,closed,1,grammatical tweaks
1055,2019-03-24 01:28:00.000000000,2019-03-24 23:22:25.000000000,closed,1,Update Channels docs to Koltin 1.3
1054,2019-03-22 18:25:51.000000000,2019-06-19 17:34:41.000000000,closed,7,LinkedListChannel.onSend hangs
1053,2019-03-20 12:38:18.000000000,2019-03-26 21:50:38.000000000,closed,4,Deprecate SendChannel.isFull and ReceiveChannel.isEmpty properties
1052,2019-03-19 23:04:45.000000000,2019-12-13 18:24:12.000000000,closed,3,Async isn't working in some overrided methods
1051,2019-03-19 19:52:56.000000000,2019-03-20 13:49:07.000000000,closed,0,Move `systemProp` function to the common module
1050,2019-03-19 18:10:03.000000000,2019-03-25 20:20:40.000000000,closed,3,Improved coroutine exception handling logic
1049,2019-03-19 14:25:05.000000000,2019-03-22 18:07:17.000000000,closed,0,Add a JMH producer-consumer benchmark for channels
1048,2019-03-19 00:08:37.000000000,2019-03-20 12:42:04.000000000,closed,0,Deprecate `SendChannel.isFull` and `ReceiveChannel.isEmpty` properties
1047,2019-03-17 00:58:01.000000000,2019-03-17 01:02:02.000000000,closed,0,Documentation for channels is outdated (created accidentally)
1046,2019-03-15 13:09:48.000000000,2019-12-13 17:47:14.000000000,closed,13,High cpu utilization with ktor on Android using `GlobalScope.launch`
1045,2019-03-14 17:50:55.000000000,2019-03-15 12:20:28.000000000,closed,2,fix `runBlocking` documentation typo
1044,2019-03-14 17:20:14.000000000,2019-04-12 22:23:40.000000000,closed,17,Proper handling of closable resources after #896
1043,2019-03-14 14:20:14.000000000,2019-03-22 17:02:00.000000000,closed,0,Add ThreadLocal.isPresent and ThreadLocal.ensurePresent methods
1042,2019-03-14 12:31:51.000000000,2019-12-13 18:24:43.000000000,closed,1,Extend channel API to have parity with FluxSink
1041,2019-03-14 06:45:29.000000000,2019-03-14 11:30:14.000000000,closed,1,Fix typo in NOTICE
1040,2019-03-14 03:59:41.000000000,2019-03-14 11:57:20.000000000,closed,1,Exception Constructor parameters getting mixed up in tryCopyException when thrown from rxJava Single
1039,2019-03-13 21:44:30.000000000,2019-03-19 20:20:59.000000000,closed,6,runBlocking in Android/iOS common test
1038,2019-03-13 06:55:04.000000000,2019-12-13 18:25:33.000000000,closed,10,CoroutineScope.launch() causing ANR
1037,2019-03-13 04:30:37.000000000,2019-03-13 21:23:35.000000000,closed,2,coroutineScope function causing indefinite suspension in producer
1036,2019-03-11 04:12:58.000000000,2019-03-11 14:57:37.000000000,closed,1,Remove unnecessary semicolon
1035,2019-03-10 02:58:09.000000000,2019-03-25 00:35:34.000000000,closed,31,kotlin.Result$Failure cannot be cast to Type
1034,2019-03-09 03:39:33.000000000,2019-03-09 16:59:28.000000000,closed,1,Update awaitAll documentation wording
1033,2019-03-08 20:16:39.000000000,2019-03-08 22:50:39.000000000,closed,2,TestMainDispatcher is not set as main dispatcher when Unit Tests are run from gradle
1032,2019-03-08 16:01:56.000000000,2019-03-14 16:27:28.000000000,closed,4,Fatal Exception: java.lang.ClassCastException
1031,2019-03-07 19:17:10.000000000,2020-03-17 19:17:32.000000000,closed,4,Investigate possibility to integrate debug module with BlockHound
1030,2019-03-07 18:05:03.000000000,2019-03-22 12:15:07.000000000,closed,0,"Do not use reflective exception pre-handler on newer Androids, since …"
1029,2019-03-07 17:25:49.000000000,2019-03-13 16:06:32.000000000,closed,0,Fatal exception handler
1028,2019-03-06 18:48:57.000000000,2019-03-26 21:50:38.000000000,closed,1,Provide safety mechanisms for working with thread-locals
1027,2019-03-05 16:59:52.000000000,2019-05-31 14:25:03.000000000,closed,1,Amortize the cost of coroutine dispatch using message queue in all JS…
1026,2019-03-04 20:00:25.000000000,2019-03-05 18:56:54.000000000,closed,2,java.lang.NoClassDefFoundError: kotlinx/coroutines/experimental/CommonPool
1025,2019-03-04 10:44:51.000000000,2019-03-04 12:59:31.000000000,closed,1,App crashing from apk install
1024,2019-03-03 21:03:19.000000000,2019-03-04 16:21:41.000000000,closed,5,[Enhancement]  add `CoroutineScope.asScheduler` and  `CoroutineDispatcher.asScheduler` to kotlinx-coroutines-rx2
1023,2019-03-01 22:32:44.000000000,2019-03-22 19:02:33.000000000,closed,0,Improve stacktrace merge heuristic: skip state machine meaningless fr…
1022,2019-03-01 21:01:23.000000000,1970-01-01 00:00:00.000000001,open,6,Need way to use parallel decomposition of list without saturating dispatcher queue
1021,2019-03-01 17:40:50.000000000,2019-03-06 14:13:05.000000000,closed,2,Improve CoroutineScope documentation
1020,2019-03-01 17:09:45.000000000,2019-03-13 15:22:48.000000000,closed,0,Structured concurrency & Job cancellation improvements
1019,2019-03-01 13:49:40.000000000,2019-03-29 12:41:24.000000000,closed,1,`runBlocking` coroutine builder is not resolved in the project (Other builders are resolved)
1018,2019-03-01 05:54:39.000000000,2019-03-01 19:49:48.000000000,closed,2,Unexpected invocation of exception handler after catching exception
1017,2019-02-28 21:37:44.000000000,2019-02-28 22:03:16.000000000,closed,1,suspend extension function return kotlin.Unit with ClassCastException
1016,2019-02-27 19:38:34.000000000,2019-03-01 18:00:35.000000000,closed,0,Clarify thread locals documentation
1015,2019-02-27 16:56:20.000000000,2019-03-01 17:56:58.000000000,closed,0,Add ensureActive extension
1014,2019-02-27 16:25:40.000000000,2019-03-01 17:04:12.000000000,closed,0,"Promote Unconfined, immediate, MainScope and CoroutineScope.cancel to stable API"
1013,2019-02-26 22:29:49.000000000,2019-03-02 00:36:19.000000000,closed,2,consumeEach called twice
1012,2019-02-26 21:56:34.000000000,2019-02-28 01:38:59.000000000,closed,0,Cancellation in consumeEach should dispose Rx Observable
1011,2019-02-26 20:24:25.000000000,2019-02-26 20:42:50.000000000,closed,1,Override the Main in test doesn't work well with Android LiveData
1010,2019-02-26 17:09:21.000000000,2019-02-26 17:14:28.000000000,closed,1,Cancelling job does not execute finally block or AutoCloseable.close
1009,2019-02-26 14:46:25.000000000,2019-02-26 15:00:39.000000000,closed,4, need support corn expression schedule ?
1008,2019-02-26 11:57:55.000000000,2019-03-26 21:50:36.000000000,closed,1,Job.cancel does not dispose Rx Observable when using consumeEach
1007,2019-02-26 01:22:38.000000000,2019-03-26 21:50:36.000000000,closed,0,Structured concurrency for Completable/Listenable futures
1006,2019-02-25 20:11:11.000000000,2019-03-06 16:55:23.000000000,closed,5,Check `toMillis` overflow in operators with `Duration`
1005,2019-02-25 01:26:38.000000000,2019-02-25 13:19:04.000000000,closed,1,Fix a typo in main README.md
1004,2019-02-23 19:19:34.000000000,2019-02-25 13:39:12.000000000,closed,1,Check `toMillis` overflow in operators with `Duration`
1003,2019-02-23 05:23:47.000000000,2019-02-28 01:29:27.000000000,closed,12,Recommendation on how to invoke suspend function from RxJava Observable stream
1002,2019-02-22 16:28:37.000000000,2019-02-25 23:23:11.000000000,closed,0,Make all invocations of withContext cancellable
1001,2019-02-20 20:27:33.000000000,1970-01-01 00:00:00.000000001,open,22,Structured concurrency with two parent jobs
1000,2019-02-19 20:18:09.000000000,2019-02-20 13:45:10.000000000,closed,1,Update named arguments referenced issue
999,2019-02-19 19:40:03.000000000,2019-02-19 20:58:22.000000000,closed,4,Create NestedLaunchesTest.kt
998,2019-02-19 17:13:47.000000000,2019-02-20 13:43:24.000000000,closed,0,Obtain real stacktrace of running coroutines in debug agent
997,2019-02-19 15:13:19.000000000,2019-03-26 21:50:35.000000000,closed,0,Capture real stacktrace of active coroutines in debug agent
996,2019-02-19 14:26:12.000000000,2019-03-03 14:35:36.000000000,closed,8,CoroutineExceptionHandler catch duplicated Exception
995,2019-02-19 09:52:26.000000000,2019-03-26 21:50:35.000000000,closed,1,typo in error message of fun `Publisher<T>.awaitOne()`
994,2019-02-18 22:00:29.000000000,2019-06-07 01:02:25.000000000,closed,1,`completionHandler` is now an internal API of the `ReceiveChannel` operators - what's the alternative?
993,2019-02-18 21:38:42.000000000,2019-02-27 22:50:16.000000000,closed,4,Using `1.x` coroutines alongside `0.30.2` coroutines
992,2019-02-18 21:03:24.000000000,2019-02-19 21:01:01.000000000,closed,1,Check that worker threads belongs to the same scheduler in dispatcher…
991,2019-02-18 16:15:48.000000000,2019-02-20 19:00:58.000000000,closed,0,CoroutinesTimeout debug rule for JUnit 4
990,2019-02-18 14:27:20.000000000,2019-03-26 21:50:35.000000000,closed,0,ExperimentalCoroutineDispatcher.close can shutdown enclosing thread of the same type
989,2019-02-18 01:35:47.000000000,2019-02-18 14:22:07.000000000,closed,1,java.lang.NoClassDefFoundError: Failed resolution of: Lkotlinx/coroutines/experimental/CompletableDeferredKt;
988,2019-02-16 17:16:22.000000000,2019-02-16 20:50:04.000000000,closed,1,ExceptionInInitializerError on Android 5
987,2019-02-15 14:36:42.000000000,2019-03-26 21:50:35.000000000,closed,0,Exceptions with constructor default values are copied incorrectly
986,2019-02-15 13:53:53.000000000,2019-05-14 20:19:16.000000000,closed,1,Coroutine exception handler
985,2019-02-15 05:30:26.000000000,1970-01-01 00:00:00.000000001,open,25,Possible bug with `ThreadLocal.asContextElement`
984,2019-02-12 18:56:27.000000000,2019-02-13 13:43:56.000000000,closed,0,Properly close subscription on exception in Publisher.consumeEach
983,2019-02-12 17:51:34.000000000,2019-04-13 17:06:27.000000000,closed,10,kotlinx-coroutines-android needs more Proguard rules to avoid having META-INF/services removed
982,2019-02-12 17:18:22.000000000,1970-01-01 00:00:00.000000001,open,7,Test module shall provide ability to replace Dispatchers.IO and Dispatchers.Default
981,2019-02-12 15:24:21.000000000,1970-01-01 00:00:00.000000001,open,4,Async/await gets stuck when using context with single worker
980,2019-02-11 18:36:12.000000000,2019-03-01 20:28:59.000000000,closed,2,Add operator invoke for CoroutineDispatcher
979,2019-02-09 19:52:39.000000000,2020-04-20 18:29:57.000000000,closed,1,Re-add the common sources to platform sources jar
978,2019-02-09 19:47:59.000000000,2019-02-20 15:36:11.000000000,closed,3,Re-add common sources to platform sources jar
977,2019-02-07 21:20:57.000000000,2019-04-30 04:52:47.000000000,closed,4,Differentiate between child and parent cancellation
976,2019-02-07 14:18:59.000000000,2019-02-14 22:45:01.000000000,closed,11,This declaration is experimental and its usage should be marked with '@kotlin.coroutines.ObsoleteCoroutineApi'
975,2019-02-07 13:55:31.000000000,2019-03-26 21:50:36.000000000,closed,1,Complete removal of deprecated Job.cancel(cause)
974,2019-02-07 13:42:22.000000000,1970-01-01 00:00:00.000000001,open,52,SendChannel.offer should never throw
973,2019-02-07 05:48:13.000000000,2019-02-07 13:58:45.000000000,closed,1,Fix a typo in the docs for ArrayChannel
972,2019-02-06 20:28:47.000000000,2019-03-29 12:45:01.000000000,closed,2,Promote `Dispatchers.Unconfined` and `MainCoroutineDispatcher.immediate` to stable API
971,2019-02-06 15:19:48.000000000,2019-02-12 17:17:18.000000000,closed,0,Completable job
970,2019-02-06 14:49:47.000000000,2019-02-13 19:12:34.000000000,closed,0,Updated webpack version for JS examples
969,2019-02-05 22:32:50.000000000,2019-02-05 23:24:26.000000000,closed,1,`ConflatedBroadcastChannel` losing most recent Event
968,2019-02-04 22:20:35.000000000,1970-01-01 00:00:00.000000001,open,5,Allow converting CoroutineDispatcher to RxJava scheduler
967,2019-02-04 14:43:37.000000000,2019-02-20 13:46:25.000000000,closed,1,Stacktrace recovery improvements and documentation
966,2019-02-02 22:33:38.000000000,2019-02-04 14:27:25.000000000,closed,6,Error: This marker function should never been called. Looks like compiler did not eliminate it properly. 
965,2019-02-01 23:12:53.000000000,2019-02-04 13:51:21.000000000,closed,11,Double locking Mutex?
964,2019-02-01 08:46:54.000000000,2019-02-04 13:36:46.000000000,closed,3,IllegalStateException: Job StandaloneCoroutine{Completed}@f96bd2f is already complete or completing
963,2019-01-31 18:40:32.000000000,2019-03-26 21:50:37.000000000,closed,2,Add checkCancelled() extension for Job / CoroutineContext / CoroutineScope
962,2019-01-31 17:56:18.000000000,2019-03-26 21:50:36.000000000,closed,13,withContext from inside a cancelled coroutine should not be executed
961,2019-01-30 14:59:15.000000000,2019-02-04 13:57:09.000000000,closed,3,withTimeout does not work with CoroutineExceptionHandler?
960,2019-01-29 21:35:26.000000000,2019-01-30 13:13:10.000000000,closed,1,Fixes some indentions inside code samples
959,2019-01-29 13:26:58.000000000,2019-01-29 14:33:37.000000000,closed,1,ManagementFactory not present on Android
958,2019-01-29 06:23:57.000000000,2019-02-01 12:21:18.000000000,closed,2,IllegalStateException occurs when deleting META-INF and re-signing the APK file
957,2019-01-28 21:45:49.000000000,2019-06-07 01:02:21.000000000,closed,2,ClosedSendChannelException still confusing
956,2019-01-28 18:57:04.000000000,2020-04-20 18:53:14.000000000,closed,3,Drop a deprecated version of ReceiveChannel.cancel
955,2019-01-28 13:55:43.000000000,2019-03-25 20:25:27.000000000,closed,1,Custom ServiceLoader without jar checksum verification
954,2019-01-27 05:30:35.000000000,2019-02-04 14:47:13.000000000,closed,2,Dispatcher/CoroutineStart affects behavior of actor.offer
953,2019-01-27 05:10:22.000000000,2019-01-27 05:10:33.000000000,closed,0,Dispatcher affects how Actor
952,2019-01-25 20:26:44.000000000,2020-04-08 11:30:12.000000000,closed,1,Native: Empty runBlocking(MainDispatcher) {} freezes main thread. 
951,2019-01-23 20:09:01.000000000,2019-01-24 14:48:50.000000000,closed,4,Version 1.1.1
950,2019-01-22 19:49:49.000000000,2019-03-26 21:50:37.000000000,closed,2,Useless exception when offering to actor with cancelled parent
949,2019-01-22 16:32:57.000000000,1970-01-01 00:00:00.000000001,open,1,Investigate aspectj integration for debug probes
948,2019-01-21 20:18:35.000000000,1970-01-01 00:00:00.000000001,open,14,Make debug module Android-compatible
947,2019-01-21 20:09:21.000000000,2019-01-28 13:34:24.000000000,closed,2,Migration to new multiplatorm plugin
946,2019-01-18 14:48:16.000000000,2019-01-18 18:17:49.000000000,closed,1,Update channels.md
945,2019-01-18 06:14:27.000000000,2020-05-07 17:35:11.000000000,closed,2,Provide a reference reactive android app with coroutines
944,2019-01-17 17:57:39.000000000,2019-02-06 20:42:11.000000000,closed,0,Start lazy actor when calling close
943,2019-01-17 07:39:32.000000000,2019-01-17 21:11:02.000000000,closed,3,Delay() accuracy issues
942,2019-01-17 02:20:54.000000000,2019-01-24 17:36:37.000000000,closed,5,"Cancel on Job doesn't cancel scope, if Dispatcher context was overwritten"
941,2019-01-16 20:55:43.000000000,1970-01-01 00:00:00.000000001,open,1,Add callsInPlace exactly once contract for ReceiveChannel.consume
940,2019-01-16 19:15:43.000000000,2019-03-26 21:50:34.000000000,closed,3,Mutex.withLock uses owner parameter for checks but doesn't state equality contract in docs
939,2019-01-16 19:03:53.000000000,2019-03-26 21:50:34.000000000,closed,0,Lazy actor is not terminated on close
938,2019-01-16 17:56:14.000000000,2019-03-26 21:50:35.000000000,closed,0,JUnit rule for debug probes
937,2019-01-16 01:16:04.000000000,2019-01-16 15:15:42.000000000,closed,3,[Request] Ability to offer values to channels irregardless of whether it's open
936,2019-01-15 21:45:30.000000000,2019-02-22 19:34:45.000000000,closed,10,Launch inside callback of of AlertDialog not executing code
935,2019-01-15 16:54:14.000000000,2019-01-31 21:01:31.000000000,closed,0,Debug improvements
934,2019-01-14 22:38:07.000000000,1970-01-01 00:00:00.000000001,open,8,Common usage of CoroutineScope Job functions are difficult to understand
933,2019-01-14 09:11:44.000000000,2019-03-26 21:50:34.000000000,closed,1,"DispatchException caused by ""Can't overwrite cause with ..."""
932,2019-01-13 15:19:09.000000000,1970-01-01 00:00:00.000000001,open,23,Module with the Main dispatcher had failed to initialize
931,2019-01-10 20:12:18.000000000,2019-03-26 21:50:34.000000000,closed,0,Debug coroutines double lists coroutines in select twice
930,2019-01-10 19:57:14.000000000,1970-01-01 00:00:00.000000001,open,0,Debug probes property-based initialization and console
929,2019-01-10 13:04:01.000000000,2019-02-20 20:31:03.000000000,closed,0,Make SupervisorCoroutine implement ScopeCoroutine
928,2019-01-08 21:02:20.000000000,2019-01-09 14:31:04.000000000,closed,1,Update coroutines-guide-ui.md
927,2019-01-04 13:41:12.000000000,2019-01-09 20:47:22.000000000,closed,10,Suggestion: Scoped(multi-scope) Coroutines
926,2019-01-04 11:27:38.000000000,2019-01-09 14:49:46.000000000,closed,1,AbstractContinuation is logging sensitive information
925,2019-01-01 15:01:24.000000000,2019-12-13 18:20:37.000000000,closed,7,java.util.ServiceConfigurationError: Couldn't read jar:file:/data/app/xxx-1/base.apk!/META-INF/services/kotlinx.coroutines.internal.MainDispatcherFactory
924,2019-01-01 14:55:10.000000000,2019-01-09 16:50:31.000000000,closed,1,delete it
923,2018-12-31 18:53:31.000000000,2019-01-09 20:55:34.000000000,closed,1,Replace UI dispatcher name with Dispatchers.Main
922,2018-12-29 08:39:33.000000000,2018-12-30 04:24:44.000000000,closed,2,what wrong
921,2018-12-29 02:49:54.000000000,2019-03-29 12:47:30.000000000,closed,16,Version 1.1.0 breaks referential equality of thrown exceptions
920,2018-12-28 20:45:22.000000000,2019-03-26 21:50:33.000000000,closed,7,`Delay` function throws TypeCastException.
919,2018-12-27 19:55:41.000000000,2019-03-06 12:13:02.000000000,closed,2,Build failed when kotlinx use xml resource of library on Gradle Plugin 3.X
918,2018-12-27 13:59:06.000000000,2019-01-16 14:54:45.000000000,closed,1,replace deprecated cancel with completeExceptionally
917,2018-12-25 16:20:52.000000000,2019-03-29 12:46:45.000000000,closed,1,Document stack-trace recovery mechanims
916,2018-12-22 23:54:25.000000000,2019-03-26 21:50:35.000000000,closed,0,DebugProbes.*toString prints excess indentations
915,2018-12-22 23:53:23.000000000,2019-03-26 21:50:35.000000000,closed,0,SupervisorCoroutine is not ScopeCoroutine
914,2018-12-22 20:41:56.000000000,2018-12-23 01:22:57.000000000,closed,1,More idiomatic and readable example for coroutines debug module readme
913,2018-12-21 21:19:01.000000000,2018-12-22 23:56:10.000000000,closed,2,"Readme or deployment issue, 1.1.0 is not found on mavenCentral"
912,2018-12-21 19:31:07.000000000,2018-12-21 21:04:42.000000000,closed,0,Version 1.1.0
911,2018-12-21 18:06:49.000000000,2020-04-21 16:09:48.000000000,closed,1,What does it mean in Actors Section? 
910,2018-12-21 16:53:18.000000000,2018-12-21 17:36:48.000000000,closed,6,invokeSuspend throws NullPointer while minifyEnabled is true
909,2018-12-21 16:24:58.000000000,2018-12-21 18:59:22.000000000,closed,4,[Question] async can or can not be replaced with withContext(Dispatchers.Default) when run from coroutine scope
908,2018-12-21 04:49:02.000000000,2018-12-21 16:05:58.000000000,closed,3,no joinChildren extension in coroutines 1.0.1
907,2018-12-20 17:08:22.000000000,2018-12-21 18:22:19.000000000,closed,4,coroutine cooperatif cancelation
906,2018-12-19 21:10:21.000000000,2018-12-20 14:16:10.000000000,closed,0,Stricter checking for CompletableContinuation state machine
905,2018-12-19 20:29:29.000000000,2018-12-21 17:47:53.000000000,closed,1,Android Studio R8 Shrinking
904,2018-12-19 19:00:35.000000000,2019-12-13 18:20:46.000000000,closed,0,CoroutineSchedulerStressTest.testExternalTasksSubmission is not realiable
903,2018-12-18 20:54:09.000000000,2018-12-19 01:20:24.000000000,closed,0,Version 1.1.0-alpha
902,2018-12-18 15:40:44.000000000,1970-01-01 00:00:00.000000001,open,24,Support natural batching in flow
901,2018-12-18 14:09:29.000000000,2018-12-21 21:04:43.000000000,closed,0,Prevent second racy resume in CancellableContinuation
900,2018-12-17 21:59:00.000000000,2018-12-18 14:47:51.000000000,closed,0,Debug improvements
899,2018-12-17 16:44:04.000000000,2018-12-21 13:53:06.000000000,closed,3,Can I confine coroutines in exactly one uncertain thread?
898,2018-12-17 13:49:33.000000000,2018-12-18 14:00:08.000000000,closed,0,Do not probabilistically steal blocking tasks as part of anti-starvat…
897,2018-12-16 20:12:57.000000000,2018-12-17 21:55:09.000000000,closed,0,Dispose waiting node when Deferred.await is cancelled
896,2018-12-16 18:27:26.000000000,2018-12-18 14:08:38.000000000,closed,4,Ignore exception on cancel/fail race in CancellableContinuation
895,2018-12-16 12:09:55.000000000,2018-12-16 13:18:47.000000000,closed,1,fix small typo of async method
894,2018-12-16 01:44:22.000000000,2018-12-16 01:50:24.000000000,closed,1,BroadcastChannel may not broadcast messages
893,2018-12-14 21:44:33.000000000,2018-12-19 01:20:27.000000000,closed,10,Exception inside async {} is logged by uncaught exception handler
892,2018-12-14 18:30:56.000000000,2018-12-19 01:20:27.000000000,closed,2,withTimeout leaks exceptions caught inside it
891,2018-12-14 15:54:09.000000000,2018-12-14 20:02:29.000000000,closed,4,Throwing exception in channel sharing context with the consumer will also trigger uncaught exceptioon handler
890,2018-12-14 05:15:23.000000000,2019-04-21 14:38:51.000000000,closed,20,Update TestCoroutineContext to support structured concurrency.
889,2018-12-14 02:29:22.000000000,2018-12-21 18:41:40.000000000,closed,0,EventLoop integration and reuse for runBlocking and Unconfined dispatchers
888,2018-12-13 16:02:35.000000000,2018-12-13 17:42:11.000000000,closed,0,Fail-fast if coroutine start internal machinery has failed: treat any…
887,2018-12-13 10:45:46.000000000,2018-12-13 13:58:55.000000000,closed,2,D8 Compile errors with --info enabled in gradle
886,2018-12-13 04:01:34.000000000,2018-12-13 13:46:28.000000000,closed,1,Remove unnecessary function declaration from example
885,2018-12-12 17:10:06.000000000,2018-12-12 18:48:44.000000000,closed,5,Testing without 'runBlocking'
884,2018-12-12 15:31:59.000000000,2018-12-12 20:14:54.000000000,closed,2,Do not yield in CoroutineScheduler during transition to the idle stat…
883,2018-12-11 16:33:08.000000000,2018-12-11 18:01:38.000000000,closed,3,Update depencies to the latest kotlin version
882,2018-12-11 13:40:01.000000000,2018-12-11 13:44:06.000000000,closed,1,Remove typo in Job documentation
881,2018-12-10 21:16:05.000000000,2018-12-11 19:38:00.000000000,closed,3,Convert existing blocking Java functions to coroutines
880,2018-12-10 14:28:50.000000000,2018-12-19 01:20:26.000000000,closed,0,Fail fast if coroutine machinery failed to initialize
879,2018-12-10 11:09:35.000000000,2018-12-10 15:03:27.000000000,closed,2,"java.lang.ClassNotFoundException: Didn't find class ""kotlinx.coroutines.experimental.Deferred"" "
878,2018-12-08 21:38:46.000000000,2019-04-04 16:46:59.000000000,closed,50,Slow android Dispatchers.Main init
877,2018-12-07 23:25:16.000000000,2018-12-12 20:11:31.000000000,closed,1,[WIP] Proposal for ReusableCoroutineScope
876,2018-12-06 18:32:24.000000000,2018-12-13 14:39:46.000000000,closed,0,Debug agent to track alive coroutines
875,2018-12-05 17:42:08.000000000,1970-01-01 00:00:00.000000001,open,11,Exception thrown by async is not caught when parent job is cancelled.
874,2018-12-05 03:00:34.000000000,2018-12-12 20:11:19.000000000,closed,11,"[Proposal] New ""reusable"" scope"
873,2018-12-04 15:30:25.000000000,2019-02-27 20:19:03.000000000,closed,5,Uncaught exception
872,2018-12-04 07:08:16.000000000,2018-12-04 11:13:12.000000000,closed,2,How to transform a blocking function to suspendable function? 
871,2018-12-03 19:11:02.000000000,2020-05-08 21:49:50.000000000,closed,3,Fix inconsistencies in the documentation on exception handling and cancellation
870,2018-12-03 15:55:51.000000000,2018-12-19 01:20:25.000000000,closed,0,withTimeout() should throw TimeoutCancellationException if timeMillis<= 0
869,2018-12-03 09:56:08.000000000,2018-12-06 21:20:30.000000000,closed,6,Question: How to properly wrap RxJava 2 functions with suspend functions
868,2018-12-01 00:38:01.000000000,2019-03-26 21:50:37.000000000,closed,9,Time.kt uses Duration.toMillis in unsafe manner
867,2018-11-30 18:50:03.000000000,2018-12-06 13:08:47.000000000,closed,1,docs: make `Table of contents` as bold
866,2018-11-30 16:48:30.000000000,2018-12-10 22:23:25.000000000,closed,1,Introduce MainScope factory and CoroutineScope.cancel extension
865,2018-11-30 16:47:41.000000000,2018-11-30 16:50:50.000000000,closed,2,CoroutineScope rethrow previous exception on new launch with same job
864,2018-11-29 11:54:14.000000000,2018-11-30 17:11:57.000000000,closed,1,IllegalStateException crash: call to 'resume' before 'invoke' with coroutine
863,2018-11-28 18:10:24.000000000,2019-08-19 02:51:15.000000000,closed,4,Errors with JS ServiceWorker due to Window usage
862,2018-11-28 15:37:01.000000000,1970-01-01 00:00:00.000000001,open,0,Exceptions can escape TestCoroutineContext and get reported on the global exception handler
861,2018-11-28 05:08:08.000000000,2018-11-30 19:26:20.000000000,closed,3,Trigger InterruptException inside a job
860,2018-11-27 12:56:24.000000000,2018-12-21 21:04:43.000000000,closed,1,Integrate event loops of runBlocking and UNCONFINED
859,2018-11-25 14:01:45.000000000,2019-03-26 21:50:34.000000000,closed,6,Document how to disable warning for `ExperimentalCoroutineApi` and `ObsoleteCoroutineApi`
858,2018-11-24 08:16:43.000000000,2019-01-17 17:24:13.000000000,closed,34,kotlin.coroutines.jvm.internal.DebugMetadataKt.getDebugMetadataAnnotation(DebugMetadata.kt:1)
857,2018-11-23 17:42:12.000000000,2019-04-09 20:49:47.000000000,closed,2,Way to use CoroutineDispatcher as RxJava2 scheduler (#548)
856,2018-11-22 19:48:43.000000000,2020-05-08 21:49:49.000000000,closed,1,DefaultExecutor can never exit on IDLE
855,2018-11-22 19:40:31.000000000,1970-01-01 00:00:00.000000001,open,9,Coroutines are not built for arm ( targets linuxArm32Hfp and others) 
854,2018-11-22 17:18:33.000000000,2018-11-26 15:59:23.000000000,closed,5,Question: Job Initialization in Android Activity
853,2018-11-22 16:48:55.000000000,1970-01-01 00:00:00.000000001,open,2,"A page on ""concurrency idioms"" in docs"
852,2018-11-22 10:46:10.000000000,2018-12-21 13:53:53.000000000,closed,4,"Exception in thread ""main"" java.lang.NoSuchMethodError: kotlin.coroutines.jvm.internal.Boxing.boxİnt(I)Ljava/lang/Integer"
851,2018-11-22 10:44:30.000000000,2018-11-27 16:49:58.000000000,closed,3,"Weird crash, any idea where I can debug?"
850,2018-11-21 19:48:25.000000000,2018-12-21 21:04:43.000000000,closed,1,Ability to get and process current EventLoop
849,2018-11-21 19:27:05.000000000,2019-06-12 03:28:04.000000000,closed,15,java.lang.IllegalStateException: Module with the Main dispatcher is missing. Occurs for AWS device farm
848,2018-11-21 05:56:37.000000000,2018-11-21 15:46:42.000000000,closed,1,"Updated readme to make it clear, that for Proguard manual actions req…"
847,2018-11-21 02:06:20.000000000,2018-11-21 15:52:33.000000000,closed,1,Update coroutines-guide-ui.md gradle dependencies
846,2018-11-20 22:31:50.000000000,1970-01-01 00:00:00.000000001,open,5,List of available builders is missing in the readme
845,2018-11-20 21:43:27.000000000,1970-01-01 00:00:00.000000001,open,3,start argument for produce.
844,2018-11-20 17:48:21.000000000,2018-11-20 19:50:26.000000000,closed,2,lists auto convert to arrays hide bugs
843,2018-11-20 06:59:25.000000000,2020-04-21 16:10:40.000000000,closed,2,How to pause a channel from receive or send
842,2018-11-16 20:28:48.000000000,2018-11-27 18:56:16.000000000,closed,1,"Initialize JavaFx more accurately, do not leave dispatcher in uniniti…"
841,2018-11-16 14:45:05.000000000,2019-05-14 20:22:33.000000000,closed,2,Provide capacity parameter to channel operators
840,2018-11-16 13:32:52.000000000,2019-12-13 17:47:14.000000000,closed,8,Dispatchers.Default consumes too much CPU in the face of short bursts of work
839,2018-11-15 22:43:23.000000000,1970-01-01 00:00:00.000000001,open,8,CoroutineExceptionHandler is invoked from a random thread
838,2018-11-15 04:02:16.000000000,2018-11-16 13:43:55.000000000,closed,3,Guava: Support building with Guava 27.
837,2018-11-14 22:08:59.000000000,2018-11-28 17:16:14.000000000,closed,0,Wrap all Incomplete final state into box (and unbox it where necessar…
836,2018-11-14 17:02:24.000000000,2018-11-27 16:54:29.000000000,closed,8,Coroutines launched in actor are not getting cancelled when we close the actor channel
835,2018-11-14 16:29:20.000000000,2018-12-19 01:20:25.000000000,closed,1,Puzzling hang in runBlocking
834,2018-11-14 16:08:56.000000000,2018-12-13 15:00:14.000000000,closed,1,CoroutineScope extensions and MainScope
833,2018-11-14 14:40:09.000000000,2018-12-21 17:54:45.000000000,closed,3,Improve debuggability of repeated resumeWithException invocations
832,2018-11-14 14:14:26.000000000,2018-11-14 15:27:47.000000000,closed,0,Native README shows Actors are supported
831,2018-11-14 14:01:59.000000000,2018-11-14 17:00:36.000000000,closed,3,gradle dependencies fails for kotlinx-coroutines-core-native
830,2018-11-14 13:54:11.000000000,2018-12-19 01:20:27.000000000,closed,11,Introduce API to avoid cancel/fail races with CancellableContinuation 
829,2018-11-14 02:47:19.000000000,2018-12-19 01:20:25.000000000,closed,1,Provide MainScope factory
828,2018-11-14 02:40:16.000000000,1970-01-01 00:00:00.000000001,open,7,Extensions on CoroutineScope to improve its mental model
827,2018-11-13 19:19:02.000000000,2018-11-14 02:44:25.000000000,closed,2,Joining multiple jobs in a context can cause leaked jobs
826,2018-11-13 16:11:13.000000000,2018-11-27 18:58:45.000000000,closed,0,MT 0
825,2018-11-13 12:58:12.000000000,2018-11-27 17:03:51.000000000,closed,4,Kotlin compiler plugin to recover minimal stack trace of launch site
824,2018-11-13 08:42:24.000000000,2018-11-13 18:26:26.000000000,closed,3,1.0.1 - Error while building Android
823,2018-11-13 06:27:48.000000000,2018-11-13 15:26:29.000000000,closed,1,JavaFx 1.0.1 Using jdk 8 causing java.lang.ExceptionInInitializerError
822,2018-11-13 01:14:12.000000000,2019-03-26 21:50:38.000000000,closed,6,Throwing exceptions inside coroutines generates warnings on Android 9 devices
821,2018-11-12 21:52:33.000000000,2018-11-12 22:46:59.000000000,closed,1,Fix grammatical error in doc/basics.md
820,2018-11-12 19:45:15.000000000,2019-06-28 20:17:10.000000000,closed,7,Use Promise.resolve().then(...) to schedule coroutines by default for all platforms (including node.js) with fallback to setTimeout
819,2018-11-12 17:03:59.000000000,2018-11-14 02:44:39.000000000,closed,2, Why  Coroutine can't running in new thread?
818,2018-11-11 23:15:45.000000000,2018-11-12 17:20:21.000000000,closed,1,Fix typo
817,2018-11-11 23:13:12.000000000,2019-02-05 18:10:40.000000000,closed,9,No static method boxİnt(I)Ljava/lang/Integer
816,2018-11-09 19:28:01.000000000,2018-12-19 01:20:24.000000000,closed,8,JavaFx main dispatcher fails to initialize on JDK8
815,2018-11-09 15:16:04.000000000,2020-04-21 16:11:19.000000000,closed,5,kotlinx.coroutines.channels.LazyBroadcastCoroutine cannot be cast to kotlinx.coroutines.channels.ConflatedBroadcastChannel
814,2018-11-09 10:06:11.000000000,1970-01-01 00:00:00.000000001,open,2,How to express intersection of two CoroutineScopes?
813,2018-11-08 22:18:28.000000000,1970-01-01 00:00:00.000000001,open,3,Can Job be separated from CorotineContext?
812,2018-11-08 17:42:18.000000000,1970-01-01 00:00:00.000000001,open,4,Support androidNative target
811,2018-11-08 14:47:42.000000000,2018-12-12 22:06:23.000000000,closed,1,Lincheck update
810,2018-11-08 10:37:26.000000000,2018-12-19 01:20:26.000000000,closed,18,Possibility to replace default dispatchers
809,2018-11-08 01:13:46.000000000,2018-11-08 02:34:39.000000000,closed,0,Handler textWatcher error
808,2018-11-07 18:19:59.000000000,2019-03-26 21:50:37.000000000,closed,0,Global handler for fatal errors in coroutine machinery
807,2018-11-07 16:51:39.000000000,2018-11-21 15:46:42.000000000,closed,3,consumer proguard config is not added.
806,2018-11-07 13:33:46.000000000,2018-11-12 23:14:35.000000000,closed,0,Provide API to access threads in dispatcher
805,2018-11-07 13:21:14.000000000,2019-02-22 21:18:43.000000000,closed,2,coroutines 1.0.0 fails on IOS with either java.lang.IllegalStateException: Could not find.....ktor-client-ios_debug_ios_x64 or not finding coroutines in imports
804,2018-11-06 21:55:23.000000000,2018-11-27 18:43:43.000000000,closed,3,Fix: default dispatcher doesn't work with jsdom
803,2018-11-06 21:08:07.000000000,2019-03-26 21:50:36.000000000,closed,1,Possible legacy example
802,2018-11-06 21:04:58.000000000,2018-12-21 14:06:27.000000000,closed,0,"Possible confusion between JVM main thread, old UI context and Dispatchers.Main"
801,2018-11-06 20:26:59.000000000,2018-11-08 13:44:18.000000000,closed,0,Version 1.0.1
800,2018-11-06 15:46:08.000000000,2018-11-06 17:38:57.000000000,closed,0,Clarify docs for CancellableContinuation
799,2018-11-06 15:41:49.000000000,2019-05-24 04:02:42.000000000,closed,15,IllegalStateException: Module with the Main dispatcher is missing
798,2018-11-06 14:50:40.000000000,2018-11-06 17:41:45.000000000,closed,0,Try to reflectively use public JavaFX API before PlatormImpl fallback…
797,2018-11-06 04:55:48.000000000,2019-01-18 19:49:20.000000000,closed,3,Select does not receive messages with two Rendezvous channels
796,2018-11-05 21:56:40.000000000,2018-11-06 12:51:09.000000000,closed,0,fix link
795,2018-11-05 19:28:58.000000000,2018-11-06 12:50:50.000000000,closed,1,fixed typo
794,2018-11-05 14:28:33.000000000,2018-11-06 12:50:26.000000000,closed,1,Fix typo
793,2018-11-05 08:39:42.000000000,2018-11-06 14:28:03.000000000,closed,5,NoClassDefFoundError: kotlinx.coroutines.android.HandlerContextKt
792,2018-11-04 17:35:23.000000000,2018-12-13 15:26:24.000000000,closed,3,Stacktrace recovery
791,2018-11-04 17:32:54.000000000,2018-11-06 17:55:54.000000000,closed,1,Use final Job state in undispatched coroutine completion
790,2018-11-03 20:08:06.000000000,2018-11-03 20:17:23.000000000,closed,1,Android | Avoid cancelling of parent job on exception on child coroutine
789,2018-11-03 20:03:52.000000000,2018-11-04 17:11:15.000000000,closed,1,Fix the example
788,2018-11-02 23:49:35.000000000,2018-11-03 22:57:00.000000000,closed,3,"""Suspension functions can be called only within coroutine body"" errors on non-suspension function"
787,2018-11-02 18:04:03.000000000,2019-06-07 01:02:25.000000000,closed,1,Documentation improvement about async.await cancelling outer scope
786,2018-11-02 16:05:43.000000000,2018-11-06 14:32:39.000000000,closed,3,"Best practices, should use JavaNIO and suspendCoroutine or JavaIO and Dispatchers.IO"
785,2018-11-01 21:23:34.000000000,2019-03-26 21:50:36.000000000,closed,3,withContext doesn't check for cancellation before running the block
784,2018-11-01 13:21:01.000000000,2018-11-02 13:34:10.000000000,closed,3,native core klib file not found
783,2018-10-31 19:10:33.000000000,2018-11-06 17:48:08.000000000,closed,0,[DO NOT MERGE] Update lincheck
782,2018-10-31 17:43:41.000000000,2018-11-01 21:25:32.000000000,closed,1,Weird proposal: globalLaunch extension on CoroutineDispatcher
781,2018-10-31 15:09:27.000000000,2018-11-06 17:42:25.000000000,closed,0,Dispatcher fixes
780,2018-10-31 14:33:03.000000000,2018-10-31 18:32:07.000000000,closed,3,Fix doc
779,2018-10-31 07:52:39.000000000,2018-10-31 08:45:22.000000000,closed,0,按照格式要求翻译协程《基础》以及《协程指南》
778,2018-10-31 07:16:17.000000000,2018-10-31 16:49:19.000000000,closed,3,"""Unresolved reference"" with kotlin 1.3 & coroutines 1.0.0"
777,2018-10-30 23:17:10.000000000,2018-10-31 01:25:52.000000000,closed,1,fix minor typo
776,2018-10-30 20:36:12.000000000,2018-10-31 12:21:40.000000000,closed,10,Help migrating actors to v1.0
775,2018-10-30 19:38:19.000000000,2019-02-22 21:10:16.000000000,closed,9,java.lang.NoSuchMethodError: No virtual method loadList(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; in class MyClass
774,2018-10-30 18:56:49.000000000,2018-11-02 12:48:37.000000000,closed,6,How to extend channel implementations post 0.27.0
773,2018-10-30 17:01:25.000000000,2019-03-26 21:50:37.000000000,closed,1,ThreadContextElement failure breaks cancellation
772,2018-10-30 16:54:16.000000000,2018-12-19 01:20:25.000000000,closed,1,Introduce internal API to print coroutines hierarchy
771,2018-10-30 15:54:10.000000000,2018-10-30 15:56:47.000000000,closed,1,Exceptions from coroutine infrastructure sometimes not reported
770,2018-10-30 12:13:19.000000000,1970-01-01 00:00:00.000000001,open,1,Implement runBlocking on top of iOS event queue
769,2018-10-30 11:44:41.000000000,2018-10-30 11:44:58.000000000,closed,0,将《协程基础》翻译为中文
768,2018-10-29 18:38:45.000000000,2018-10-29 19:45:12.000000000,closed,2,Build error
767,2018-10-29 14:29:16.000000000,2018-11-12 22:27:39.000000000,closed,3,LazyStandaloneCoroutine contains an `val` reference to block
766,2018-10-28 07:58:23.000000000,2018-11-05 09:00:30.000000000,closed,9,java.lang.ClassNotFoundException: kotlin.coroutines.jvm.internal.CoroutineImpl
765,2018-10-27 00:21:08.000000000,1970-01-01 00:00:00.000000001,open,4,There should always be a single-threaded main dispatcher at run time
764,2018-10-26 16:34:07.000000000,2018-11-06 17:44:33.000000000,closed,0,Add uncaught exception handler in TestBase.before and validate that n…
763,2018-10-25 21:48:19.000000000,2020-04-01 13:17:29.000000000,closed,47,Async builder and cancellation in structured concurrency 
762,2018-10-25 20:33:48.000000000,1970-01-01 00:00:00.000000001,open,1,Implement receiveOrClosed
761,2018-10-25 15:16:37.000000000,2018-10-30 12:39:56.000000000,closed,0,Futures fix
760,2018-10-25 13:43:13.000000000,2019-01-06 04:57:58.000000000,closed,17,New integration: AndroidX Lifecycle
759,2018-10-25 10:54:57.000000000,2018-10-25 20:52:46.000000000,closed,1,Coroutine retry function
758,2018-10-25 00:29:37.000000000,2018-11-08 00:49:10.000000000,closed,2,Warnings while using Android Studio 3.3 R8 Shrinking
757,2018-10-24 18:57:19.000000000,2018-10-26 23:58:05.000000000,closed,1,Update link in coroutines-guide-ui.md
756,2018-10-24 12:57:00.000000000,2018-10-29 19:27:24.000000000,closed,0,Version 1.0.0
755,2018-10-24 11:31:02.000000000,2018-10-24 13:15:36.000000000,closed,1,Keep getting this warning : w: -Xcoroutines has no effect: coroutines are enabled anyway in 1.3 and beyond
754,2018-10-23 16:33:56.000000000,2018-10-24 08:26:19.000000000,closed,0,Make snippet as non-runnable
753,2018-10-23 14:11:05.000000000,2019-04-30 04:55:06.000000000,closed,21,App exits after catching exception thrown by coroutine
752,2018-10-23 13:30:13.000000000,2018-10-23 14:03:27.000000000,closed,1,redundant 'of'
751,2018-10-23 09:35:03.000000000,2018-11-08 13:44:18.000000000,closed,3,JDK8 & Guava future integration modules do not handle child exceptions properly
750,2018-10-22 20:59:42.000000000,2018-10-24 12:33:27.000000000,closed,0,Implement yield for unconfined dispatchers
749,2018-10-22 19:48:42.000000000,2018-12-17 21:49:13.000000000,closed,5,Introduce test module with testable main dispatcher
748,2018-10-22 19:07:53.000000000,2018-11-08 13:44:19.000000000,closed,0,ExperimentalCoroutineDispatcher fails to close
747,2018-10-22 18:06:58.000000000,2018-10-23 07:24:05.000000000,closed,1,redundant 'is'
746,2018-10-22 17:56:49.000000000,2018-12-19 01:20:26.000000000,closed,3,Introduce API to inject main dispatcher
745,2018-10-22 14:07:31.000000000,2018-11-06 14:46:38.000000000,closed,8,async lazy val  pattern causes infinite suspend
744,2018-10-22 14:03:42.000000000,2018-10-22 15:53:53.000000000,closed,0,Make select-expression & shared state and concurrency runnable
743,2018-10-22 13:54:25.000000000,2018-10-23 07:49:22.000000000,closed,1,Make select-expression & shared state and concurrency runnable
742,2018-10-22 13:09:22.000000000,2019-02-27 19:51:13.000000000,closed,2,producer shortcut for collections
741,2018-10-21 21:34:07.000000000,2018-11-06 17:46:07.000000000,closed,3,Use array-based queue for Scheduler.GlobalQueue & optimize Task
740,2018-10-20 22:22:12.000000000,2018-10-31 13:48:29.000000000,closed,5,Reactive streams integration conformance to TCK verified & fixed
739,2018-10-20 20:55:44.000000000,2018-10-23 20:19:01.000000000,closed,3,Undeprecate Channel.receiveOrNull
738,2018-10-20 01:17:17.000000000,2018-10-20 01:19:20.000000000,closed,1,fixed typo
737,2018-10-20 00:22:15.000000000,2018-10-29 19:27:25.000000000,closed,0,Yield support in unconfined and immediate dispatchers
736,2018-10-19 20:12:55.000000000,2019-12-13 18:19:48.000000000,closed,11,Support BroadcastChannel(Channel.UNLIMITED)
735,2018-10-19 15:09:29.000000000,2018-10-21 14:22:17.000000000,closed,1,Make examples runnable
734,2018-10-19 13:53:21.000000000,2018-10-20 01:19:52.000000000,closed,1,Fix typo
733,2018-10-19 12:33:16.000000000,2018-10-19 15:10:33.000000000,closed,1,Make exceptions examples runnable
732,2018-10-19 12:16:06.000000000,2018-10-19 15:10:42.000000000,closed,1,Make context examples runnable
731,2018-10-19 11:56:06.000000000,2018-10-19 15:10:49.000000000,closed,1,Make compose examples runnable
730,2018-10-19 10:47:55.000000000,1970-01-01 00:00:00.000000001,open,1,Provide from debugging info in Actor and Producer toString
729,2018-10-19 01:22:35.000000000,2018-10-19 16:32:44.000000000,closed,2,"HandlerContext is deprecated, but ReplaceWith points to HandlerDispatcher private constructor"
728,2018-10-18 20:46:21.000000000,1970-01-01 00:00:00.000000001,open,2,Provide API for blocking call invocation on  job completion and/or cancellation
727,2018-10-18 20:34:15.000000000,2018-10-20 00:04:48.000000000,closed,0,Version 1.0.0 rc1
726,2018-10-18 14:51:47.000000000,2018-10-24 18:41:42.000000000,closed,6,[Obsolete] (again) New integration: AndroidX Lifecycle
725,2018-10-18 13:15:00.000000000,2018-10-19 15:11:22.000000000,closed,1,Make cancel examples runnable
724,2018-10-18 11:24:51.000000000,2018-10-19 15:11:30.000000000,closed,1,Make channels example runnable
723,2018-10-18 07:48:47.000000000,2019-04-24 23:46:54.000000000,closed,13,Potential issues with CoroutineScope and runBlocking semantics
722,2018-10-18 00:29:46.000000000,2018-10-18 00:55:03.000000000,closed,1,Is there any way to reuse Channel while using ReceiveChannel's extensions?
721,2018-10-17 22:23:48.000000000,2018-10-17 22:42:41.000000000,closed,1,Compatibility issue with 'runBlocking' in Android tests after upgrading kotlin 1.3 
720,2018-10-17 16:16:47.000000000,2018-10-18 17:03:19.000000000,closed,0,"Deprecate Job.cancel(cause) and ReceiveChannel.cancel(cause), return …"
719,2018-10-17 12:53:31.000000000,2018-10-19 15:11:49.000000000,closed,2,Make basics example runnable
718,2018-10-17 12:41:31.000000000,2018-10-18 17:01:55.000000000,closed,1,Rework Dispatchers.Unconfined to use thread-local event loop
717,2018-10-17 11:28:50.000000000,2018-10-17 12:12:01.000000000,closed,0,update guide position in documentation
716,2018-10-17 04:53:10.000000000,2018-10-17 04:53:34.000000000,closed,0,Fix grammatical typo in exception-handling.md
715,2018-10-17 03:03:28.000000000,2018-10-17 13:32:03.000000000,closed,1,Fix grammatical typos
714,2018-10-17 02:38:05.000000000,2018-10-23 09:29:06.000000000,closed,4,Fix temporary leaks in HandlerDispatcher
713,2018-10-16 20:07:54.000000000,2018-10-20 00:04:49.000000000,closed,2,"Job.cancel() should not return a Boolean, but Unit"
712,2018-10-16 17:49:00.000000000,2018-11-08 13:44:18.000000000,closed,1,CancellableContinuation doesn't ignore resumeWithException
711,2018-10-16 17:24:27.000000000,2018-10-18 18:06:21.000000000,closed,0,Cache result of ThreadContext.foldAll in the field of DispatchedCorou…
710,2018-10-16 15:17:44.000000000,2018-10-20 00:04:50.000000000,closed,2,currentScope deprecation / UI best practices
709,2018-10-16 13:37:52.000000000,2018-10-18 17:05:21.000000000,closed,3,Add workaround for androidx toolchain issues: try to load main dispat…
708,2018-10-16 04:33:11.000000000,2018-10-24 18:41:42.000000000,closed,3,Make ReceiveChannel<E>.iterator() extension function
707,2018-10-16 00:59:21.000000000,2018-10-16 13:08:54.000000000,closed,2,ClassCastException in 0.30.2 after obfuscation
706,2018-10-15 20:23:19.000000000,2018-10-20 22:55:28.000000000,closed,23,Suspending version of `lazy { ... }`
705,2018-10-15 17:40:28.000000000,2018-10-15 17:56:10.000000000,closed,2,Accept `Duration` for delay
704,2018-10-15 14:22:19.000000000,2018-10-20 00:04:49.000000000,closed,0,Rework Dispatchers.Unconfined to use thread-local event loop
703,2018-10-14 21:09:37.000000000,1970-01-01 00:00:00.000000001,open,1,Actors (Anti) pattens + documentation
702,2018-10-14 18:33:46.000000000,2018-10-15 17:18:12.000000000,closed,2,Inner methods with callbacks marked with suspend causes an VerifyError/Wrong Code Generated
701,2018-10-12 17:53:22.000000000,2018-10-13 14:03:53.000000000,closed,5,CompletableDeferred<Any>()  Cancelation
700,2018-10-12 02:28:20.000000000,2018-10-12 11:36:50.000000000,closed,1,Fix miss spell in exception-handling.md
699,2018-10-11 09:32:43.000000000,2018-10-11 12:55:57.000000000,closed,1,Kotlin/Native immutability annotations missing
698,2018-10-10 22:36:58.000000000,2018-10-11 02:52:58.000000000,closed,1,Grammatical correction
697,2018-10-10 22:08:57.000000000,2018-10-10 22:14:13.000000000,closed,1,Grammatical correction
696,2018-10-10 19:14:13.000000000,2018-10-10 20:23:35.000000000,closed,10,"Heavy loop does not allow to reach code next to the ""lauch()"" method"
695,2018-10-10 13:43:31.000000000,2018-10-18 18:40:26.000000000,closed,5,Release candidate
694,2018-10-10 11:13:33.000000000,2018-11-14 02:48:26.000000000,closed,3,android: Add interface MainThreadScope that simplifies CoroutineScope implementation
693,2018-10-09 21:43:26.000000000,2018-10-10 13:21:33.000000000,closed,0,Check isCompleted on event loop we're trying to schedule rather orig…
692,2018-10-09 19:26:48.000000000,2018-10-20 00:04:48.000000000,closed,0,EventLoopBase.schedule StackOverflowError
691,2018-10-09 18:56:42.000000000,2020-04-20 18:27:39.000000000,closed,7,Exception handling with structured concurrency (rx & async)
690,2018-10-09 18:48:56.000000000,2018-10-10 13:09:16.000000000,closed,0,kotlin coroutines + javafx ui freez
689,2018-10-09 16:02:17.000000000,2019-06-07 01:02:24.000000000,closed,4,Handle exception only once in case of Job in the coroutines hierarchy
688,2018-10-09 14:58:49.000000000,2020-04-20 18:28:34.000000000,closed,7,Children factories as extensions on CoroutineScope
687,2018-10-09 11:52:22.000000000,1970-01-01 00:00:00.000000001,open,0,Doc: more documentation on cancellation needed
686,2018-10-09 10:22:14.000000000,2018-10-09 14:51:34.000000000,closed,6,Some codes won't be executed after throwing an exception
685,2018-10-08 22:01:51.000000000,2018-10-10 12:21:22.000000000,closed,1,Need Instructions For Using Gradle Kotlin Plugin #673
684,2018-10-08 19:01:40.000000000,2018-10-08 19:26:43.000000000,closed,0,Version 0.30.2
683,2018-10-08 18:08:05.000000000,2019-05-24 12:50:32.000000000,closed,1,Expose silent internal clock overflows in TestCoroutineContext.
682,2018-10-08 17:40:22.000000000,2018-10-08 18:01:55.000000000,closed,0,Fix shutdown sequence for CoroutineScheduler's views
681,2018-10-08 17:13:30.000000000,2018-10-08 18:06:10.000000000,closed,0,Fix lost exception from dispatched withContext on cancelled job
680,2018-10-08 15:34:33.000000000,2018-10-08 16:35:09.000000000,closed,1,JUnit tests fail on Android
679,2018-10-08 14:19:03.000000000,2018-10-20 00:04:49.000000000,closed,0,Continuation.toDebugString should use debug metadata where possible
678,2018-10-08 13:18:01.000000000,2018-10-08 19:26:45.000000000,closed,0,ExperimentalCoroutineDispatcher assertion failed
677,2018-10-08 11:00:16.000000000,2018-10-08 19:58:16.000000000,closed,1,Label before result doesn't look right
676,2018-10-08 08:37:22.000000000,2018-10-08 11:33:04.000000000,closed,2,Mutex deadlock
675,2018-10-07 21:00:28.000000000,2018-10-08 19:26:45.000000000,closed,1,"Even though `async` is already cancelled, it may fail with other Exceptions."
674,2018-10-07 18:22:32.000000000,2018-10-08 13:00:48.000000000,closed,1,Added type <Unit> to be consistent with the text
673,2018-10-07 09:27:42.000000000,2018-10-20 00:04:48.000000000,closed,2,Need Instructions For Using Gradle Kotlin Plugin
672,2018-10-07 08:26:22.000000000,2018-10-09 22:46:02.000000000,closed,5,runBlocking() in Kotlin Native projects
671,2018-10-06 19:13:38.000000000,2018-10-08 19:47:49.000000000,closed,8,CoroutineScope.cancel() extension to reduce boiler-plate in a typical UI app
670,2018-10-06 18:13:53.000000000,2018-10-08 13:00:26.000000000,closed,0,Lazily load Dispatchers.Main and provide a stub impl on failure
669,2018-10-06 17:40:07.000000000,2018-10-08 13:10:08.000000000,closed,4,"Mark newSingle/FixedThreadPoolContext as obsolete, document the reason"
668,2018-10-06 04:53:02.000000000,2018-10-06 05:07:58.000000000,closed,1,"Remove repeated ""for"" word from coroutines guide"
667,2018-10-05 23:37:54.000000000,2018-11-12 17:54:56.000000000,closed,1,Align rxFlowable nullability with the Reactive Streams spec
666,2018-10-05 17:17:00.000000000,2018-10-06 18:20:31.000000000,closed,1,fix grammar typo
665,2018-10-05 16:58:52.000000000,2018-10-08 19:26:45.000000000,closed,1,"If JavaFx dispatcher is present in the classpath, using any other dispatcher will start the JavaFx platform."
664,2018-10-05 12:00:41.000000000,2018-10-06 18:21:36.000000000,closed,2,Fix typo: Remove duplicated 'for' in coroutines-guide.md
663,2018-10-04 17:04:17.000000000,2018-10-05 01:05:49.000000000,closed,2,Compilation errors in GuideReactiveTest.kt
662,2018-10-04 14:59:03.000000000,2018-10-04 15:21:31.000000000,closed,5,Added @Keep annotations for CoroutineExceptionHandler and MainDispatсherFactory which are loaded via ServiceLoader.load() on Android.
661,2018-10-04 13:09:06.000000000,2018-11-08 13:44:19.000000000,closed,0,ExperimentalCoroutineDispatcher needs name parameter
660,2018-10-04 00:33:58.000000000,2018-10-05 12:22:52.000000000,closed,0,Prevent leak of atomicFu dependency to published POM files
659,2018-10-03 20:00:58.000000000,2018-10-08 19:26:45.000000000,closed,3,0.30.1 requires kotlin 1.3 - is this intentional?
658,2018-10-03 15:47:34.000000000,2018-10-08 17:27:35.000000000,closed,0,ExceptionInInitializerError In Unit test after update to 0.30.1
657,2018-10-03 14:13:33.000000000,2018-10-20 00:04:49.000000000,closed,22,Android app with coroutines 0.30.1-eap13 crashes in runtime
656,2018-10-03 13:40:01.000000000,2018-10-08 16:49:50.000000000,closed,1,"TestCoroutineContext, runBlocking and jdk8 integration deadlock"
655,2018-10-03 02:08:20.000000000,2018-10-18 14:52:16.000000000,closed,3,[Obsolete] Add experimental AndroidX Lifecycle integration
654,2018-10-02 23:22:01.000000000,2018-10-06 18:23:18.000000000,closed,1,Updated readme to help people unfamiliar with Gradle
653,2018-10-02 23:09:55.000000000,2018-10-02 23:15:09.000000000,closed,0,Dependencies gradle readme
652,2018-10-02 22:27:31.000000000,2018-11-06 16:07:55.000000000,closed,2,Annotating off-UI code for flagging at compile / runtime
651,2018-10-02 20:10:52.000000000,2018-10-03 00:00:51.000000000,closed,1,Android espresso with sequentially coroutine jobs
650,2018-10-02 20:09:58.000000000,2019-04-30 04:56:08.000000000,closed,5,Child coroutine scope
649,2018-10-02 18:37:45.000000000,2018-10-09 14:05:51.000000000,closed,6,Coroutine freeze UI
648,2018-10-02 16:48:05.000000000,2019-06-07 01:02:22.000000000,closed,1,Make Dokka task independent on accessibility of external API
647,2018-10-02 13:59:38.000000000,2018-10-02 14:02:05.000000000,closed,0,"Short Dispatchers.Default.toString value (""DefaultDispatcher"")"
646,2018-10-02 13:47:05.000000000,2018-10-02 15:16:41.000000000,closed,0,Version 0.30.1
645,2018-10-02 10:47:59.000000000,2018-10-11 22:35:59.000000000,closed,2,Error invoking produce inside a suspending method
644,2018-10-01 23:14:40.000000000,2019-02-22 21:13:05.000000000,closed,25,0.30.0 kotlinx.coroutines does not seem to compile with iOS
643,2018-10-01 19:53:14.000000000,2018-10-11 22:41:21.000000000,closed,1,Add sendAll to produce
642,2018-10-01 19:00:39.000000000,1970-01-01 00:00:00.000000001,open,0,Add an independent Android module with proguard as part of our unit tests
641,2018-10-01 18:29:05.000000000,2018-10-01 20:01:16.000000000,closed,2,Move UI dispatcher to common Dispatchers.Main
640,2018-10-01 11:58:36.000000000,2018-10-01 12:28:48.000000000,closed,1,404 for NonCancellable documentation
639,2018-09-29 19:01:26.000000000,2018-10-01 13:57:19.000000000,closed,0,"Fixed rescheduling, synchronization & task disposal in EventLoop"
638,2018-09-29 14:17:12.000000000,2018-10-02 17:05:01.000000000,closed,0,Never unwrap 3rd party CancellationException
637,2018-09-29 10:28:34.000000000,2018-10-01 18:56:21.000000000,closed,3,Make dispatchers' naming uniform to have Dispatchers.newSingleThreadContext
636,2018-09-28 20:13:30.000000000,2018-09-28 20:31:52.000000000,closed,1,Version 0.30.0
635,2018-09-28 17:56:37.000000000,2018-09-28 18:06:49.000000000,closed,1,Replaced the hardcoded default value with the constant.
634,2018-09-28 17:18:11.000000000,2018-09-28 18:53:57.000000000,closed,0,Check cancellation when starting unconfined coroutine
633,2018-09-28 13:24:23.000000000,2018-09-28 19:19:09.000000000,closed,0,Coroutine scheduler is used by default instead of deprecated CommonPool
632,2018-09-28 11:55:44.000000000,2018-09-28 16:18:37.000000000,closed,17,What is the recommended approach for @ObsoleteCoroutinesApi
631,2018-09-27 22:20:01.000000000,2018-09-28 13:08:11.000000000,closed,0,Restore binary compatibility of Executor.asCoroutineDispatcher
630,2018-09-27 22:12:03.000000000,2018-09-28 15:21:29.000000000,closed,0,async and async-like builders cancel parent on failure
629,2018-09-27 20:57:56.000000000,2018-09-28 20:31:33.000000000,closed,0,Binary compatibility for ExecutorsKt.asCoroutineDispatcher in 0.27.0 (affects ktor)
628,2018-09-27 15:55:16.000000000,2018-09-27 19:42:05.000000000,closed,0,fix broken links for kotlin web site
627,2018-09-27 15:49:04.000000000,2018-09-28 20:31:33.000000000,closed,7,Shouldn't join resume after onCompletion?
626,2018-09-27 12:14:20.000000000,2018-10-02 15:16:42.000000000,closed,8,Dispatchers.Main causes IDE error loops in 0.27.0
625,2018-09-27 11:51:17.000000000,2018-09-28 20:31:34.000000000,closed,0,"Minor documentation issues in the coroutines guide's ""Exception handling"" section"
624,2018-09-27 03:25:33.000000000,2018-09-28 20:31:33.000000000,closed,1,Docs still mentions deprecated currentScope
623,2018-09-27 01:39:42.000000000,2018-11-12 18:11:19.000000000,closed,5,integration with metrics library
622,2018-09-27 01:35:34.000000000,2018-09-27 01:36:01.000000000,closed,1,integration with metrics library
621,2018-09-26 22:26:41.000000000,2018-09-28 20:31:33.000000000,closed,2,Cancelled scopes can be reused
620,2018-09-26 18:03:19.000000000,2018-09-26 20:17:39.000000000,closed,1,Version 0.27.0
619,2018-09-26 07:27:06.000000000,2018-10-10 12:39:41.000000000,closed,1,Runnable docs
618,2018-09-26 06:31:54.000000000,2018-09-26 13:05:49.000000000,closed,0,Fixed CoroutineScope of withContext block for structured concurrency
617,2018-09-26 06:21:29.000000000,2018-09-26 20:17:42.000000000,closed,0,withContext shall provide structured CoroutineScope
616,2018-09-25 23:18:15.000000000,2018-09-26 00:24:56.000000000,closed,0,list all documentation files to include to kotlinlang.org website.
615,2018-09-25 17:40:52.000000000,2018-09-26 00:25:16.000000000,closed,0,Add name parameter to Handler.asCoroutineDispatcher
614,2018-09-25 16:59:38.000000000,2018-09-28 15:30:45.000000000,closed,0,Delayed improvements
613,2018-09-25 15:53:36.000000000,2018-09-25 17:52:11.000000000,closed,0,Implicitly add Job in CoroutineScope constructor if it is missing
612,2018-09-25 14:55:35.000000000,2018-09-26 20:17:40.000000000,closed,0,Exception when CoroutineScheduler.close() is invoked from scheduler's thread
611,2018-09-25 12:45:56.000000000,2018-09-26 01:13:25.000000000,closed,0,Future cancellation
610,2018-09-25 02:59:23.000000000,2018-09-26 20:17:41.000000000,closed,5,CoroutineScope cancellation requires a Job
609,2018-09-24 18:58:39.000000000,2018-10-02 15:16:42.000000000,closed,6,select in JS hangs
608,2018-09-24 18:55:25.000000000,2018-09-25 16:41:07.000000000,closed,0,Api review
607,2018-09-24 15:26:33.000000000,2019-03-26 21:50:34.000000000,closed,0,CompletableJob
606,2018-09-24 12:51:23.000000000,2018-10-11 22:41:08.000000000,closed,1,async / GlobalScope.async are not equivalent inside runBlocking{ }
605,2018-09-24 05:03:11.000000000,2018-09-24 10:52:13.000000000,closed,1,Upgrade Android sample to use structured concurrency
604,2018-09-23 14:43:15.000000000,2018-09-24 18:53:42.000000000,closed,0,Remove Quasar integration module
603,2018-09-23 14:40:12.000000000,2018-09-26 20:17:40.000000000,closed,0,Remove Quasar integration module
602,2018-09-23 14:36:33.000000000,2018-09-24 15:16:31.000000000,closed,0,Remove NIO integration module
601,2018-09-23 14:30:20.000000000,2018-09-26 20:17:40.000000000,closed,0,Remove NIO integration module
600,2018-09-22 23:31:52.000000000,2018-09-23 14:30:47.000000000,closed,1,Added AsynchronousByteChannel.aRead and aWrite.
599,2018-09-22 20:15:16.000000000,2018-09-24 13:06:57.000000000,closed,0,TestBase: Support -Dtest.verbose=true to print expected indices
598,2018-09-22 11:33:36.000000000,2018-09-28 17:45:59.000000000,closed,0,SupervisorJob & supervisorScope
597,2018-09-21 21:57:42.000000000,2018-09-22 16:21:32.000000000,closed,0,Remove Rx 1.x integration module
596,2018-09-21 20:49:08.000000000,2018-10-24 18:42:08.000000000,closed,1,"Provide suspendAtomicCancellableCoroutineReusable primitive, high-per…"
595,2018-09-21 19:56:08.000000000,2018-09-26 20:17:39.000000000,closed,0,Remove Rx 1.x integration module
594,2018-09-21 17:52:12.000000000,2018-09-26 00:27:46.000000000,closed,1,Job should become an abstract class
593,2018-09-21 10:21:10.000000000,2018-10-02 12:36:02.000000000,closed,13,0.26 backward incompatibility
592,2018-09-20 21:12:40.000000000,2018-09-20 21:18:31.000000000,closed,1,Fix typo in deprecation message of JavaFx dispatcher
591,2018-09-20 20:28:51.000000000,2018-09-20 21:26:03.000000000,closed,2,compilation failure with 0.26.1-eap13
590,2018-09-20 17:12:34.000000000,2018-09-20 17:22:53.000000000,closed,0,Kotlin version 1.2.70
589,2018-09-20 16:40:02.000000000,2018-09-22 17:31:53.000000000,closed,0,Fixed cancellation of runBlocking event loon in the presence of delay
588,2018-09-20 16:07:54.000000000,2018-09-26 01:00:29.000000000,closed,2,Handle exceptions fix
587,2018-09-20 09:24:40.000000000,2018-09-23 17:55:54.000000000,closed,7,Split main coroutines guide into multiple files
586,2018-09-20 05:01:16.000000000,2018-09-26 20:17:39.000000000,closed,0,delay + cancelled runBlocking shutdown loop
585,2018-09-19 19:44:52.000000000,2018-09-26 20:17:39.000000000,closed,0,Prevent leaking of parallel decomposition into Job state
584,2018-09-19 18:09:14.000000000,2019-01-17 18:06:38.000000000,closed,3,Scheduled executor service metrics
583,2018-09-19 17:54:49.000000000,2018-09-19 18:16:20.000000000,closed,0,Version 0.26.1
582,2018-09-18 22:37:05.000000000,2018-09-26 16:06:46.000000000,closed,3,Aligned to RxJava2 contract - Observable and Single returns non nulla…
581,2018-09-18 22:03:00.000000000,2018-09-26 06:12:21.000000000,closed,4,Simpler currentScope for a single launch/async
580,2018-09-18 16:38:23.000000000,2018-09-26 20:17:41.000000000,closed,5,HandlerDispatcher name
579,2018-09-18 13:53:57.000000000,2018-09-19 17:25:02.000000000,closed,0,Fixed race in a new Job with listeners between start & cancel
578,2018-09-18 12:44:32.000000000,2018-09-20 12:40:35.000000000,closed,1,"[ERRATA]In coroutines-guide, the section about description of the automatical exception handler is not as expected."
577,2018-09-17 22:39:16.000000000,2018-09-19 17:42:15.000000000,closed,4,Send async messages to the Android main looper
576,2018-09-17 21:01:54.000000000,2018-09-28 20:31:33.000000000,closed,7,"Scope for ""one-for-one"" supervision (children don't crash parent and siblings)"
575,2018-09-17 18:19:28.000000000,2018-09-18 03:18:07.000000000,closed,1,Dispatchers.Main -> Dispatchers.Android ?
574,2018-09-17 16:53:41.000000000,2019-02-27 19:58:13.000000000,closed,1,Print registered handler in CancellableContinuation.toString
573,2018-09-17 16:43:01.000000000,2018-09-17 16:57:28.000000000,closed,2,Fix code sample code for log() in first-read document
572,2018-09-17 16:27:56.000000000,2018-09-26 17:01:49.000000000,closed,0,[WIP] Coroutine debugging improvements
571,2018-09-17 15:46:11.000000000,2018-09-28 20:31:33.000000000,closed,0,newFixedThreadPoolContext/newSingleThreadContext can OOM on long timeouts
570,2018-09-17 12:18:05.000000000,2018-09-20 17:41:49.000000000,closed,1,"CoroutineName context element lives in the JVM module, not common."
569,2018-09-17 03:36:28.000000000,2018-09-17 04:01:10.000000000,closed,1,Fixed CoroutineScope.plus operator
568,2018-09-16 12:32:29.000000000,2018-12-08 01:02:13.000000000,closed,4,Test helper to use Dispatchers.Main without framework dependencies on JVM
567,2018-09-15 15:33:21.000000000,2018-09-18 05:43:53.000000000,closed,2,Error handling like RxJava
566,2018-09-15 12:30:49.000000000,2018-09-15 12:49:42.000000000,closed,1,Fix typo
565,2018-09-15 12:23:36.000000000,2018-09-15 12:48:45.000000000,closed,1,Fix contexts merge
564,2018-09-15 03:52:35.000000000,2019-01-25 13:33:45.000000000,closed,37,Gradle versions above 4.7 cannot resolve kotlinx-coroutines-core with GRADLE_METADATA feature enabled
563,2018-09-15 01:06:48.000000000,2018-09-15 01:21:25.000000000,closed,0,verify with suspend fun in a test
562,2018-09-14 18:44:55.000000000,2018-09-26 20:17:40.000000000,closed,1,Exceptions thrown by CoroutineExceptionHandler must be caught by handleCoroutineException()
561,2018-09-14 12:20:26.000000000,2018-09-14 12:22:25.000000000,closed,1,looks weird to me... but
560,2018-09-14 11:30:47.000000000,2018-09-17 17:49:01.000000000,closed,0,Fixed CoroutineScope.plus operator
559,2018-09-14 11:23:36.000000000,2018-09-19 18:16:21.000000000,closed,0,CoroutineScope + CoroutineContext operator plus is broken
558,2018-09-13 17:31:40.000000000,2018-09-14 11:31:04.000000000,closed,2,Fix CoroutineScope.plus operator
557,2018-09-13 16:51:34.000000000,2018-09-13 17:11:15.000000000,closed,1,Minor link fix for structured concurrency section
556,2018-09-13 06:43:54.000000000,2018-09-13 12:34:33.000000000,closed,1,Fix bad code sample style
555,2018-09-13 06:42:15.000000000,2018-09-13 12:34:58.000000000,closed,0,Fix broken link
554,2018-09-13 06:34:39.000000000,2018-09-13 12:35:24.000000000,closed,0,Fix typo
553,2018-09-12 18:34:15.000000000,2018-09-26 20:17:41.000000000,closed,0,Optimize withContext implementation
552,2018-09-12 18:29:53.000000000,2018-09-28 20:31:33.000000000,closed,1,Async cancellation with structured concurrency
551,2018-09-12 18:21:45.000000000,2018-09-13 00:26:59.000000000,closed,1,Small improvement in doc
550,2018-09-12 17:10:46.000000000,2019-01-17 18:17:55.000000000,closed,1,TickerMode names ambiguous
549,2018-09-12 16:10:32.000000000,2018-09-13 00:27:28.000000000,closed,1,Fix typo in coroutines-guide.md
548,2018-09-12 05:38:42.000000000,1970-01-01 00:00:00.000000001,open,4,Way to use a CoroutineDispatcher as a RxJava Scheduler
547,2018-09-11 21:16:49.000000000,2018-09-12 11:49:57.000000000,closed,0,Version 0.26.0
546,2018-09-11 19:45:17.000000000,2018-09-11 20:59:14.000000000,closed,0,Dispatchers are renamed and grouped in the Dispatchers object
545,2018-09-11 17:57:43.000000000,2018-09-11 20:13:53.000000000,closed,0,Structured concurrency
544,2018-09-11 16:39:57.000000000,2018-09-11 17:24:52.000000000,closed,0,Fixed hangs during thread termination in IO dispatcher
543,2018-09-11 13:20:41.000000000,2018-09-11 16:39:58.000000000,closed,1,how to handler exception while use async
542,2018-09-11 12:38:33.000000000,2018-11-06 14:48:40.000000000,closed,1,Change the wording on experimental features for release
541,2018-09-10 17:09:43.000000000,2019-05-14 20:24:01.000000000,closed,4,Integrate TestCoroutineContext with structured concurrency
540,2018-09-09 19:25:13.000000000,1970-01-01 00:00:00.000000001,open,6,Integrate ticker channels into structured concurrency and flows
539,2018-09-09 02:37:46.000000000,2018-10-06 18:23:18.000000000,closed,0,Make Gradle configuration slightly more clear
538,2018-09-07 22:11:29.000000000,2018-09-22 17:39:14.000000000,closed,3,"Add aWithLock, aReadBytes, aReadText extensions to AsynchronousFileChannel"
537,2018-09-07 19:35:33.000000000,2018-10-20 00:04:49.000000000,closed,1,Performance degradation after #119
536,2018-09-07 14:21:26.000000000,2018-09-12 15:34:28.000000000,closed,4,A coroutine builder needed for async results
535,2018-09-07 13:31:23.000000000,2019-11-27 15:08:29.000000000,closed,3,"Include dex counts (methods, fields, classes) in release notes, with comparison with recent versions"
534,2018-09-07 13:03:34.000000000,2019-09-25 19:04:11.000000000,closed,1,Provide high-performance and reusable CancellableContinuation implementation
533,2018-09-07 12:54:21.000000000,2018-09-12 11:49:58.000000000,closed,4,The name for the main Android dispatcher
532,2018-09-07 06:06:13.000000000,2018-09-07 12:57:58.000000000,closed,1,ReadOnlyBroadcastChannel
531,2018-09-06 14:20:30.000000000,2018-09-07 15:36:24.000000000,closed,0,Use explicit classloader when loading installed CoroutineExceptionHadler impls
530,2018-09-05 18:52:28.000000000,2018-09-12 11:49:57.000000000,closed,3,Coroutines exceptions not logged when android:sharedUserId is set
529,2018-09-05 01:54:56.000000000,2018-09-12 11:49:57.000000000,closed,12,Error parsing triggers: Cannot find module 'kotlinx-atomicfu' with 0.25.3
528,2018-09-04 20:06:51.000000000,2018-09-04 20:06:59.000000000,closed,0,AtomicFU 0.11.5 to fix Windows compilation
527,2018-09-04 18:29:18.000000000,2018-10-11 22:40:38.000000000,closed,2,Mutex.withoutLock
526,2018-09-04 15:22:51.000000000,2018-09-04 17:47:50.000000000,closed,0,Version 0.25.2
525,2018-09-04 15:02:51.000000000,2018-09-12 11:49:58.000000000,closed,7,IO: CoroutineScheduler: high CPU usage for Worker.cpuWorkerIdle on an idle system
524,2018-08-31 08:11:46.000000000,2018-09-12 11:49:58.000000000,closed,6,withContext(IO) blocks thread
523,2018-08-31 03:24:51.000000000,2018-09-25 12:16:22.000000000,closed,27,Support Play Services Tasks API
522,2018-08-30 11:40:01.000000000,2018-08-30 12:24:47.000000000,closed,1,"Error ""Program type already present"""
521,2018-08-28 11:56:57.000000000,2018-08-30 12:24:51.000000000,closed,1,"java.lang.ClassNotFoundException: Didn't find class ""kotlinx.coroutines.experimental.JobKt"
520,2018-08-28 07:29:18.000000000,2018-08-29 04:17:10.000000000,closed,6,"coroutine 0.25.0 gradle compile error ""Program type already present: kotlinx.coroutines.experimental.scheduling.LimitingDispatcher"""
519,2018-08-27 12:42:41.000000000,2018-08-27 13:02:35.000000000,closed,2,how many actors
518,2018-08-27 05:06:47.000000000,2020-03-04 13:45:15.000000000,closed,5,Initial prototype for grpc integration
517,2018-08-26 02:42:13.000000000,2018-08-26 21:55:25.000000000,closed,2,0.25 breaks compilation
516,2018-08-26 02:14:12.000000000,2020-02-13 13:09:52.000000000,closed,8,Add OSGI support
515,2018-08-24 23:56:36.000000000,2018-09-26 20:17:41.000000000,closed,7,Future.await doesn't propagate cancelation signal to future
514,2018-08-24 18:28:13.000000000,2018-08-24 19:59:56.000000000,closed,11,suspendCoroutine is not testtable
513,2018-08-24 16:24:54.000000000,2018-08-24 16:44:34.000000000,closed,1,typo fixed
512,2018-08-24 13:15:41.000000000,2018-09-04 17:47:52.000000000,closed,4,example-app: com.android.builder.dexing.DexArchiveBuilderException
511,2018-08-24 11:16:04.000000000,2018-08-25 18:08:46.000000000,closed,3,Android: Issues on v0.25.0
510,2018-08-24 10:59:08.000000000,2018-09-04 17:47:52.000000000,closed,18,Multi-version jar file problem with Android SDK
509,2018-08-23 19:21:43.000000000,2018-08-23 19:35:28.000000000,closed,0,Version 0.25.0
508,2018-08-23 18:27:48.000000000,2018-08-23 18:39:19.000000000,closed,0,Introduce IO dispatcher to offload blocking I/O-intensive tasks
507,2018-08-23 05:53:54.000000000,2018-08-23 05:56:47.000000000,closed,2,Android Handler Async API
506,2018-08-21 20:57:12.000000000,2018-11-28 17:39:09.000000000,closed,1,Job small optimizations
505,2018-08-21 12:10:52.000000000,2018-08-21 12:35:36.000000000,closed,1,assign coroutine to a variable
504,2018-08-21 08:17:03.000000000,2019-12-13 17:47:07.000000000,closed,0,The select algorithm gets into live-lock in a corner case
503,2018-08-20 19:35:33.000000000,2018-08-21 15:54:12.000000000,closed,0,Unpark runBlocking thread on coroutine completion instead of cancella…
502,2018-08-20 18:33:51.000000000,2018-09-14 13:52:49.000000000,closed,1,[Prototype] exceptions stracktrace recovery
501,2018-08-17 11:14:09.000000000,2018-08-23 19:35:29.000000000,closed,2,Support cancelable parent job in `runBlocking`
500,2018-08-16 22:41:49.000000000,2018-09-07 17:06:54.000000000,closed,6,Crash: Crossinline modifier with delay function call causes IllegalStateException on Android
499,2018-08-16 21:42:45.000000000,2018-08-21 20:45:30.000000000,closed,1,Implement withTimeoutOrNull via withTimeout to avoid timing bugs and …
498,2018-08-16 11:38:06.000000000,2018-08-23 19:35:29.000000000,closed,3,withTimeoutOrNull throw TimeoutCancellationException
497,2018-08-15 15:15:49.000000000,2018-08-22 15:19:06.000000000,closed,2,Class for exposing dispatcher's executor
496,2018-08-15 14:40:48.000000000,1970-01-01 00:00:00.000000001,open,0,Kotlin/Native has problem with names of classes
495,2018-08-15 13:06:41.000000000,2018-08-20 15:39:53.000000000,closed,0,Provide API to create limited view of experimental dispatcher
494,2018-08-14 17:54:29.000000000,1970-01-01 00:00:00.000000001,open,1,Coroutines tracer
493,2018-08-14 13:57:26.000000000,2018-12-19 01:20:24.000000000,closed,0,Basic stacktrace augmentation
492,2018-08-14 13:00:25.000000000,2018-08-14 14:53:24.000000000,closed,0,Do not print GuideTest system out if test passes
491,2018-08-14 12:56:08.000000000,2018-08-14 12:58:01.000000000,closed,0,Do not print GuideTest system out if test passes
490,2018-08-13 20:31:28.000000000,1970-01-01 00:00:00.000000001,open,50,NoSuchFieldException with AtomicReferenceFieldUpdater on Samsung Android 5.0.x devices
489,2018-08-12 20:44:17.000000000,2018-08-13 11:41:23.000000000,closed,3,Coroutine in kotlin 1.3
488,2018-08-12 20:28:52.000000000,2018-08-14 15:13:57.000000000,closed,3,Removed NoClassDefFound cycle until out of memory
487,2018-08-10 17:01:08.000000000,2018-08-10 17:21:52.000000000,closed,1,"Fix duplicated word ""currently"" in KDoc"
486,2018-08-10 12:48:20.000000000,2018-08-10 15:01:53.000000000,closed,0,Revert blocking checkers
485,2018-08-09 17:18:48.000000000,1970-01-01 00:00:00.000000001,open,14,Introduce typesafe actors abstraction
484,2018-08-08 19:10:29.000000000,2018-08-10 15:12:45.000000000,closed,0,Execute EventLoop#invokeOnTimeout in DefaultDispatcher to allow busy-…
483,2018-08-08 13:06:58.000000000,2018-08-08 19:25:42.000000000,closed,1,Remove no longer needed warning suppression
482,2018-08-08 13:05:37.000000000,2018-08-23 19:35:28.000000000,closed,0,"Remove no longer needed @Suppress(""MemberVisibilityCanBePrivate"")"
481,2018-08-07 16:25:15.000000000,2018-10-20 00:04:49.000000000,closed,5,Deprecate and remove Job.cancel(cause)
480,2018-08-07 09:42:44.000000000,2018-08-08 19:26:29.000000000,closed,1,Update coroutines-guide.md
479,2018-08-07 00:44:09.000000000,2018-08-23 19:35:28.000000000,closed,0,CoroutineScope.isActive does not work inside TimeoutCoroutine on timeout
478,2018-08-06 16:19:49.000000000,2018-08-06 16:23:54.000000000,closed,1,"java.lang.IllegalStateException: Unexpected update, state: l[kotlinx.coroutines.experimental.ay: Job was cancelled normally; job=be{CancellingCompleting}@73196c9], update: r[kotlinx.coroutines.experimental.ay: Job was cancelled normally; job=be{Cancelled}@73196c9]"
477,2018-08-06 10:31:21.000000000,2018-08-22 14:45:31.000000000,closed,2,corrected return-type of EventLoop pseudo ctor
476,2018-08-04 06:11:22.000000000,2018-08-04 22:03:06.000000000,closed,2,Start jobs with different priorities
475,2018-08-03 17:52:19.000000000,2018-08-23 19:35:29.000000000,closed,2,Allow to create view with limited threads count(Experimental dispatcher).
474,2018-08-03 00:04:27.000000000,2018-08-03 20:44:49.000000000,closed,3,NoClassDefFoundError: kotlinx/coroutines/swing/Swing
473,2018-08-02 00:26:35.000000000,2018-08-03 18:39:59.000000000,closed,1,peek() on Channel<T> class
472,2018-08-01 19:23:38.000000000,2018-08-10 16:05:26.000000000,closed,1,Defined specific dependencies for android sample apps
471,2018-08-01 13:24:45.000000000,2018-08-06 12:13:33.000000000,closed,1,Update README.md
470,2018-08-01 00:19:46.000000000,1970-01-01 00:00:00.000000001,open,12,Default dispatcher and UI dispatcher support for iOS
469,2018-08-01 00:06:46.000000000,2018-08-23 19:35:28.000000000,closed,1,asCompletableFuture hangs 
468,2018-07-31 15:13:36.000000000,2018-08-13 17:37:10.000000000,closed,5,java.lang.NoSuchMethodError 0.21 -> 0.24.0
467,2018-07-31 12:52:21.000000000,2018-08-06 12:15:22.000000000,closed,1,Update coroutines-guide.md
466,2018-07-31 08:05:28.000000000,2018-08-06 14:08:35.000000000,closed,2,"Replace references to ""MonoActor"" with ""TypedActor"""
465,2018-07-31 08:02:13.000000000,2018-08-06 14:08:26.000000000,closed,0,Update binary compatibility data for ActorTraits and TypedActor
464,2018-07-30 23:40:06.000000000,2018-08-25 18:11:46.000000000,closed,14,Support runBlocking for UI Tests
463,2018-07-28 22:03:15.000000000,2018-11-08 13:44:19.000000000,closed,4,Illegal reflective access reported
462,2018-07-27 12:14:00.000000000,1970-01-01 00:00:00.000000001,open,129,Support multi-threaded coroutines on Kotlin/Native
461,2018-07-27 11:55:58.000000000,2018-07-27 12:28:22.000000000,closed,1,Backgroud execution with Delay in Kotlin/Native
460,2018-07-26 21:40:14.000000000,1970-01-01 00:00:00.000000001,open,8,Implement suspendable RateLimiter
459,2018-07-26 21:19:34.000000000,2018-07-26 21:49:34.000000000,closed,0,Version 0.24.0
458,2018-07-26 19:47:14.000000000,2018-07-26 21:17:48.000000000,closed,16,System property to control BlockingChecker extension point for runBlocking
457,2018-07-26 17:11:00.000000000,2018-07-26 21:12:34.000000000,closed,0,Coroutines scheduler
456,2018-07-26 02:21:24.000000000,2018-07-26 15:33:20.000000000,closed,0,Ignore resume on cancelled continuation
455,2018-07-25 15:52:10.000000000,2018-08-23 15:51:15.000000000,closed,5, Implementation of a SLF4J MDC Context
454,2018-07-25 15:47:20.000000000,2018-08-23 15:45:02.000000000,closed,3,Introduce ThreadContextElement API to integrate with thread-local sensitive code
453,2018-07-24 20:51:53.000000000,2018-08-22 14:42:39.000000000,closed,3,Job exceptions rework
452,2018-07-24 12:47:26.000000000,2018-08-23 19:42:03.000000000,closed,0,Deferred.await() should be exception transparent
451,2018-07-24 12:41:34.000000000,2018-08-23 19:41:55.000000000,closed,0,withTimeoutOrNull implementation doesn't match its contract
450,2018-07-24 09:46:24.000000000,2018-07-26 21:49:35.000000000,closed,5,Cancel all observable meet exception
449,2018-07-23 15:28:41.000000000,2018-07-23 15:35:19.000000000,closed,0,"Access to PlatformImpl in JavaFx dispatcher, on Java 9 it's an intern…"
448,2018-07-23 12:32:16.000000000,2018-07-23 16:21:14.000000000,closed,1,"combination of produce, while(isActive), select{} causes class-cast exception"
447,2018-07-23 08:53:20.000000000,2018-07-25 10:52:58.000000000,closed,7,Netty backpressure
446,2018-07-20 16:16:15.000000000,2018-07-25 11:09:40.000000000,closed,0,Materialize an exception for Job onCancelling handlers
445,2018-07-20 12:58:32.000000000,2018-07-24 20:13:37.000000000,closed,1,Linearizability & SendChannel#invokeOnClose
444,2018-07-20 00:01:51.000000000,2018-07-20 14:15:17.000000000,closed,1,Minor grammatical changes to the Coroutines guide
443,2018-07-19 23:04:09.000000000,2018-07-26 21:49:35.000000000,closed,3,Cannot build from sources with a JDK 10
442,2018-07-19 20:58:31.000000000,2018-07-26 02:37:20.000000000,closed,1,Fix documentation
441,2018-07-19 20:11:12.000000000,2018-07-20 14:24:55.000000000,closed,1,"Multiple, parallel Channel consumers"
440,2018-07-18 07:19:00.000000000,2018-07-18 07:19:47.000000000,closed,0,Update coroutines-guide.md
439,2018-07-18 02:52:55.000000000,2018-07-25 13:51:34.000000000,closed,6,Cancel a job if timeout exceed
438,2018-07-18 02:11:32.000000000,2018-07-18 11:36:29.000000000,closed,1,Misleading enum entry name in test source file
437,2018-07-16 23:30:38.000000000,2019-07-03 19:45:14.000000000,closed,9,Missing Flow operators
436,2018-07-15 15:19:42.000000000,2018-07-26 21:49:35.000000000,closed,1,Job.invokeOnCompletion(onCancelling = true) may call the handler with cause == null even when the job is cancelled
435,2018-07-13 11:25:46.000000000,2018-07-13 11:35:35.000000000,closed,1,added note about FIFO order of `Mutex.lock()`
434,2018-07-11 13:50:45.000000000,2018-07-11 13:52:27.000000000,closed,1,When i close parent job Does it closes all child jobs?
433,2018-07-11 13:45:07.000000000,2018-07-11 13:49:52.000000000,closed,1,What does it mean coroutine is cancelled when the resulting job is cancelled?
432,2018-07-11 11:54:07.000000000,2018-07-26 21:49:34.000000000,closed,3,ForkJoinPool's parallelism is 0
431,2018-07-10 21:27:59.000000000,2018-07-10 21:43:58.000000000,closed,1,`withContext` does not reset context properly
430,2018-07-10 16:01:29.000000000,2018-07-10 19:02:49.000000000,closed,6,NoClassDefFoundError when calling launch()
429,2018-07-08 22:31:27.000000000,1970-01-01 00:00:00.000000001,open,2,use-like extensions on ReceiveChannel and SendChannel
428,2018-07-08 22:00:35.000000000,2019-04-06 13:33:41.000000000,closed,20,Weird proposal: operator invoke extension on context
427,2018-07-08 17:51:32.000000000,2018-09-19 19:22:15.000000000,closed,12,Make Android UI dispatcher asynchronous by default
426,2018-07-08 14:58:06.000000000,2018-09-24 18:54:25.000000000,closed,7,Integration with Firebase for Android
425,2018-07-06 20:22:59.000000000,2018-07-18 18:56:11.000000000,closed,3,Provide HandlerContext.immediate extension to immediately execute tas…
424,2018-07-05 18:26:42.000000000,2018-11-06 16:09:44.000000000,closed,15,`awaitFirst` function
423,2018-07-05 13:08:10.000000000,2018-07-06 18:53:36.000000000,closed,1,Use parent = contextJob instead of contextJob + UI
422,2018-07-05 10:47:56.000000000,2018-07-13 15:30:52.000000000,closed,4,ClosedSendChannelException confusing (actor should report failures)
421,2018-07-05 04:13:51.000000000,2018-07-10 19:21:12.000000000,closed,2,Recursive buildSequence does not compile
420,2018-07-04 14:00:22.000000000,2018-07-06 19:53:20.000000000,closed,3,Empty whileSelect {  } hangs
419,2018-07-03 16:55:15.000000000,2018-07-18 11:33:07.000000000,closed,0,Forbid runBlocking in UI dispatchers
418,2018-07-03 12:56:56.000000000,2018-07-10 22:16:51.000000000,closed,0,Change order of handlers in JobSupport and CancellableContinuation
417,2018-07-02 12:56:42.000000000,2018-07-06 18:59:38.000000000,closed,1,Patch 7
416,2018-07-02 12:56:11.000000000,2018-07-18 11:27:23.000000000,closed,1,Patch 8
415,2018-07-02 12:54:16.000000000,2018-07-26 21:49:34.000000000,closed,4,Consolidate and document order between cancellation handlers and continuation resume
414,2018-07-02 12:47:14.000000000,2018-07-06 19:03:17.000000000,closed,1,Update coroutines-guide.md
413,2018-06-29 18:29:24.000000000,2018-06-29 19:11:53.000000000,closed,2,Deferred result is never used
412,2018-06-29 12:06:37.000000000,2018-07-26 21:49:34.000000000,closed,0,ArrayBroadcastChannel should use CoW list on JS
411,2018-06-29 00:07:06.000000000,2018-07-04 01:10:53.000000000,closed,3,Kotlin 1.2.51 not available
410,2018-06-27 14:39:17.000000000,2018-09-12 11:49:58.000000000,closed,63,Change default for global vs child coroutines by scoping coroutine builder (structured concurrency)
409,2018-06-26 21:00:06.000000000,2018-06-28 11:28:42.000000000,closed,1,Clarify RX subscription and cancellation example
408,2018-06-26 10:10:28.000000000,2019-05-21 19:17:19.000000000,closed,9,efficient read-write lock (#94) and semaphore implementations
407,2018-06-24 23:49:50.000000000,2018-07-02 12:56:25.000000000,closed,7,The source channel is not cancelled when cancelling the result of  `produce(onCompletion = consumes())` 
406,2018-06-22 04:11:32.000000000,2018-06-28 11:38:02.000000000,closed,1,Updated the guide fan-out section to use channel iterator
405,2018-06-21 15:16:56.000000000,2018-06-21 15:21:02.000000000,closed,0,Parcelize Issue
404,2018-06-21 11:49:37.000000000,2018-06-21 15:43:53.000000000,closed,2,Debug coroutines in Android
403,2018-06-20 17:19:11.000000000,2018-07-25 15:53:09.000000000,closed,5,implementation of a SLF4J MDC context
402,2018-06-16 19:04:08.000000000,2019-04-09 21:01:43.000000000,closed,17,Make ConflatedBroadcastChannel allocation-free (#395)
401,2018-06-16 12:01:49.000000000,2018-06-19 16:59:21.000000000,closed,7, java.lang.IllegalAccessError with ProGuard enabled
400,2018-06-15 07:49:33.000000000,2018-07-04 13:18:23.000000000,closed,11,There is a problem about kotlinx.coroutines 0.23.1
399,2018-06-14 14:17:03.000000000,2019-02-27 19:48:16.000000000,closed,2,Consider rewriting Job state machine using lock
398,2018-06-14 13:24:25.000000000,2018-06-14 13:41:54.000000000,closed,2,introduce ReceiveBroadcastChannel
397,2018-06-14 11:08:33.000000000,2018-06-15 15:53:13.000000000,closed,1,Whether 0.23.1 version support Kotlin 1.2.30 ?
396,2018-06-11 23:16:36.000000000,2018-06-15 16:00:17.000000000,closed,2,Cannot find module 'atomicfu'
395,2018-06-11 13:08:07.000000000,2020-05-08 21:49:53.000000000,closed,7,Make ConflatedBroadcastChannel allocation-free
394,2018-06-10 13:31:05.000000000,2018-06-15 15:50:17.000000000,closed,3,Add transformations to BroadcastChannel
393,2018-06-09 21:02:03.000000000,2018-06-11 12:41:13.000000000,closed,1,Update ThreadPoolDispatcher.kt
392,2018-06-09 20:54:18.000000000,2018-06-14 02:34:59.000000000,closed,7,coroutines-guide.md: usages of delay(Long) need to be replaced with delay(Int).
391,2018-06-09 20:42:50.000000000,2018-06-11 12:40:33.000000000,closed,1,Update coroutines-guide.md
390,2018-06-09 13:48:59.000000000,2018-06-09 13:57:55.000000000,closed,1,Update CommonPool.kt
389,2018-06-09 13:40:49.000000000,2018-06-09 13:53:59.000000000,closed,1,Update CoroutineStart.kt
388,2018-06-08 18:33:10.000000000,2018-06-09 14:01:16.000000000,closed,0,Fix some incorrect information in the changelog
387,2018-06-08 15:00:05.000000000,1970-01-01 00:00:00.000000001,open,1,Improve ticker channels: make them cross-platform and compatible with test context
386,2018-06-07 12:54:31.000000000,2018-06-07 14:11:10.000000000,closed,2,Exception in coroutine after cancel is silently ignored
385,2018-06-06 17:09:43.000000000,2018-08-23 19:35:29.000000000,closed,4,consider exposing the Executor from a CoroutineDispatcher.
384,2018-06-05 19:16:39.000000000,2018-06-06 15:35:38.000000000,closed,0,Unwrap exception on CompletionStage#await slow-path to provide consistent results
383,2018-06-04 09:29:10.000000000,2018-06-05 20:30:39.000000000,closed,2,Can I put an item at head of Channel?
382,2018-06-04 03:35:06.000000000,2018-06-05 12:33:09.000000000,closed,1,Typo fix
381,2018-06-03 23:05:39.000000000,2018-07-26 21:49:35.000000000,closed,19,Android UI dispatcher and isDispatchNeeded
380,2018-06-03 16:02:04.000000000,2018-06-04 13:01:08.000000000,closed,1,Extra methods generated in specific case (lambdas not inlined?)
379,2018-06-02 14:09:20.000000000,2018-06-05 12:30:31.000000000,closed,1,Fixed typo
378,2018-06-02 01:28:01.000000000,2018-10-11 22:40:15.000000000,closed,6,Join does not complete on class extending from AbstractCoroutine
377,2018-05-31 19:37:58.000000000,2018-10-11 22:39:49.000000000,closed,5,Stack size becomes negative after instruction [406] pop in
376,2018-05-31 18:55:06.000000000,2018-06-05 20:06:09.000000000,closed,3,Investigate possibility to implement runBlocking on Node.js using async_hooks
375,2018-05-30 10:31:10.000000000,2018-06-08 17:36:46.000000000,closed,0,CompletionStage.await shall unwrap CompletionException
374,2018-05-29 12:41:44.000000000,2018-05-31 10:50:28.000000000,closed,2,java.lang.NoSuchMethodError: kotlinx.coroutines.experimental.CancellableContinuationImpl
373,2018-05-29 10:06:29.000000000,2018-05-30 03:34:02.000000000,closed,1,Fixes #290: adds package-list to the files pushed to the gh-pages branch
372,2018-05-28 16:18:40.000000000,2018-07-04 11:09:42.000000000,closed,2,Race contition related to cancel breaks further jobs in CoroutineContext.
371,2018-05-25 20:32:31.000000000,2018-06-06 15:32:30.000000000,closed,0,CancellableContinuation improvements
370,2018-05-25 04:09:57.000000000,2018-06-11 12:59:51.000000000,closed,4,Error parsing triggers: Cannot find module 'atomicfu'
369,2018-05-23 19:49:18.000000000,2018-06-05 11:57:02.000000000,closed,0,Invoke exception handler for actor on cancellation even when channel …
368,2018-05-23 18:28:38.000000000,2018-06-08 17:36:46.000000000,closed,0,Actor ignores thrown exceptions
367,2018-05-23 16:21:25.000000000,2019-02-22 19:42:45.000000000,closed,20,Support for Android JetPack
366,2018-05-23 15:52:43.000000000,2018-05-23 16:17:32.000000000,closed,1,Unresolved reference: android & UI
365,2018-05-22 21:05:15.000000000,2018-05-23 19:41:46.000000000,closed,0,Introduce system property to control CommonPool parallelism
364,2018-05-22 16:52:38.000000000,2018-06-05 20:04:28.000000000,closed,2,invokeOnCancellation(onCancelling = false) should (probably) inhibit JobCancellationException
363,2018-05-17 12:51:35.000000000,2018-06-08 17:36:46.000000000,closed,0,A small piece of code reproducing ByteReadChannel bugs
362,2018-05-16 21:39:54.000000000,2018-07-17 19:09:10.000000000,closed,0,Channel fixes
361,2018-05-15 19:27:34.000000000,2018-05-28 19:34:04.000000000,closed,1,Why cancellation cause is sent to CoroutineExceptionHandler?
360,2018-05-15 18:09:45.000000000,2020-05-07 17:36:10.000000000,closed,12,Proposal: work with grpc-java team to provide binding layer and code generator for grpc-java
359,2018-05-14 17:06:12.000000000,2018-07-26 21:49:35.000000000,closed,0,Lost send in Channel during close
358,2018-05-11 21:43:39.000000000,2018-07-26 21:17:57.000000000,closed,5,API for creating a parent job backed by a  coroutineContext
357,2018-05-07 14:46:16.000000000,2018-05-22 20:48:37.000000000,closed,1,join() after cancel() will sometimes not wait for coroutine to finish executing fully
356,2018-05-07 10:14:34.000000000,2018-05-14 12:39:56.000000000,closed,7,CoroutineExceptionHandler doesn't receive exception thrown after cancellation
355,2018-05-05 13:30:00.000000000,2018-07-24 12:38:05.000000000,closed,3,kotlinx-coroutines-test modules
354,2018-05-04 12:56:40.000000000,2018-05-04 14:26:03.000000000,closed,7,Exceptions eaten after coroutine has been cancelled
353,2018-05-04 12:42:27.000000000,2018-05-14 12:53:03.000000000,closed,0,Binary compatibility validation
352,2018-05-04 11:50:14.000000000,2018-05-04 11:54:28.000000000,closed,2,JS Compiler Bug in Delegated Suspend Functions
351,2018-05-03 22:28:19.000000000,2018-06-27 14:39:42.000000000,closed,14,`DefaultDispatcher` - why is this the CommonPool?
350,2018-05-01 23:50:38.000000000,2018-05-14 17:52:29.000000000,closed,2,Change kotlin to be a peer dependency
349,2018-05-01 14:39:21.000000000,2018-05-03 13:42:47.000000000,closed,1,Allow to change the default dispatcher
348,2018-04-27 13:47:06.000000000,2018-06-08 17:36:45.000000000,closed,0,"Remove @Suppress(""EXPECTED_DECLARATION_WITH_DEFAULT_PARAMETER"")"
347,2018-04-27 11:59:23.000000000,2018-09-26 20:17:42.000000000,closed,0,"rxSingle, rxObservable nullity"
346,2018-04-24 20:08:40.000000000,2018-05-14 12:41:21.000000000,closed,2,"async (CommonPool) do not work with the emulator Android 5, 6"
345,2018-04-24 01:26:59.000000000,2020-04-20 18:29:45.000000000,closed,11,Exception handling using launch instead of relying on async
344,2018-04-22 19:49:51.000000000,2018-04-26 12:09:32.000000000,closed,1,JS channels
343,2018-04-21 20:42:28.000000000,2018-06-08 17:36:46.000000000,closed,2,CommonPool should be configurable to have a minimum number of threads
342,2018-04-21 20:34:07.000000000,2018-06-07 13:49:16.000000000,closed,5,Deferred has no map function
341,2018-04-20 12:37:08.000000000,2018-07-26 21:49:35.000000000,closed,10,Provide Channel.invokeOnClose { ... } function
340,2018-04-19 23:48:11.000000000,2018-06-08 17:36:46.000000000,closed,5,Calling launch in kotlinjs causes a TypeError to be logged
339,2018-04-19 23:36:40.000000000,2018-06-08 17:36:45.000000000,closed,2,kotlin should be defined as a peer dependency to kotlinx-coroutines-core
338,2018-04-18 19:41:12.000000000,2018-04-24 14:38:56.000000000,closed,0,Build with snapshot kotlin and fix issues emerging from that
337,2018-04-18 19:16:11.000000000,2018-04-19 00:42:11.000000000,closed,3,CommonPool possibly not scheduling fair in some cases
336,2018-04-18 15:59:40.000000000,2018-07-24 12:39:36.000000000,closed,0,kotlinx-coroutines-test modules
335,2018-04-18 15:54:59.000000000,2018-06-07 12:56:27.000000000,closed,2,Implement ticker channel
334,2018-04-17 17:21:52.000000000,2018-04-29 12:45:23.000000000,closed,2,Decouple AbstractContinuation and CancellableContinuation from Job interface
333,2018-04-17 13:57:24.000000000,2018-08-23 19:35:28.000000000,closed,12,Inconsistent cancellation and lost exceptions
332,2018-04-16 23:03:07.000000000,2019-06-07 01:02:26.000000000,closed,24,ConflatedChannel unexpected behavior
331,2018-04-14 23:01:27.000000000,2018-04-16 13:19:42.000000000,closed,9,Something like Deadlock
330,2018-04-14 20:20:17.000000000,1970-01-01 00:00:00.000000001,open,4,Implement receiveOrClosed for channels and select clause
329,2018-04-14 01:35:48.000000000,2020-04-20 18:24:58.000000000,closed,5,Add activation/inactivation tracking for broadcast channel
328,2018-04-14 01:29:47.000000000,2019-07-30 09:48:48.000000000,closed,18,launchConsumeEach terminal operator (name needed)
327,2018-04-13 20:17:18.000000000,2018-06-08 17:36:47.000000000,closed,1,Provide analogue of Observable.timer for channels
326,2018-04-12 14:15:40.000000000,2018-04-12 22:29:05.000000000,closed,6,[Critical] All Channel implementations leak every passed object
325,2018-04-11 21:52:59.000000000,2019-04-13 17:04:05.000000000,closed,6,Split `close(cause...)` into two interfaces
324,2018-04-11 20:04:19.000000000,2018-04-12 14:24:24.000000000,closed,1,"Allow negative timeouts in delay, withTimeout and onTimeout on JVM"
323,2018-04-11 20:03:35.000000000,2018-04-27 13:10:48.000000000,closed,3,awaitAll and joinAll extensions
322,2018-04-11 19:21:26.000000000,2018-05-22 20:54:50.000000000,closed,3,Consider adding Long overload of sumBy
321,2018-04-11 07:25:57.000000000,2018-04-12 08:41:19.000000000,closed,7,how to create new forkjoinpool context like CommonPool
320,2018-04-10 20:09:49.000000000,2018-06-15 15:55:22.000000000,closed,8,Async is not cancelled
319,2018-04-10 17:50:32.000000000,2018-10-11 22:39:20.000000000,closed,3,IllegalAccessException when using Actors with DexGuard
318,2018-04-10 15:56:21.000000000,2019-02-22 21:05:18.000000000,closed,5,"What's in a name? {Receive,Send}Channel"
317,2018-04-10 15:15:08.000000000,2018-04-11 23:23:40.000000000,closed,1,#316 Better way to set CoroutineContext#DEBUG value
316,2018-04-10 12:30:54.000000000,2018-06-08 17:36:44.000000000,closed,0,Better way to set CoroutineContext#DEBUG value
315,2018-04-10 12:18:16.000000000,2018-04-11 20:03:08.000000000,closed,1,Remove unavailable builder from js/kotlinx-coroutines-core-js/README.md
314,2018-04-09 12:43:19.000000000,2020-04-20 18:26:19.000000000,closed,1,Android example app need to be split into template and result
313,2018-04-09 12:08:02.000000000,2018-04-11 19:49:39.000000000,closed,1,updated dependencies for android sample apps
312,2018-04-07 18:19:40.000000000,2019-02-27 19:41:58.000000000,closed,12,Creating DAGs with channels - proposing transforms and pipes
311,2018-04-04 22:20:58.000000000,2018-05-16 16:30:07.000000000,closed,4,Remove SubscriptionReceiveChannel
310,2018-04-03 12:31:53.000000000,2018-06-08 17:36:44.000000000,closed,1,Methods with timeout should not crash on negative time
309,2018-04-03 01:17:26.000000000,2018-04-03 01:57:37.000000000,closed,2,How to catch this exception?
308,2018-04-02 17:27:54.000000000,2018-04-03 01:15:43.000000000,closed,2,Async never completes in this scenario (parent/child)
307,2018-03-31 10:49:23.000000000,2018-04-03 11:35:55.000000000,closed,2,Gradle Down
306,2018-03-28 07:45:13.000000000,2019-04-13 17:04:52.000000000,closed,2,about the coroutine channels distincting in a window
305,2018-03-28 04:52:08.000000000,2018-06-08 18:51:37.000000000,closed,4,Circular Exception delivered to invokeOnCompletion
304,2018-03-26 10:40:24.000000000,2018-03-27 22:46:16.000000000,closed,12,How to do conditional async execution?
303,2018-03-26 02:14:26.000000000,2018-04-11 19:28:17.000000000,closed,1,Kotlin version 1.2.31
302,2018-03-25 20:54:57.000000000,2018-03-27 10:17:02.000000000,closed,10,Usage Question - how to call suspend function from a doOnNext or subscribe handler
301,2018-03-24 03:17:12.000000000,2018-04-06 19:59:58.000000000,closed,4,Hash/Event channel
300,2018-03-23 20:07:45.000000000,2018-03-27 13:38:15.000000000,closed,6,Why is offerInternal and takeFirstReceiveOrPeekClosed using such high CPU time?
299,2018-03-22 11:52:13.000000000,2018-10-31 13:38:06.000000000,closed,2,Avoid `moreTest` task on `gradle build -x test` build
298,2018-03-22 02:56:49.000000000,2018-03-22 21:28:48.000000000,closed,2,Job prints error to stderr while Deferred does not
297,2018-03-22 01:15:58.000000000,2018-05-08 18:50:39.000000000,closed,10,Adding a test-helper class TestCoroutineContext.
296,2018-03-21 18:03:07.000000000,2018-03-22 17:01:15.000000000,closed,1, Fail if JDK_16 is not set
295,2018-03-20 23:33:28.000000000,2018-03-22 19:54:55.000000000,closed,1,ExecutorService extension that return closable CoroutineDispatcher #278
294,2018-03-20 17:19:30.000000000,2018-03-20 21:35:31.000000000,closed,3,fix: build fails if JDK_16 is not set
293,2018-03-20 12:04:08.000000000,2018-07-25 13:53:22.000000000,closed,3,Consider changing default capacity of actor's mailbox
292,2018-03-18 18:36:06.000000000,2018-05-16 13:35:46.000000000,closed,4,failing test? CompletableFuture.cancel
291,2018-03-18 18:29:50.000000000,2018-03-19 01:29:39.000000000,closed,17,build instructions?
290,2018-03-16 06:44:04.000000000,2018-06-08 17:36:46.000000000,closed,1,Missing package-list files in documentation
289,2018-03-15 17:47:50.000000000,2019-12-13 18:18:34.000000000,closed,8,Define awaitCancel helper function to produce callback-induced streams
288,2018-03-15 14:25:55.000000000,2018-08-23 19:43:15.000000000,closed,16,Not work on single core CPU
287,2018-03-15 06:48:16.000000000,2018-03-15 09:14:57.000000000,closed,1,how can I invoke the suspend fun with reflect way？would you tell me
286,2018-03-14 17:39:38.000000000,1970-01-01 00:00:00.000000001,open,1,CoroutineStart.UNDISPATCHED may cause withContext to not perform thread switch
285,2018-03-14 15:12:17.000000000,2020-04-20 19:16:11.000000000,closed,3,Rewrite channel operators on top of abstraction of cold streams
284,2018-03-13 18:27:28.000000000,2019-08-09 22:18:01.000000000,closed,15,Introduce interop between CoroutineContext and Reactor Context
283,2018-03-13 15:06:13.000000000,2018-06-08 17:36:46.000000000,closed,0,Remove SubscriptionReceiveChannel
282,2018-03-13 13:57:17.000000000,1970-01-01 00:00:00.000000001,open,2,"Channels need ability to specify ""disposing"" policy for their elements"
281,2018-03-13 07:01:43.000000000,2018-03-13 17:36:50.000000000,closed,2,Multiple consumeEach calls in the same coroutine?
280,2018-03-12 15:25:43.000000000,2018-06-11 12:59:51.000000000,closed,18,Introduce broadcast() extension to turn ReceiveChannel into BroadcastChannel
279,2018-03-12 13:23:41.000000000,2018-06-08 17:36:43.000000000,closed,10,consume: the unreliable way to cancel upstream sources for channel operators
278,2018-03-12 12:04:38.000000000,2018-06-08 17:36:44.000000000,closed,0,Provide ExecutorService.asCoroutineDispatcher that returns a closeable dispatcher
277,2018-03-11 20:24:19.000000000,2018-03-12 13:27:28.000000000,closed,6,Easy Unsubscription
276,2018-03-11 09:32:32.000000000,2018-07-27 13:24:44.000000000,closed,6,Kotlin await hangs in docker (alpine image)
275,2018-03-11 06:34:51.000000000,2018-03-12 21:26:33.000000000,closed,1,why not Concurrent
274,2018-03-08 14:43:27.000000000,2019-04-09 20:49:14.000000000,closed,56,Add Subscribable interfaces
273,2018-03-06 08:38:46.000000000,2018-03-06 14:47:59.000000000,closed,1,correctly spell the gradle compile string
272,2018-03-05 16:11:55.000000000,2018-05-16 13:59:17.000000000,closed,2,Launch not executing code
271,2018-03-05 16:11:54.000000000,2018-03-05 20:05:19.000000000,closed,0,launc
270,2018-03-05 13:16:50.000000000,2018-03-06 14:51:15.000000000,closed,3,Add a context argument to Channel.filterNot
269,2018-03-05 10:34:33.000000000,2018-03-05 14:10:37.000000000,closed,2,NoClassDefFoundError BuildersKt
268,2018-03-04 10:05:16.000000000,2018-03-05 20:02:15.000000000,closed,2,Update RxJava1 to RxJava2 in kotlinx-coroutines-rx-example
267,2018-03-03 14:45:02.000000000,2018-03-03 15:13:02.000000000,closed,5,Please add aReadline fucntion
266,2018-03-03 06:45:48.000000000,2018-03-05 19:48:30.000000000,closed,1,How to download jar file and run code demo in Command line? 
265,2018-03-02 21:56:40.000000000,2018-03-06 15:01:09.000000000,closed,1,Improved Android's onClick
264,2018-03-01 21:30:14.000000000,2018-11-06 16:15:48.000000000,closed,19,Make context combination more explicit with `copy()`
263,2018-02-28 20:10:11.000000000,2018-03-02 00:49:49.000000000,closed,13,Add conversion of CompletionStage to Deferred
262,2018-02-28 01:08:24.000000000,2018-03-05 20:14:22.000000000,closed,6,How should Java provide us with a `Deferred<T>`
261,2018-02-27 15:48:02.000000000,1970-01-01 00:00:00.000000001,open,18,Reimplement DefaultContext and newSingle/FixedThreadPoolContext via a shared pool of threads
260,2018-02-27 14:14:41.000000000,2018-07-25 13:58:45.000000000,closed,19,Introduce job property for channels
259,2018-02-26 18:27:09.000000000,2018-04-13 13:08:32.000000000,closed,1,Support mayInterruptIfRunning flag in CompletableFuture.await extension
258,2018-02-26 13:10:17.000000000,2019-02-22 19:37:19.000000000,closed,26,Android LiveData / architecture components integration
257,2018-02-24 19:53:22.000000000,2019-04-07 16:36:44.000000000,closed,3,Free-form transform operation on ReceiveChannel
256,2018-02-22 14:20:14.000000000,2018-02-23 23:46:11.000000000,closed,5,Failed to receive all elements when using produce with a buffered channel
255,2018-02-22 06:55:11.000000000,2018-09-26 20:17:41.000000000,closed,1,Clean up Android APIs for Java consumers.
254,2018-02-21 17:06:51.000000000,2019-04-13 16:57:54.000000000,closed,116,Provide abstraction for cold streams
253,2018-02-21 04:01:08.000000000,2018-02-24 04:33:39.000000000,closed,3,volley function wrapped with suspendCoroutine never finishes
252,2018-02-20 21:01:13.000000000,2019-12-13 17:47:12.000000000,closed,21,rxAwait calls the uncaught exception handler
251,2018-02-19 20:32:25.000000000,2019-01-16 21:48:03.000000000,closed,6,Uncaught exception when CompletableDeferred is completedExceptionally
250,2018-02-19 12:08:51.000000000,2018-02-22 18:08:22.000000000,closed,1,`produce` function only send the first element when used with unlimited channel capacity 
249,2018-02-19 08:39:44.000000000,2018-02-24 13:34:57.000000000,closed,2,Should Job have a failed state?
248,2018-02-17 03:29:07.000000000,2018-02-23 22:45:00.000000000,closed,6,Missing package kotlinx.coroutines.experimental.android
247,2018-02-16 02:51:07.000000000,2018-02-23 22:42:37.000000000,closed,4,Proguard: Unexpected error while computing stack sizes
246,2018-02-15 22:24:43.000000000,2018-07-26 21:49:35.000000000,closed,35,Add Support for Kotlin/Native
245,2018-02-15 18:12:33.000000000,2020-04-20 18:26:54.000000000,closed,20,ConflatedBroadcastChannel as ReadWriteProperty
244,2018-02-15 09:21:05.000000000,2018-02-16 20:50:23.000000000,closed,2,Add Channel to common library
243,2018-02-15 00:42:57.000000000,2018-02-22 02:27:12.000000000,closed,1,Fixed typo in README.md
242,2018-02-14 17:10:20.000000000,1970-01-01 00:00:00.000000001,open,25,EspressoIdlingResource integration
241,2018-02-12 22:15:17.000000000,2018-02-23 22:37:42.000000000,closed,4,Buffered Channels not providing all values for consumption 
240,2018-02-12 21:00:33.000000000,2018-10-31 13:35:31.000000000,closed,9,"Closeable with suspendable aClose, and suspendable use extension."
239,2018-02-12 09:59:01.000000000,2018-02-25 01:11:28.000000000,closed,1,#238 -Added naive PriorityChannel implementation
238,2018-02-12 09:04:31.000000000,2018-02-25 01:10:20.000000000,closed,10,Feature - Priority Channel
237,2018-02-11 18:15:05.000000000,2018-02-22 02:25:40.000000000,closed,3,Issue 216: Don't use ForkJoinPool if there is a SecurityManager present
236,2018-02-11 00:58:45.000000000,2018-03-05 20:14:23.000000000,closed,1,React-Native: `The provided value cannot be converted to a sequence.`
235,2018-02-11 00:45:07.000000000,2018-02-22 02:17:30.000000000,closed,1,Fix for Issue #230
234,2018-02-10 22:19:06.000000000,2018-02-10 22:58:50.000000000,closed,1,Lost return result
233,2018-02-09 18:18:16.000000000,2018-02-09 19:01:50.000000000,closed,1,Exception in actor not handled by CoroutineExceptionHandler
232,2018-02-09 15:58:08.000000000,2019-02-22 19:38:30.000000000,closed,3,Room integration
231,2018-02-09 02:30:15.000000000,2018-02-09 09:02:12.000000000,closed,6,Error when use suspend function with room dao methods
230,2018-02-08 10:42:22.000000000,2018-02-23 23:46:11.000000000,closed,1,Crash using kotlinx-coroutines-core-js with React-Native
229,2018-02-08 01:02:15.000000000,2018-03-05 20:14:23.000000000,closed,3,JS: Upload kotlinx-coroutines-core-js library to npm
228,2018-02-07 18:57:47.000000000,1970-01-01 00:00:00.000000001,open,0,Lazy initialization of the parent job
227,2018-02-06 23:08:16.000000000,2018-07-26 21:49:34.000000000,closed,11,Fail-fast when trying to do `runBlocking` from Android UI thread
226,2018-02-06 21:00:50.000000000,2018-02-08 00:51:24.000000000,closed,0,receive() hangs if called on a closed broadcast channel
225,2018-02-06 16:19:53.000000000,2018-02-08 00:45:01.000000000,closed,1,Implementation of awaitFirstOrDefault and awaitFirstOrNull.
224,2018-02-06 13:54:51.000000000,2018-02-08 01:00:29.000000000,closed,4,Add `awaitFirstOrNull` to Rx integration modules
223,2018-02-06 09:19:11.000000000,2019-04-13 17:05:25.000000000,closed,7,Common `Cancelable` interface?
222,2018-02-06 09:07:43.000000000,2020-03-20 14:20:12.000000000,closed,11,"Channels, Jobs, etc. should allow listeners to be set for reactive handling"
221,2018-02-06 02:20:43.000000000,2018-02-08 15:03:59.000000000,closed,2,How to use LiveData + Coroutine?
220,2018-02-05 23:02:42.000000000,2018-09-26 20:17:41.000000000,closed,9,Abolish distinction between cancelled and failed Job/Deferred
219,2018-02-05 22:36:41.000000000,2018-06-08 17:36:45.000000000,closed,0,CancellableContinuation should not be a Job
218,2018-02-05 08:46:08.000000000,1970-01-01 00:00:00.000000001,open,1,Creation of a library implementor's guide
217,2018-02-04 05:31:58.000000000,2018-02-06 14:00:36.000000000,closed,1,README.md: Minor typo and typography fixes.
216,2018-02-03 23:21:33.000000000,2018-02-23 23:46:11.000000000,closed,46,Coroutines doesn't play well with JNLP security model
215,2018-02-01 21:20:29.000000000,2018-02-02 14:32:56.000000000,closed,1,Fix for #212.
214,2018-02-01 18:05:12.000000000,2018-02-08 00:51:24.000000000,closed,7,Provider kotlinx.coroutines.experimental.android.AndroidExceptionPreHandler not found
213,2018-02-01 03:49:27.000000000,2018-02-01 04:03:42.000000000,closed,1,Coroutine not waiting for completion of its children
212,2018-01-30 15:14:35.000000000,2018-02-08 00:51:24.000000000,closed,1,`withTimeout` hangs on objects with exception-throwing `equals`
211,2018-01-29 22:43:20.000000000,2018-01-30 12:24:44.000000000,closed,1,Update coroutines-guide.md
210,2018-01-29 14:28:30.000000000,2018-01-29 23:03:09.000000000,closed,0,actor function doc still references deprecated ActorJob
209,2018-01-29 13:40:50.000000000,2018-01-29 23:03:09.000000000,closed,5,Support runBlocking with arbitrary context
208,2018-01-23 14:16:54.000000000,2018-01-29 23:03:10.000000000,closed,4,Uncaught exception may not appear on console when main is waiting for a job
207,2018-01-17 14:43:17.000000000,2018-01-22 11:28:00.000000000,closed,10,On the issue of starting the coroutine。
206,2018-01-12 14:25:43.000000000,2018-01-13 17:51:17.000000000,closed,1,Async block in Fragment does not run after Instant Run
205,2018-01-11 16:08:01.000000000,2018-01-15 17:18:33.000000000,closed,9,coroutines-android:0.20 APK install problem
204,2018-01-11 13:42:35.000000000,2018-01-23 15:11:59.000000000,closed,1,Update coroutines-guide-ui.md
203,2018-01-11 13:31:37.000000000,2018-01-11 14:04:30.000000000,closed,0,Update coroutines-guide-ui.md
202,2018-01-10 15:42:44.000000000,1970-01-01 00:00:00.000000001,open,0,Implement overloads for standard suspending functions with timeout
201,2018-01-10 03:32:07.000000000,2018-06-08 17:36:45.000000000,closed,7,MPP Channel
200,2018-01-08 18:57:25.000000000,2018-01-10 14:29:23.000000000,closed,0,Update coroutines-guide.md
199,2018-01-06 11:37:48.000000000,2018-01-13 13:40:09.000000000,closed,5,Plain Job doesn't wait for children on join()
198,2018-01-05 23:30:39.000000000,2018-09-28 20:31:34.000000000,closed,1,Using the sample code does not reproduce the problem
197,2018-01-03 14:52:08.000000000,2018-01-15 17:18:33.000000000,closed,1,Publisher hangs on receive
196,2017-12-29 23:17:48.000000000,2018-01-12 21:09:18.000000000,closed,7,"""Already resumed""  error with firestore realtime database"
195,2017-12-29 19:19:23.000000000,2017-12-29 20:21:23.000000000,closed,4,runBlocking is missing in common module
194,2017-12-29 17:25:52.000000000,2018-01-13 13:40:09.000000000,closed,1,JS: Use window.postMessage instead of setTimeout for coroutines inside the browser
193,2017-12-29 14:00:08.000000000,2017-12-29 17:20:59.000000000,closed,1,[QUESTION] about kotlinx-io and kotlinx-coroutines-io
192,2017-12-28 23:40:28.000000000,2017-12-29 17:22:35.000000000,closed,9,Custom coroutine functions do not allow suspension functions inside the body
191,2017-12-25 00:55:34.000000000,2017-12-25 11:41:48.000000000,closed,0,fix typos
190,2017-12-19 13:50:44.000000000,2017-12-28 20:11:26.000000000,closed,15,Optimize `runBlocking` and `EventLoop` implementations
189,2017-12-18 01:34:46.000000000,2017-12-18 12:10:43.000000000,closed,0,Remove duplicated word from coroutines-guide.md
188,2017-12-16 19:19:44.000000000,2017-12-19 13:46:20.000000000,closed,1,Coroutines confined to the UI thread – example is missing
187,2017-12-16 03:14:52.000000000,2019-05-28 23:55:32.000000000,closed,2,Some of ext. functions are implicit
186,2017-12-13 19:57:43.000000000,2017-12-13 20:34:33.000000000,closed,0,Text in second example of Guide
185,2017-12-12 12:00:15.000000000,2018-03-06 15:46:24.000000000,closed,0,Add debug information in Channels `toString` method
184,2017-12-07 21:17:38.000000000,2017-12-08 18:20:30.000000000,closed,9,How to do UnitTests for classes based on corroutines?
183,2017-12-06 20:28:35.000000000,2017-12-18 12:11:21.000000000,closed,0,Update Maven Central link to a more useful search
182,2017-12-06 17:50:30.000000000,2017-12-07 12:43:26.000000000,closed,2,Question regarding new parent parameter in builders
181,2017-12-06 14:57:51.000000000,2017-12-06 16:10:50.000000000,closed,2,Cancellation of an Actor after deprecation of ActorJob
180,2017-12-05 03:48:02.000000000,2019-12-13 18:16:00.000000000,closed,6,Problems with flatMap function on ReceiveChannel<T>
179,2017-12-04 23:12:04.000000000,2017-12-07 12:43:56.000000000,closed,1,NPE during compilation
178,2017-12-04 15:20:34.000000000,2017-12-04 17:01:51.000000000,closed,1,Update README.md
177,2017-12-02 17:31:33.000000000,2017-12-04 19:39:28.000000000,closed,3,Coroutine inside a CoroutineExceptionHandler causes a java.lang.VerifyError when triggered in Android
176,2017-11-30 20:10:23.000000000,2017-12-07 13:39:20.000000000,closed,1,Mocking exception scenarios for suspend function
175,2017-11-30 03:18:18.000000000,2017-11-30 12:26:50.000000000,closed,1,About '@Volatile ' problem?
174,2017-11-30 02:14:48.000000000,2017-11-30 13:08:11.000000000,closed,0,Reactive default context
173,2017-11-29 19:23:54.000000000,2017-11-30 12:28:16.000000000,closed,3,withTimeOut not throw exception
172,2017-11-29 18:41:50.000000000,1970-01-01 00:00:00.000000001,open,13,"Support ""worker pool"" pattern in actor builder and other related operators"
171,2017-11-29 15:25:51.000000000,2018-06-08 17:36:45.000000000,closed,9,Introduce awaitAll and joinAll extensions for collections for Deferreds/Jobs
170,2017-11-28 14:40:24.000000000,2017-12-11 13:54:04.000000000,closed,1,Base class for actors and producers
169,2017-11-28 14:38:49.000000000,1970-01-01 00:00:00.000000001,open,1,"Actor need to support termination message, stop accepting messages, discard, terminate"
168,2017-11-26 22:32:45.000000000,2017-11-27 15:12:47.000000000,closed,5,AsynchronousSocketChannel hangs during amplification stress test
167,2017-11-20 13:54:35.000000000,2019-05-20 15:54:54.000000000,closed,13,Fail-fast when trying to consume a channel multiple times
166,2017-11-16 19:00:46.000000000,2017-12-04 16:41:59.000000000,closed,6,Hard to grasp coroutine explanation
165,2017-11-16 04:28:07.000000000,2017-11-16 12:36:03.000000000,closed,2,Support of ApacheHttpClient?
164,2017-11-14 17:50:59.000000000,2017-12-16 19:41:10.000000000,closed,3,Canceling a job while suspended in CompletableFuture.await should cancel the Future as well
163,2017-11-14 14:47:25.000000000,2017-11-15 01:37:01.000000000,closed,2,Kotlin 1.1.60 update
162,2017-11-12 16:23:47.000000000,2020-03-26 13:59:51.000000000,closed,5,Support for Java 9 Flow API
161,2017-11-10 16:33:37.000000000,2017-12-04 16:41:59.000000000,closed,2,Android UI delay does not work with Long.MAX_VALUE
160,2017-11-09 05:56:32.000000000,2017-12-04 16:41:59.000000000,closed,1,testGuideContextExample06 fails sometimes
159,2017-11-08 13:56:58.000000000,2020-02-18 18:10:08.000000000,closed,1,Integration with Scala Future
158,2017-11-07 14:34:21.000000000,2017-11-09 15:40:26.000000000,closed,8,example-select-03.kt crashes
157,2017-11-05 21:58:25.000000000,2017-11-06 01:50:16.000000000,closed,0,SendChannel.sendBlocking extension method
156,2017-11-03 04:00:06.000000000,2017-11-06 15:18:15.000000000,closed,5,Integration with jdk7
155,2017-11-02 14:14:11.000000000,2017-11-06 12:40:58.000000000,closed,7,about netty actor
154,2017-10-25 20:01:04.000000000,2017-10-25 23:07:21.000000000,closed,1,Help with kotlinx-coroutines-android
153,2017-10-22 00:49:40.000000000,2017-10-22 14:00:07.000000000,closed,1,"An exception has been caught by app, I don't know whether it should be an issue of coroutine or not. "
152,2017-10-20 16:51:44.000000000,2017-10-21 19:13:57.000000000,closed,0,UnexpectedCoroutineException when cancelling non-cancellable coroutines / race
151,2017-10-19 16:42:17.000000000,2017-10-21 19:13:58.000000000,closed,0,Nested coroutine built with run behaves as NonCancellable without explicit declaration of Job
150,2017-10-19 06:08:47.000000000,2017-10-19 06:52:05.000000000,closed,2,about metrics 
149,2017-10-18 12:40:41.000000000,2017-10-21 19:13:58.000000000,closed,0,newSingleThread/ThreadPoolContext shall not include a Job
148,2017-10-18 08:55:19.000000000,2017-12-04 16:41:59.000000000,closed,12,Coroutines do not log uncaught exceptions in Android
147,2017-10-17 09:05:36.000000000,2017-10-21 19:13:58.000000000,closed,13,RxAwait missing await(context: CoroutineContext)
146,2017-10-17 02:36:24.000000000,2017-10-17 12:20:49.000000000,closed,1,Add a default CoroutineContext to rxFlowable
145,2017-10-16 13:29:15.000000000,2020-03-26 14:04:44.000000000,closed,1,Update notification abstraction
144,2017-10-13 11:44:59.000000000,2017-10-13 17:59:10.000000000,closed,2,Weak ref auf CoroutineContext?
143,2017-10-10 13:55:55.000000000,2017-10-10 18:45:16.000000000,closed,8,"Confuse at ""Coroutine contexts can be combined using + operator"""
142,2017-10-07 03:11:45.000000000,2017-10-09 15:31:41.000000000,closed,2,Anyway to push exceptions to consume from produce or channel etc?
141,2017-10-06 17:16:30.000000000,2017-10-06 21:31:23.000000000,closed,2,Update Reactor support to leverage Bismuth release train
140,2017-10-06 16:20:30.000000000,2017-10-07 01:52:57.000000000,closed,2,Should I close channel explicitly like dispose in Rx? 
139,2017-10-04 21:50:13.000000000,2018-03-01 12:55:58.000000000,closed,0,`blocking` function #79
138,2017-10-04 20:57:39.000000000,2017-10-07 22:56:30.000000000,closed,2,ArrayBroadcastChannel throwing NPE for low capacity
137,2017-10-03 11:41:25.000000000,2017-10-06 21:33:58.000000000,closed,1,Android O Preview -> Android API level 26
136,2017-09-28 13:09:51.000000000,2017-09-29 23:56:42.000000000,closed,11,DefaultDispatcher
135,2017-09-26 14:15:22.000000000,2017-09-27 19:29:24.000000000,closed,0,Fix typo
134,2017-09-26 11:38:24.000000000,2017-12-28 20:11:25.000000000,closed,17,Rename `run`
133,2017-09-22 21:15:48.000000000,2017-09-30 00:00:28.000000000,closed,2,"Using CoroutineName as coroutine context leads to ""java.lang.IllegalArgumentException: Must be used with DispatchedContinuation"" on coroutine resume "
132,2017-09-21 23:01:14.000000000,2017-09-22 03:59:35.000000000,closed,1,Question on converting blocking execution to suspending execution
131,2017-09-20 20:00:37.000000000,2017-09-20 20:03:55.000000000,closed,0,Move to gradle
130,2017-09-20 17:52:39.000000000,2017-09-25 16:14:10.000000000,closed,6,how to run this code with jvm option?
129,2017-09-18 20:07:51.000000000,2017-09-29 23:55:47.000000000,closed,1,Source links are broken in 0.18
128,2017-09-18 16:53:11.000000000,2017-09-21 12:08:39.000000000,closed,1,about kotlinx-coroutines-quasar
127,2017-09-18 12:14:19.000000000,2017-12-04 16:41:59.000000000,closed,3,Redesign ProducerJob extension of Job
126,2017-09-18 04:37:39.000000000,2017-09-19 00:42:21.000000000,closed,6,Why the RxJava 1.x and 2.x Modules
125,2017-09-15 20:50:33.000000000,2017-09-30 00:00:54.000000000,closed,2,Parent coroutine shall wait for its children to complete
124,2017-09-14 16:08:21.000000000,2017-09-15 00:18:59.000000000,closed,2,Fix table in Job's KDoc
123,2017-09-14 16:07:23.000000000,1970-01-01 00:00:00.000000001,open,4,Conditional receive on channel
122,2017-09-14 13:52:56.000000000,2017-09-30 00:01:28.000000000,closed,3,Building channel producers example code causes exception randomly
121,2017-09-14 13:50:29.000000000,2017-09-14 22:39:40.000000000,closed,1,"Can i use coroutines in java, are there any examples?"
120,2017-09-14 06:27:11.000000000,2017-09-14 13:44:04.000000000,closed,2,About execution order
119,2017-09-14 03:47:22.000000000,2018-08-23 19:35:29.000000000,closed,10,Work with ThreadLocal-sensitive Components
118,2017-09-12 13:50:56.000000000,2017-09-15 00:10:12.000000000,closed,3,Duplicated(?) pseudo-constructor for Channels
117,2017-09-12 05:25:37.000000000,2017-09-13 07:26:17.000000000,closed,4,About its stability
116,2017-09-10 22:53:54.000000000,2017-09-30 00:01:52.000000000,closed,2,Android art Warning
115,2017-09-10 21:29:19.000000000,2017-09-15 13:34:49.000000000,closed,13,launch(CommonPool){ ... }.join() not resuming?
114,2017-09-10 09:25:48.000000000,2017-09-11 12:53:04.000000000,closed,4,Cancellation delivering design
113,2017-09-08 11:02:55.000000000,2018-03-14 15:49:55.000000000,closed,8,"Introduce single-producer, single-consumer channel abstraction"
112,2017-09-07 20:11:52.000000000,2017-09-30 00:02:08.000000000,closed,5,Publish to Maven Central
111,2017-09-07 02:46:15.000000000,1970-01-01 00:00:00.000000001,open,10,Channel possibly not acting fair
110,2017-09-06 12:02:08.000000000,2017-09-08 07:05:09.000000000,closed,3,production use
109,2017-09-06 10:08:42.000000000,2017-09-06 11:19:04.000000000,closed,2,in android DialogFragment synthetic cannot find View
108,2017-08-31 16:59:42.000000000,2017-09-30 00:02:28.000000000,closed,2,JavaFX Toolkit init problem (NoClassDefFoundError)
107,2017-08-31 12:04:30.000000000,2017-08-31 23:15:49.000000000,closed,5,ProGuard config
106,2017-08-23 18:18:41.000000000,2017-09-06 13:19:46.000000000,closed,3,Warp okhttp get ClassCastException
105,2017-08-21 14:21:21.000000000,2017-08-28 16:34:25.000000000,closed,4,There is still an error Error:Failed to resolve: com.google.android:android:2.3.1
104,2017-08-20 19:32:22.000000000,2018-05-14 18:06:15.000000000,closed,14,Pause a job
103,2017-08-20 19:29:48.000000000,2017-08-22 01:29:31.000000000,closed,5,ART crash with coroutines in obfuscated code
102,2017-08-20 17:27:37.000000000,2018-05-14 14:13:11.000000000,closed,9,UI android context and Looper.getMainLooper() not mocked
101,2017-08-09 16:30:12.000000000,2017-08-09 16:32:49.000000000,closed,0,Add kotlin-snapshot maven profile
100,2017-08-07 21:17:50.000000000,2017-09-14 22:40:49.000000000,closed,3,Default uncaught exception handler is ignored
99,2017-08-07 18:09:52.000000000,2017-08-31 18:30:57.000000000,closed,1,Byte channel
98,2017-08-04 00:03:45.000000000,2017-08-04 00:36:38.000000000,closed,3,AnalyserException: cannot pop operand off an empty stack.
97,2017-08-03 22:42:42.000000000,2017-08-18 18:39:40.000000000,closed,2,Closing SubscriptionReceiveChannel inside consumeEach throws NPE
96,2017-08-02 12:07:47.000000000,2017-08-03 22:09:28.000000000,closed,2,reactor.core.Cancellation is removed from project reactor from 3.1.0.M1
95,2017-07-31 11:14:28.000000000,2017-08-03 22:09:56.000000000,closed,0,Mutex fairness documentation (#90)
94,2017-07-31 11:04:51.000000000,1970-01-01 00:00:00.000000001,open,29,Read-write Mutex
93,2017-07-27 15:03:10.000000000,2017-07-31 20:10:12.000000000,closed,1,java.time adapters
92,2017-07-26 17:31:55.000000000,2017-08-16 16:51:21.000000000,closed,7,Add Mutex.holdsLock
91,2017-07-26 17:07:19.000000000,2017-07-28 06:53:34.000000000,closed,1,'owner' support for Mutex.withLock
90,2017-07-26 11:07:23.000000000,2017-07-31 11:13:41.000000000,closed,2,Mutex fairness policy
89,2017-07-24 19:45:38.000000000,2017-08-18 18:39:40.000000000,closed,2,Consider making TimeoutException public
88,2017-07-24 19:09:07.000000000,2017-11-20 13:46:10.000000000,closed,29,Channel operators
87,2017-07-22 09:55:39.000000000,1970-01-01 00:00:00.000000001,open,64,Writing complex actors
86,2017-07-21 17:43:50.000000000,2017-07-21 18:55:49.000000000,closed,0,"A ""CompletableDeferred"" interface with a private implementation (#70)"
85,2017-07-21 11:51:22.000000000,2017-07-21 23:10:33.000000000,closed,2,JCenter repository link messed up
84,2017-07-14 22:22:54.000000000,2017-11-06 20:54:50.000000000,closed,2,Event conflation
83,2017-07-12 11:54:58.000000000,2017-09-20 15:54:56.000000000,closed,2,Support for blocking calls inside coroutines (#79)
82,2017-07-11 01:27:00.000000000,2017-07-11 12:44:10.000000000,closed,1,DeferredCompletionSource ?
81,2017-07-07 09:27:52.000000000,2017-07-07 10:27:50.000000000,closed,2,How can I restart canceled job?
80,2017-07-06 16:20:13.000000000,2017-07-21 22:52:47.000000000,closed,6,Mutex.unlock with Unconfined dispatcher causes StackOverflowError
79,2017-07-05 12:59:15.000000000,2018-08-23 19:35:29.000000000,closed,45,IO thread pool for blocking calls
78,2017-07-04 19:26:41.000000000,2017-07-05 11:35:13.000000000,closed,4,Allow indirect calls to suspendable methods
77,2017-06-25 01:05:40.000000000,2017-06-26 11:53:03.000000000,closed,0,Fix typo
76,2017-06-20 13:07:23.000000000,1970-01-01 00:00:00.000000001,open,37,Serializability of coroutine classes
75,2017-06-20 03:50:41.000000000,2017-07-21 20:11:13.000000000,closed,3,"CoroutineScope ""context"" shadows Android context"
74,2017-06-19 17:00:02.000000000,2018-12-19 01:20:25.000000000,closed,33,Stack trace recovery
73,2017-06-18 11:38:38.000000000,2017-06-18 23:43:36.000000000,closed,0,fix typo.
72,2017-06-16 10:13:31.000000000,2017-06-16 17:17:55.000000000,closed,5,How can i wait for another thread operator complete? (coroutine+Thread)
71,2017-06-15 13:32:01.000000000,2017-06-23 21:55:38.000000000,closed,3,some problem when i use it
70,2017-06-13 15:52:16.000000000,2017-07-24 16:48:13.000000000,closed,21,"Introduce a ""sending side"" (settable) for Deferred"
69,2017-06-13 00:44:55.000000000,2017-08-18 16:42:14.000000000,closed,8,collect methods for ReceiveChannel.
68,2017-06-09 12:06:15.000000000,2017-06-09 12:13:39.000000000,closed,1,Fix error that fail to dispose handler when job is in SINGLE/SINGLE+ state
67,2017-06-08 01:56:54.000000000,2017-06-09 12:36:44.000000000,closed,10,withTimeoutOrNull returns null even when it did not timeout itself
66,2017-06-02 14:11:41.000000000,2017-06-07 13:59:29.000000000,closed,7,ConflatedBroadcastChannel hangs in offer()
65,2017-06-01 13:43:08.000000000,2017-06-09 18:04:42.000000000,closed,5,Basic CoroutineExceptionHandler implementation.
64,2017-05-31 23:45:35.000000000,2017-07-24 17:26:25.000000000,closed,21,Can't join a canceled task
63,2017-05-28 05:29:15.000000000,2017-05-29 12:49:24.000000000,closed,0,Fix typo in coroutines guide
62,2017-05-26 20:01:56.000000000,2018-09-26 20:17:40.000000000,closed,4,Add firebase database module
61,2017-05-19 19:48:06.000000000,2018-09-07 12:12:51.000000000,closed,25,Help newbies to handle exceptions in coroutines
60,2017-05-10 03:29:46.000000000,2017-05-29 12:51:51.000000000,closed,1,Add support for Rx1 Scheduler.
59,2017-05-10 03:25:56.000000000,2017-06-01 13:45:47.000000000,closed,7,CountDownLatch implementation
58,2017-05-09 02:11:39.000000000,2017-05-10 22:58:51.000000000,closed,5,Go-like WaitGroup to wait multiple coroutines to finish
57,2017-04-17 11:48:13.000000000,2020-04-23 12:55:50.000000000,closed,14,Support optional thread interrupt in newSingleThreadContext as its friends
56,2017-04-13 21:02:15.000000000,2017-04-17 13:34:00.000000000,closed,0,Fix wrong word
55,2017-04-11 08:14:44.000000000,2017-04-11 11:04:14.000000000,closed,0,Fix small typo in coroutines-guide.md.
54,2017-04-05 14:07:04.000000000,2017-06-22 16:00:02.000000000,closed,13,Broadcast channel
53,2017-03-31 21:56:40.000000000,2017-04-05 13:41:57.000000000,closed,0,Correct typo in coroutines-guide-reactive.md
52,2017-03-31 01:35:36.000000000,2017-04-06 23:11:57.000000000,closed,1,#51 Add support for Reactor.
51,2017-03-31 01:35:01.000000000,2017-04-06 23:15:58.000000000,closed,1,Add support for Reactor
50,2017-03-31 00:46:51.000000000,2017-04-07 11:22:59.000000000,closed,1,#49 Rx1 Completable.awaitCompleted implementation.
49,2017-03-30 17:51:14.000000000,2017-04-07 11:27:08.000000000,closed,1,Add support for Completable
48,2017-03-30 10:48:33.000000000,2017-04-04 10:08:58.000000000,closed,8,wrapping callbacks that fire more than once
47,2017-03-28 21:06:10.000000000,2017-05-16 16:54:40.000000000,closed,28,Lifecycle handling
46,2017-03-25 18:36:33.000000000,2017-03-27 19:57:08.000000000,closed,1,fix readme typo
45,2017-03-24 21:02:46.000000000,2017-04-07 11:26:40.000000000,closed,1,Add support for Rx2 Maybe.
44,2017-03-24 20:47:01.000000000,2017-04-07 11:27:16.000000000,closed,1,Add support for Rx2 Maybe
43,2017-03-23 00:21:27.000000000,2017-03-27 01:39:34.000000000,closed,2,0.14 not in jcenter
42,2017-03-18 00:50:53.000000000,2017-03-20 11:16:25.000000000,closed,0,fix typos in comments
41,2017-03-17 12:53:18.000000000,2018-09-12 11:49:58.000000000,closed,14,CoroutineDispatcher's names
40,2017-03-15 16:44:52.000000000,2017-03-15 18:31:03.000000000,closed,0,kotlinx-coroutines-android: set android dependency scope to provided …
39,2017-03-15 16:20:24.000000000,2017-03-16 10:37:43.000000000,closed,0,Implement awaitFirstOrDefault for RxJava1
38,2017-03-15 16:05:32.000000000,2017-03-15 19:16:42.000000000,closed,5,HandlerContext: check if the current thread is associated with the correct looper
37,2017-03-15 14:22:11.000000000,2017-03-16 12:11:31.000000000,closed,1,Add awaitFirstOrDefault to Rx
36,2017-03-15 01:31:20.000000000,2017-03-15 12:00:11.000000000,closed,2,Add Mutex.withMutex
35,2017-03-08 13:01:52.000000000,2017-03-27 01:40:54.000000000,closed,1,Add Repo-Info to Tutorial
34,2017-03-02 11:43:34.000000000,2017-03-02 12:14:51.000000000,closed,11,"Unresolved reference: ""launch"""
33,2017-03-01 18:48:07.000000000,2017-12-28 20:12:20.000000000,closed,11,JavaScript support
32,2017-03-01 02:42:30.000000000,2017-03-01 14:29:30.000000000,closed,2,[Support] What happened to kotlinx.coroutines.generate?
31,2017-02-19 18:26:55.000000000,2017-02-20 17:49:42.000000000,closed,0,Job.onCompletion deprecation template fixed
30,2017-02-08 13:41:39.000000000,2017-02-08 17:43:53.000000000,closed,3,How to convert a callback to a Deferred on JDK6
29,2017-02-07 20:07:49.000000000,2017-02-07 22:52:02.000000000,closed,0,Update coroutines-guide.md
28,2017-02-03 00:12:30.000000000,2017-02-03 00:24:37.000000000,closed,0,Update 1.1.0-beta-37 to 1.1.0-beta-38
27,2017-02-02 01:35:27.000000000,2017-02-02 11:15:27.000000000,closed,0,Fixes the typo in the coroutines-guide.md
26,2017-01-27 21:57:34.000000000,2017-01-31 21:57:18.000000000,closed,0,Remove unnecassary call to Observable::take.
25,2017-01-23 11:56:56.000000000,2017-03-01 19:52:14.000000000,closed,2,it would be good to have a readme per module to provide some
24,2017-01-23 00:23:51.000000000,2017-01-23 08:39:11.000000000,closed,1,Link to download page for JAR?
23,2017-01-21 00:46:20.000000000,2017-01-21 01:05:36.000000000,closed,0,Use available port instead of a random port
22,2017-01-19 15:57:00.000000000,2017-01-19 15:58:03.000000000,closed,1,Fix typo in README.md
21,2017-01-18 23:59:03.000000000,2017-01-19 14:26:20.000000000,closed,0,New implementation for 1.1-Beta
20,2017-01-17 20:28:59.000000000,2017-01-19 19:14:09.000000000,closed,1,Changed comment because I think it was backwards.
19,2017-01-07 13:01:35.000000000,2017-01-09 17:22:02.000000000,closed,1,Alternative naming for `generate-yeild`
18,2016-12-22 19:13:06.000000000,2017-02-08 18:20:54.000000000,closed,1,asyncGenerate + extensions
17,2016-12-21 22:54:39.000000000,2016-12-22 01:16:04.000000000,closed,0,README: clarify what are the required dependencies and where to get them
16,2016-12-21 22:17:54.000000000,2017-01-18 23:59:31.000000000,closed,0,asyncRxGenerate to produce a cold Observable using coroutine that `emit` items
15,2016-12-21 18:32:56.000000000,2016-12-22 01:16:04.000000000,closed,0,0.2-alpha-1 doesn't work with Kotlin 1.1-M03
14,2016-12-21 17:57:40.000000000,2017-01-18 23:59:52.000000000,closed,0,asyncRx suspending iterator
13,2016-12-21 17:50:55.000000000,2016-12-21 17:56:34.000000000,closed,1,asyncRx suspending iterator
12,2016-12-21 14:31:06.000000000,2017-01-18 23:59:59.000000000,closed,0,Update project files for 1.1-M04
11,2016-11-27 22:14:19.000000000,2016-12-02 00:44:11.000000000,closed,2,[Request] Netty/Undertow async http example
10,2016-11-19 02:34:49.000000000,2017-01-24 14:23:09.000000000,closed,3,aAccept() accepts only one connection
9,2016-11-08 09:04:33.000000000,2017-03-01 19:51:58.000000000,closed,1,Feature Request: kotlinx-coroutines-rx for rxjava2
8,2016-10-25 02:39:08.000000000,2016-12-22 04:41:41.000000000,closed,1,yieldAll through nested iterators
7,2016-08-29 21:52:50.000000000,2017-01-19 19:12:36.000000000,closed,4,yieldAll and recursive generators
6,2016-07-27 10:03:49.000000000,2016-07-27 11:04:12.000000000,closed,1,Fixed packaged names
5,2016-07-18 00:31:29.000000000,2016-07-27 11:06:38.000000000,closed,1,Version in README is 0.1-alpha-1 but actual version is 0.1-alpha
4,2016-07-17 15:52:08.000000000,2016-07-27 11:05:56.000000000,closed,1,Modify Rx tests to work with real asynchronous observables
3,2016-06-24 12:16:05.000000000,2017-01-19 19:16:49.000000000,closed,2,Execution of async code in a new thread
2,2016-06-23 19:33:19.000000000,2017-01-19 19:11:39.000000000,closed,1,IO suspend methods are mixed into FutureController
1,2016-06-23 19:26:55.000000000,2017-01-19 19:11:06.000000000,closed,1,"asyncUI returns Unit, and not a future"
